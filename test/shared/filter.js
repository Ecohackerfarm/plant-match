/**
 * Crop filtering
 */

const { assert } = require('chai');
const { filterAndSort } = require('../../shared/filter.js');
const Crop = require('../../shared/crop.js');
const PracticalplantsCrop = require('../../shared/practicalplants-crop.js');

describe('Crop filtering', () => {
  let crops;
  let nameToCrop;

  before(() => {
    crops = PracticalplantsCrop.convertToCrops(
      require('../../db/practicalplants-data.js')
    );
    nameToCrop = Crop.mapCropsByBinomialName(crops);
  });

  it('number of crops for elementary filtering operations', () => {
    /* TODO Add tests for every property, every enum value, every hardiness zone value, every boolean value, etc. */
    assert.equal(
      13,
      filterAndSort(
        crops,
        [],
        [{ property: 'commonName', search: 'bean' }],
        false
      ).length,
      'commonName'
    );
    assert.equal(
      1827,
      filterAndSort(
        crops,
        [],
        [{ property: 'hardinessZone', min: 7, max: 9 }],
        false
      ).length,
      'hardinessZone'
    );
    assert.equal(
      3,
      filterAndSort(crops, [], [{ property: 'pollution', value: true }], false)
        .length,
      'pollution'
    );
    assert.equal(
      5712,
      filterAndSort(
        crops,
        [],
        [{ property: 'soilTexture', values: ['clay'] }],
        false
      ).length,
      'soilTexture'
    );
  });

  it('number of compatible crops for each crop', () => {
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Abelia triflora']], [], false).length,
      'Abelia triflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Abelmoschus esculentus']], [], false)
        .length,
      'Abelmoschus esculentus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Abelmoschus manihot']], [], false)
        .length,
      'Abelmoschus manihot'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Abelmoschus moschatus']], [], false)
        .length,
      'Abelmoschus moschatus'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies alba']], [], false).length,
      'Abies alba'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies amabilis']], [], false).length,
      'Abies amabilis'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Abies balsamea']], [], false).length,
      'Abies balsamea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Abies cephalonica']], [], false).length,
      'Abies cephalonica'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies concolor']], [], false).length,
      'Abies concolor'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies delavayi']], [], false).length,
      'Abies delavayi'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies firma']], [], false).length,
      'Abies firma'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies fraseri']], [], false).length,
      'Abies fraseri'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies grandis']], [], false).length,
      'Abies grandis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies homolepis']], [], false).length,
      'Abies homolepis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies lasiocarpa']], [], false).length,
      'Abies lasiocarpa'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies magnifica']], [], false).length,
      'Abies magnifica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies mariesii']], [], false).length,
      'Abies mariesii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Abies nordmanniana']], [], false)
        .length,
      'Abies nordmanniana'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Abies pindrow']], [], false).length,
      'Abies pindrow'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies procera']], [], false).length,
      'Abies procera'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies recurvata']], [], false).length,
      'Abies recurvata'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Abies religiosa']], [], false).length,
      'Abies religiosa'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Abies sachalinensis']], [], false)
        .length,
      'Abies sachalinensis'
    );
    assert.equal(
      6003,
      filterAndSort(crops, [nameToCrop['Abies sibirica']], [], false).length,
      'Abies sibirica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies spectabilis']], [], false).length,
      'Abies spectabilis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Abies squamata']], [], false).length,
      'Abies squamata'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Abies veitchii']], [], false).length,
      'Abies veitchii'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Abies veitchii sikokiana']], [], false)
        .length,
      'Abies veitchii sikokiana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Abobra tenuifolia']], [], false).length,
      'Abobra tenuifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Abronia fragrans']], [], false).length,
      'Abronia fragrans'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Abronia latifolia']], [], false).length,
      'Abronia latifolia'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Abronia turbinata']], [], false).length,
      'Abronia turbinata'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Abronia villosa']], [], false).length,
      'Abronia villosa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon megapotamicum']], [], false)
        .length,
      'Abutilon megapotamicum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon ochsenii']], [], false).length,
      'Abutilon ochsenii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Abutilon pictum']], [], false).length,
      'Abutilon pictum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Abutilon purpurascens']], [], false)
        .length,
      'Abutilon purpurascens'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon  species']], [], false).length,
      'Abutilon  species'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Abutilon theophrasti']], [], false)
        .length,
      'Abutilon theophrasti'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon vitifolium']], [], false)
        .length,
      'Abutilon vitifolium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon x hybridum']], [], false)
        .length,
      'Abutilon x hybridum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon x milleri']], [], false)
        .length,
      'Abutilon x milleri'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Abutilon x suntense']], [], false)
        .length,
      'Abutilon x suntense'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Acacia aneura']], [], false).length,
      'Acacia aneura'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acacia coriacea']], [], false).length,
      'Acacia coriacea'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acacia cultriformis']], [], false)
        .length,
      'Acacia cultriformis'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Acacia dealbata']], [], false).length,
      'Acacia dealbata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Acacia decurrens']], [], false).length,
      'Acacia decurrens'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acacia farnesiana']], [], false).length,
      'Acacia farnesiana'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Acacia longifolia']], [], false).length,
      'Acacia longifolia'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Acacia melanoxylon']], [], false)
        .length,
      'Acacia melanoxylon'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Acacia mucronata']], [], false).length,
      'Acacia mucronata'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acacia paradoxa']], [], false).length,
      'Acacia paradoxa'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Acacia podalyriifolia']], [], false)
        .length,
      'Acacia podalyriifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acacia retinodes']], [], false).length,
      'Acacia retinodes'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acacia saligna']], [], false).length,
      'Acacia saligna'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acacia sophorae']], [], false).length,
      'Acacia sophorae'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Acacia verticillata']], [], false)
        .length,
      'Acacia verticillata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acaenia anserinifolia']], [], false)
        .length,
      'Acaenia anserinifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acalypha australis']], [], false)
        .length,
      'Acalypha australis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Acanthus mollis']], [], false).length,
      'Acanthus mollis'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Acca sellowiana']], [], false).length,
      'Acca sellowiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer acuminatum']], [], false).length,
      'Acer acuminatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Acer argutum']], [], false).length,
      'Acer argutum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer caesium']], [], false).length,
      'Acer caesium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Acer campestre']], [], false).length,
      'Acer campestre'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acer carpinifolium']], [], false)
        .length,
      'Acer carpinifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acer circinatum']], [], false).length,
      'Acer circinatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer crataegifolium']], [], false)
        .length,
      'Acer crataegifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer distylum']], [], false).length,
      'Acer distylum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer ginnala']], [], false).length,
      'Acer ginnala'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acer glabrum']], [], false).length,
      'Acer glabrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acer interius']], [], false).length,
      'Acer interius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acer macrophyllum']], [], false).length,
      'Acer macrophyllum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acer mono']], [], false).length,
      'Acer mono'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Acer negundo']], [], false).length,
      'Acer negundo'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Acer oblongum']], [], false).length,
      'Acer oblongum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acer palmatum']], [], false).length,
      'Acer palmatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acer pectinatum']], [], false).length,
      'Acer pectinatum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Acer pensylvanicum']], [], false)
        .length,
      'Acer pensylvanicum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Acer platanoides']], [], false).length,
      'Acer platanoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acer pseudoplatanus']], [], false)
        .length,
      'Acer pseudoplatanus'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Acer rubrum']], [], false).length,
      'Acer rubrum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Acer saccharinum']], [], false).length,
      'Acer saccharinum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Acer saccharum']], [], false).length,
      'Acer saccharum'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Acer saccharum grandidentatum']],
        [],
        false
      ).length,
      'Acer saccharum grandidentatum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Acer saccharum nigrum']], [], false)
        .length,
      'Acer saccharum nigrum'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Acer spicatum']], [], false).length,
      'Acer spicatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Acer sterculiaceum']], [], false)
        .length,
      'Acer sterculiaceum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Acer tataricum']], [], false).length,
      'Acer tataricum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acer truncatum']], [], false).length,
      'Acer truncatum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Acer ukurunduense caudatum']],
        [],
        false
      ).length,
      'Acer ukurunduense caudatum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Achillea ageratum']], [], false).length,
      'Achillea ageratum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Achillea erba-rotta moschata']],
        [],
        false
      ).length,
      'Achillea erba-rotta moschata'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Achillea millefolium']], [], false)
        .length,
      'Achillea millefolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Achillea ptarmica']], [], false).length,
      'Achillea ptarmica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Achillea santolina']], [], false)
        .length,
      'Achillea santolina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Achillea sibirica']], [], false).length,
      'Achillea sibirica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Achnatherum hymenoides']], [], false)
        .length,
      'Achnatherum hymenoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Achyranthes aspera']], [], false)
        .length,
      'Achyranthes aspera'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Achyranthes bidentata']], [], false)
        .length,
      'Achyranthes bidentata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Achyranthes faureri']], [], false)
        .length,
      'Achyranthes faureri'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Achyranthes japonica']], [], false)
        .length,
      'Achyranthes japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acinos alpinus']], [], false).length,
      'Acinos alpinus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Acinos arvensis']], [], false).length,
      'Acinos arvensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Acinos rotundifolius']], [], false)
        .length,
      'Acinos rotundifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aciphylla colensoi']], [], false)
        .length,
      'Aciphylla colensoi'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aciphylla squarrosa']], [], false)
        .length,
      'Aciphylla squarrosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum balfourii']], [], false)
        .length,
      'Aconitum balfourii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Aconitum carmichaelii']], [], false)
        .length,
      'Aconitum carmichaelii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum chasmanthum']], [], false)
        .length,
      'Aconitum chasmanthum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum chinense']], [], false).length,
      'Aconitum chinense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum columbianum']], [], false)
        .length,
      'Aconitum columbianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum delphinifolium']], [], false)
        .length,
      'Aconitum delphinifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum dienorrhizum']], [], false)
        .length,
      'Aconitum dienorrhizum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum ferox']], [], false).length,
      'Aconitum ferox'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum fischeri']], [], false).length,
      'Aconitum fischeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum gammiei']], [], false).length,
      'Aconitum gammiei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aconitum hemsleyanum']], [], false)
        .length,
      'Aconitum hemsleyanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum heterophyllum']], [], false)
        .length,
      'Aconitum heterophyllum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aconitum japonicum']], [], false)
        .length,
      'Aconitum japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum koreanum']], [], false).length,
      'Aconitum koreanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum kusnezoffii']], [], false)
        .length,
      'Aconitum kusnezoffii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Aconitum lycoctonum']], [], false)
        .length,
      'Aconitum lycoctonum'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Aconitum lycoctonum vulparia']],
        [],
        false
      ).length,
      'Aconitum lycoctonum vulparia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum maximum']], [], false).length,
      'Aconitum maximum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum mokchangense']], [], false)
        .length,
      'Aconitum mokchangense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum multifidum']], [], false)
        .length,
      'Aconitum multifidum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum napellus']], [], false).length,
      'Aconitum napellus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum orientale']], [], false)
        .length,
      'Aconitum orientale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum palmatum']], [], false).length,
      'Aconitum palmatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum rotundifolium']], [], false)
        .length,
      'Aconitum rotundifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum septentrionale']], [], false)
        .length,
      'Aconitum septentrionale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum uncinatum']], [], false)
        .length,
      'Aconitum uncinatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aconitum violaceum']], [], false)
        .length,
      'Aconitum violaceum'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Aconitum volubile']], [], false).length,
      'Aconitum volubile'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Acorus calamus']], [], false).length,
      'Acorus calamus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Acorus gramineus']], [], false).length,
      'Acorus gramineus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Acourtia microcephala']], [], false)
        .length,
      'Acourtia microcephala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acrotriche aggregata']], [], false)
        .length,
      'Acrotriche aggregata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acrotriche depressa']], [], false)
        .length,
      'Acrotriche depressa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acrotriche prostrata']], [], false)
        .length,
      'Acrotriche prostrata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Acrotriche serrulata']], [], false)
        .length,
      'Acrotriche serrulata'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Actaea pachypoda']], [], false).length,
      'Actaea pachypoda'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Actaea rubra']], [], false).length,
      'Actaea rubra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Actaea spicata']], [], false).length,
      'Actaea spicata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinea acaulis arizonica']], [], false)
        .length,
      'Actinea acaulis arizonica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Actinidia arguta']], [], false).length,
      'Actinidia arguta'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia arguta cordifolia']],
        [],
        false
      ).length,
      'Actinidia arguta cordifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia arguta rufa']], [], false)
        .length,
      'Actinidia arguta rufa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia arisanensis']], [], false)
        .length,
      'Actinidia arisanensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia asymmetrica']], [], false)
        .length,
      'Actinidia asymmetrica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia callosa']], [], false).length,
      'Actinidia callosa'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia callosa formosana']],
        [],
        false
      ).length,
      'Actinidia callosa formosana'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Actinidia callosa henryi']], [], false)
        .length,
      'Actinidia callosa henryi'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia callosa indochinensis']],
        [],
        false
      ).length,
      'Actinidia callosa indochinensis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia callosa pubescens']],
        [],
        false
      ).length,
      'Actinidia callosa pubescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia chinensis']], [], false)
        .length,
      'Actinidia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia coriacea']], [], false)
        .length,
      'Actinidia coriacea'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Actinidia deliciosa']], [], false)
        .length,
      'Actinidia deliciosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia eriantha']], [], false)
        .length,
      'Actinidia eriantha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia fortunatii']], [], false)
        .length,
      'Actinidia fortunatii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia fulvicoma']], [], false)
        .length,
      'Actinidia fulvicoma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia giraldii']], [], false)
        .length,
      'Actinidia giraldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia glabra']], [], false).length,
      'Actinidia glabra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia hemsleyana']], [], false)
        .length,
      'Actinidia hemsleyana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia henryi']], [], false).length,
      'Actinidia henryi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia holotricha']], [], false)
        .length,
      'Actinidia holotricha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia hypoleuca']], [], false)
        .length,
      'Actinidia hypoleuca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia kiusiana']], [], false)
        .length,
      'Actinidia kiusiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Actinidia kolomikta']], [], false)
        .length,
      'Actinidia kolomikta'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia kolomikta gagnepainii']],
        [],
        false
      ).length,
      'Actinidia kolomikta gagnepainii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia kwangsiensis']], [], false)
        .length,
      'Actinidia kwangsiensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia lanceolata']], [], false)
        .length,
      'Actinidia lanceolata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia latifolia']], [], false)
        .length,
      'Actinidia latifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia longicauda']], [], false)
        .length,
      'Actinidia longicauda'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia maloides']], [], false)
        .length,
      'Actinidia maloides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia melanandra']], [], false)
        .length,
      'Actinidia melanandra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia melliana']], [], false)
        .length,
      'Actinidia melliana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia petelotii']], [], false)
        .length,
      'Actinidia petelotii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia pilosula']], [], false)
        .length,
      'Actinidia pilosula'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Actinidia polygama']], [], false)
        .length,
      'Actinidia polygama'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Actinidia polygama lecomtei']],
        [],
        false
      ).length,
      'Actinidia polygama lecomtei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia purpurea']], [], false)
        .length,
      'Actinidia purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia rubricaulis']], [], false)
        .length,
      'Actinidia rubricaulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia rubus']], [], false).length,
      'Actinidia rubus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia rudis']], [], false).length,
      'Actinidia rudis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia sabiaefolia']], [], false)
        .length,
      'Actinidia sabiaefolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia strigosa']], [], false)
        .length,
      'Actinidia strigosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia tetramera']], [], false)
        .length,
      'Actinidia tetramera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia trichogyna']], [], false)
        .length,
      'Actinidia trichogyna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia valvata']], [], false).length,
      'Actinidia valvata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia venosa']], [], false).length,
      'Actinidia venosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Actinidia x fairchildii']], [], false)
        .length,
      'Actinidia x fairchildii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora denticulata']], [], false)
        .length,
      'Adenophora denticulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora divaricata']], [], false)
        .length,
      'Adenophora divaricata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora lamarkii']], [], false)
        .length,
      'Adenophora lamarkii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora latifolia']], [], false)
        .length,
      'Adenophora latifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora liliifolia']], [], false)
        .length,
      'Adenophora liliifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora nikoensis']], [], false)
        .length,
      'Adenophora nikoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora remotiflora']], [], false)
        .length,
      'Adenophora remotiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora stricta']], [], false)
        .length,
      'Adenophora stricta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora triphylla']], [], false)
        .length,
      'Adenophora triphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adenophora verticillata']], [], false)
        .length,
      'Adenophora verticillata'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Adenostoma fasciculatum']], [], false)
        .length,
      'Adenostoma fasciculatum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Adenostoma sparsifolium']], [], false)
        .length,
      'Adenostoma sparsifolium'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Adesmia lotoides']], [], false).length,
      'Adesmia lotoides'
    );
    assert.equal(
      6887,
      filterAndSort(crops, [nameToCrop['Adiantum capillus-veneris']], [], false)
        .length,
      'Adiantum capillus-veneris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Adiantum pedatum']], [], false).length,
      'Adiantum pedatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Adiantum venustum']], [], false).length,
      'Adiantum venustum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Adina rubella']], [], false).length,
      'Adina rubella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Adonis aestivalis']], [], false).length,
      'Adonis aestivalis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Adonis amurensis']], [], false).length,
      'Adonis amurensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Adonis vernalis']], [], false).length,
      'Adonis vernalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aegilops speltoides']], [], false)
        .length,
      'Aegilops speltoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aegilops triuncialis']], [], false)
        .length,
      'Aegilops triuncialis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aegopodium alpestre']], [], false)
        .length,
      'Aegopodium alpestre'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aegopodium podagraria']], [], false)
        .length,
      'Aegopodium podagraria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aesculus californica']], [], false)
        .length,
      'Aesculus californica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aesculus chinensis']], [], false)
        .length,
      'Aesculus chinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aesculus flava']], [], false).length,
      'Aesculus flava'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aesculus glabra']], [], false).length,
      'Aesculus glabra'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aesculus hippocastanum']], [], false)
        .length,
      'Aesculus hippocastanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aesculus indica']], [], false).length,
      'Aesculus indica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aesculus parviflora']], [], false)
        .length,
      'Aesculus parviflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aesculus pavia']], [], false).length,
      'Aesculus pavia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aesculus turbinata']], [], false)
        .length,
      'Aesculus turbinata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aesculus x carnea']], [], false).length,
      'Aesculus x carnea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aethusa cynapium']], [], false).length,
      'Aethusa cynapium'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Agalinis tenuifolia']], [], false)
        .length,
      'Agalinis tenuifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Agapanthus africanus']], [], false)
        .length,
      'Agapanthus africanus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Agapanthus campanulatus']], [], false)
        .length,
      'Agapanthus campanulatus'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Agapanthus praecox minimus']],
        [],
        false
      ).length,
      'Agapanthus praecox minimus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Agastache cana']], [], false).length,
      'Agastache cana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Agastache foeniculum']], [], false)
        .length,
      'Agastache foeniculum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Agastache mexicana']], [], false)
        .length,
      'Agastache mexicana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Agastache neomexicana']], [], false)
        .length,
      'Agastache neomexicana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Agastache rugosa']], [], false).length,
      'Agastache rugosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Agastache urticifolia']], [], false)
        .length,
      'Agastache urticifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Agathis robusta']], [], false).length,
      'Agathis robusta'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Agave americana']], [], false).length,
      'Agave americana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Agave parryi']], [], false).length,
      'Agave parryi'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Agave utahensis discreta']], [], false)
        .length,
      'Agave utahensis discreta'
    );
    assert.equal(
      7035,
      filterAndSort(
        crops,
        [nameToCrop['Agave utahensis eborispina']],
        [],
        false
      ).length,
      'Agave utahensis eborispina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ageratina altissima']], [], false)
        .length,
      'Ageratina altissima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ageratina aromatica']], [], false)
        .length,
      'Ageratina aromatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ageratina herbacea']], [], false)
        .length,
      'Ageratina herbacea'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Ageratina ligustrina']], [], false)
        .length,
      'Ageratina ligustrina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ageratina occidentalis']], [], false)
        .length,
      'Ageratina occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ageratina rugosum']], [], false).length,
      'Ageratina rugosum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Ageratum conyzoides']], [], false)
        .length,
      'Ageratum conyzoides'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ageratum houstonianum']], [], false)
        .length,
      'Ageratum houstonianum'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Agoseris aurantiaca']], [], false)
        .length,
      'Agoseris aurantiaca'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Agoseris glauca']], [], false).length,
      'Agoseris glauca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agrimonia eupatoria']], [], false)
        .length,
      'Agrimonia eupatoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agrimonia parviflora']], [], false)
        .length,
      'Agrimonia parviflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agrimonia pilosa']], [], false).length,
      'Agrimonia pilosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agrimonia striata']], [], false).length,
      'Agrimonia striata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agriophyllum squarrosum']], [], false)
        .length,
      'Agriophyllum squarrosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Agropyron elongatum']], [], false)
        .length,
      'Agropyron elongatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Agrostemma githago']], [], false)
        .length,
      'Agrostemma githago'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Agrostis perennans']], [], false)
        .length,
      'Agrostis perennans'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Ailanthus altissima']], [], false)
        .length,
      'Ailanthus altissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aizoon canariense']], [], false).length,
      'Aizoon canariense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ajuga australis']], [], false).length,
      'Ajuga australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ajuga bracteosa']], [], false).length,
      'Ajuga bracteosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ajuga chamaepitys']], [], false).length,
      'Ajuga chamaepitys'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ajuga decumbens']], [], false).length,
      'Ajuga decumbens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ajuga iva']], [], false).length,
      'Ajuga iva'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Ajuga reptans']], [], false).length,
      'Ajuga reptans'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Akebia quinata']], [], false).length,
      'Akebia quinata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Akebia trifoliata']], [], false).length,
      'Akebia trifoliata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Akebia x pentaphylla']], [], false)
        .length,
      'Akebia x pentaphylla'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Alangium chinense']], [], false).length,
      'Alangium chinense'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Alangium platanifolium']], [], false)
        .length,
      'Alangium platanifolium'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Albizia julibrissin']], [], false)
        .length,
      'Albizia julibrissin'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Albuca amboensis']], [], false).length,
      'Albuca amboensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Albuca canadensis']], [], false).length,
      'Albuca canadensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Albuca major']], [], false).length,
      'Albuca major'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Alcea rosea']], [], false).length,
      'Alcea rosea'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Alchemilla alpina']], [], false).length,
      'Alchemilla alpina'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Alchemilla xanthochlora']], [], false)
        .length,
      'Alchemilla xanthochlora'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Aletris farinosa']], [], false).length,
      'Aletris farinosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Aletris spicata']], [], false).length,
      'Aletris spicata'
    );
    assert.equal(
      6638,
      filterAndSort(crops, [nameToCrop['Aleurites cordata']], [], false).length,
      'Aleurites cordata'
    );
    assert.equal(
      6503,
      filterAndSort(crops, [nameToCrop['Aleurites fordii']], [], false).length,
      'Aleurites fordii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Alhagi mannifera']], [], false).length,
      'Alhagi mannifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Alhagi maurorum']], [], false).length,
      'Alhagi maurorum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Alisma canaliculatum']], [], false)
        .length,
      'Alisma canaliculatum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Alisma plantago-aquatica']], [], false)
        .length,
      'Alisma plantago-aquatica'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Alkanna tinctoria']], [], false).length,
      'Alkanna tinctoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Alliaria petiolata']], [], false)
        .length,
      'Alliaria petiolata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium acuminatum']], [], false).length,
      'Allium acuminatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium aflatunense']], [], false)
        .length,
      'Allium aflatunense'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium akaka']], [], false).length,
      'Allium akaka'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Allium altaicum']], [], false).length,
      'Allium altaicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium ampeloprasum']], [], false)
        .length,
      'Allium ampeloprasum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Allium ampeloprasum babbingtonii']],
        [],
        false
      ).length,
      'Allium ampeloprasum babbingtonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium angulare']], [], false).length,
      'Allium angulare'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium angulosum']], [], false).length,
      'Allium angulosum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Allium atropurpureum']], [], false)
        .length,
      'Allium atropurpureum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium bisceptrum']], [], false).length,
      'Allium bisceptrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium bodeanum']], [], false).length,
      'Allium bodeanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium bolanderi']], [], false).length,
      'Allium bolanderi'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Allium brevistylum']], [], false)
        .length,
      'Allium brevistylum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Allium canadense']], [], false).length,
      'Allium canadense'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Allium canadense mobilense']],
        [],
        false
      ).length,
      'Allium canadense mobilense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium carinatum']], [], false).length,
      'Allium carinatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium carolinianum']], [], false)
        .length,
      'Allium carolinianum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Allium cepa']], [], false).length,
      'Allium cepa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium cepa aggregatum']], [], false)
        .length,
      'Allium cepa aggregatum'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Allium cepa ascalonicum']], [], false)
        .length,
      'Allium cepa ascalonicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium cepa proliferum']], [], false)
        .length,
      'Allium cepa proliferum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Allium cernuum']], [], false).length,
      'Allium cernuum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium chinense']], [], false).length,
      'Allium chinense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium condensatum']], [], false)
        .length,
      'Allium condensatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium cupanii']], [], false).length,
      'Allium cupanii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium douglasii']], [], false).length,
      'Allium douglasii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium dregeanum']], [], false).length,
      'Allium dregeanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium drummondii']], [], false).length,
      'Allium drummondii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium fistulosum']], [], false).length,
      'Allium fistulosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium flavum']], [], false).length,
      'Allium flavum'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Allium galanthum']], [], false).length,
      'Allium galanthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium geyeri']], [], false).length,
      'Allium geyeri'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium giganteum']], [], false).length,
      'Allium giganteum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium grayi']], [], false).length,
      'Allium grayi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium hookeri']], [], false).length,
      'Allium hookeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium kunthii']], [], false).length,
      'Allium kunthii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium kurrat']], [], false).length,
      'Allium kurrat'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium ledebourianum']], [], false)
        .length,
      'Allium ledebourianum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium macleanii']], [], false).length,
      'Allium macleanii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium macropetalum']], [], false)
        .length,
      'Allium macropetalum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium macrostemon']], [], false)
        .length,
      'Allium macrostemon'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Allium moly']], [], false).length,
      'Allium moly'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium monanthum']], [], false).length,
      'Allium monanthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium mutabile']], [], false).length,
      'Allium mutabile'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium neapolitanum']], [], false)
        .length,
      'Allium neapolitanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium obliquum']], [], false).length,
      'Allium obliquum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Allium oleraceum']], [], false).length,
      'Allium oleraceum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium orientale']], [], false).length,
      'Allium orientale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium oschaninii']], [], false).length,
      'Allium oschaninii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Allium paradoxum']], [], false).length,
      'Allium paradoxum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium pendulinum']], [], false).length,
      'Allium pendulinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium platycaule']], [], false).length,
      'Allium platycaule'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium porrum']], [], false).length,
      'Allium porrum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Allium przewalskianum']], [], false)
        .length,
      'Allium przewalskianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium ramosum']], [], false).length,
      'Allium ramosum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium roseum']], [], false).length,
      'Allium roseum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium rubellum']], [], false).length,
      'Allium rubellum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Allium rubrum']], [], false).length,
      'Allium rubrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium ruhmerianum']], [], false)
        .length,
      'Allium ruhmerianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium sacculiferum']], [], false)
        .length,
      'Allium sacculiferum'
    );
    assert.equal(
      7193,
      filterAndSort(crops, [nameToCrop['Allium sativum']], [], false).length,
      'Allium sativum'
    );
    assert.equal(
      7202,
      filterAndSort(
        crops,
        [nameToCrop['Allium sativum ophioscorodon']],
        [],
        false
      ).length,
      'Allium sativum ophioscorodon'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Allium schoenoprasum']], [], false)
        .length,
      'Allium schoenoprasum'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Allium schoenoprasum sibiricum']],
        [],
        false
      ).length,
      'Allium schoenoprasum sibiricum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium scorodoprasum']], [], false)
        .length,
      'Allium scorodoprasum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Allium scorodoprasum rotundum']],
        [],
        false
      ).length,
      'Allium scorodoprasum rotundum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium semenovii']], [], false).length,
      'Allium semenovii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium senescens']], [], false).length,
      'Allium senescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium sphaerocephalon']], [], false)
        .length,
      'Allium sphaerocephalon'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium splendens']], [], false).length,
      'Allium splendens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium stellatum']], [], false).length,
      'Allium stellatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium stipitatum']], [], false).length,
      'Allium stipitatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium stracheyi']], [], false).length,
      'Allium stracheyi'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Allium suaveolens']], [], false).length,
      'Allium suaveolens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Allium subhirsutum']], [], false)
        .length,
      'Allium subhirsutum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium textile']], [], false).length,
      'Allium textile'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium thunbergii']], [], false).length,
      'Allium thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium tricoccum']], [], false).length,
      'Allium tricoccum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium triquetrum']], [], false).length,
      'Allium triquetrum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Allium tuberosum']], [], false).length,
      'Allium tuberosum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium unifolium']], [], false).length,
      'Allium unifolium'
    );
    assert.equal(
      2820,
      filterAndSort(crops, [nameToCrop['Allium ursinum']], [], false).length,
      'Allium ursinum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium validum']], [], false).length,
      'Allium validum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Allium victorialis']], [], false)
        .length,
      'Allium victorialis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Allium vineale']], [], false).length,
      'Allium vineale'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Allium wallichii']], [], false).length,
      'Allium wallichii'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Alnus cordata']], [], false).length,
      'Alnus cordata'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Alnus glutinosa']], [], false).length,
      'Alnus glutinosa'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Alnus hirsuta']], [], false).length,
      'Alnus hirsuta'
    );
    assert.equal(
      6578,
      filterAndSort(crops, [nameToCrop['Alnus incana']], [], false).length,
      'Alnus incana'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Alnus japonica']], [], false).length,
      'Alnus japonica'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Alnus maritima']], [], false).length,
      'Alnus maritima'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Alnus maximowiczii']], [], false)
        .length,
      'Alnus maximowiczii'
    );
    assert.equal(
      6953,
      filterAndSort(crops, [nameToCrop['Alnus nepalensis']], [], false).length,
      'Alnus nepalensis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Alnus nitida']], [], false).length,
      'Alnus nitida'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Alnus rhombifolia']], [], false).length,
      'Alnus rhombifolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Alnus rubra']], [], false).length,
      'Alnus rubra'
    );
    assert.equal(
      6578,
      filterAndSort(crops, [nameToCrop['Alnus rugosa']], [], false).length,
      'Alnus rugosa'
    );
    assert.equal(
      6578,
      filterAndSort(crops, [nameToCrop['Alnus serrulata']], [], false).length,
      'Alnus serrulata'
    );
    assert.equal(
      6578,
      filterAndSort(crops, [nameToCrop['Alnus sinuata']], [], false).length,
      'Alnus sinuata'
    );
    assert.equal(
      6578,
      filterAndSort(crops, [nameToCrop['Alnus tenuifolia']], [], false).length,
      'Alnus tenuifolia'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Alnus viridis crispa']], [], false)
        .length,
      'Alnus viridis crispa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Aloe vera']], [], false).length,
      'Aloe vera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Alopecurus aequalis']], [], false)
        .length,
      'Alopecurus aequalis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Aloysia triphylla']], [], false).length,
      'Aloysia triphylla'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Alstroemeria aurea']], [], false)
        .length,
      'Alstroemeria aurea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Alstroemeria haemantha']], [], false)
        .length,
      'Alstroemeria haemantha'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Alstroemeria ligtu']], [], false)
        .length,
      'Alstroemeria ligtu'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Alstroemeria pelegrina']], [], false)
        .length,
      'Alstroemeria pelegrina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Alstroemeria revoluta']], [], false)
        .length,
      'Alstroemeria revoluta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Alstroemeria spectabilis']], [], false)
        .length,
      'Alstroemeria spectabilis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Alstroemeria versicolor']], [], false)
        .length,
      'Alstroemeria versicolor'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Althaea cannabina']], [], false).length,
      'Althaea cannabina'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Althaea officinalis']], [], false)
        .length,
      'Althaea officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus albus']], [], false).length,
      'Amaranthus albus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus bidentata']], [], false)
        .length,
      'Amaranthus bidentata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus blitoides']], [], false)
        .length,
      'Amaranthus blitoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Amaranthus blitum']], [], false).length,
      'Amaranthus blitum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus campestris']], [], false)
        .length,
      'Amaranthus campestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus caudatus']], [], false)
        .length,
      'Amaranthus caudatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus cruentus']], [], false)
        .length,
      'Amaranthus cruentus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus diacanthus']], [], false)
        .length,
      'Amaranthus diacanthus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus dubius']], [], false).length,
      'Amaranthus dubius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus frumentaceus']], [], false)
        .length,
      'Amaranthus frumentaceus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus graecizans']], [], false)
        .length,
      'Amaranthus graecizans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus hybridus']], [], false)
        .length,
      'Amaranthus hybridus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Amaranthus hypochondriacus']],
        [],
        false
      ).length,
      'Amaranthus hypochondriacus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus mangostanus']], [], false)
        .length,
      'Amaranthus mangostanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus mitchellii']], [], false)
        .length,
      'Amaranthus mitchellii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus pallidiflorus']], [], false)
        .length,
      'Amaranthus pallidiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus palmeri']], [], false)
        .length,
      'Amaranthus palmeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus polygamus']], [], false)
        .length,
      'Amaranthus polygamus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus polystachyus']], [], false)
        .length,
      'Amaranthus polystachyus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus powellii']], [], false)
        .length,
      'Amaranthus powellii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus quitensis']], [], false)
        .length,
      'Amaranthus quitensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus retroflexus']], [], false)
        .length,
      'Amaranthus retroflexus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Amaranthus spinosus']], [], false)
        .length,
      'Amaranthus spinosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus standleyanus']], [], false)
        .length,
      'Amaranthus standleyanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus tenuifolius']], [], false)
        .length,
      'Amaranthus tenuifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus thunbergii']], [], false)
        .length,
      'Amaranthus thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus torreyi']], [], false)
        .length,
      'Amaranthus torreyi'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Amaranthus tricolor']], [], false)
        .length,
      'Amaranthus tricolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amaranthus viridis']], [], false)
        .length,
      'Amaranthus viridis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ambrosia artemesiifolia']], [], false)
        .length,
      'Ambrosia artemesiifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ambrosia trifida']], [], false).length,
      'Ambrosia trifida'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Amelanchier alnifolia']], [], false)
        .length,
      'Amelanchier alnifolia'
    );
    assert.equal(
      6639,
      filterAndSort(
        crops,
        [nameToCrop['Amelanchier alnifolia cusickii']],
        [],
        false
      ).length,
      'Amelanchier alnifolia cusickii'
    );
    assert.equal(
      6639,
      filterAndSort(
        crops,
        [nameToCrop['Amelanchier alnifolia semiintegrifolia']],
        [],
        false
      ).length,
      'Amelanchier alnifolia semiintegrifolia'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier arborea']], [], false)
        .length,
      'Amelanchier arborea'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Amelanchier asiatica']], [], false)
        .length,
      'Amelanchier asiatica'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier bartramiana']], [], false)
        .length,
      'Amelanchier bartramiana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier basalticola']], [], false)
        .length,
      'Amelanchier basalticola'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier canadensis']], [], false)
        .length,
      'Amelanchier canadensis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier confusa']], [], false)
        .length,
      'Amelanchier confusa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Amelanchier humilis']], [], false)
        .length,
      'Amelanchier humilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amelanchier huroensis']], [], false)
        .length,
      'Amelanchier huroensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amelanchier interior']], [], false)
        .length,
      'Amelanchier interior'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier intermedia']], [], false)
        .length,
      'Amelanchier intermedia'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier laevis']], [], false)
        .length,
      'Amelanchier laevis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier lamarckii']], [], false)
        .length,
      'Amelanchier lamarckii'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Amelanchier obovalis']], [], false)
        .length,
      'Amelanchier obovalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Amelanchier ovalis']], [], false)
        .length,
      'Amelanchier ovalis'
    );
    assert.equal(
      7216,
      filterAndSort(
        crops,
        [nameToCrop['Amelanchier ovalis integrifolia']],
        [],
        false
      ).length,
      'Amelanchier ovalis integrifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Amelanchier pallida']], [], false)
        .length,
      'Amelanchier pallida'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Amelanchier parviflora']], [], false)
        .length,
      'Amelanchier parviflora'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Amelanchier sanguinea']], [], false)
        .length,
      'Amelanchier sanguinea'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier spicata']], [], false)
        .length,
      'Amelanchier spicata'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier stolonifera']], [], false)
        .length,
      'Amelanchier stolonifera'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Amelanchier utahensis']], [], false)
        .length,
      'Amelanchier utahensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amelanchier weigandii']], [], false)
        .length,
      'Amelanchier weigandii'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Amelanchier x grandiflora']], [], false)
        .length,
      'Amelanchier x grandiflora'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Amelasorbus jackii']], [], false)
        .length,
      'Amelasorbus jackii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ammannia multiflora']], [], false)
        .length,
      'Ammannia multiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ammi majus']], [], false).length,
      'Ammi majus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ammi visnaga']], [], false).length,
      'Ammi visnaga'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ammophila arenaria']], [], false)
        .length,
      'Ammophila arenaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ammophila breviligulata']], [], false)
        .length,
      'Ammophila breviligulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amomyrtus luma']], [], false).length,
      'Amomyrtus luma'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Amorpha canescens']], [], false).length,
      'Amorpha canescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amorpha fruticosa']], [], false).length,
      'Amorpha fruticosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Amorpha nana']], [], false).length,
      'Amorpha nana'
    );
    assert.equal(
      6647,
      filterAndSort(
        crops,
        [nameToCrop['Amorphophallus paeoniifolius']],
        [],
        false
      ).length,
      'Amorphophallus paeoniifolius'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Amorphophallus rivieri']], [], false)
        .length,
      'Amorphophallus rivieri'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ampelodesmos mauritanicus']], [], false)
        .length,
      'Ampelodesmos mauritanicus'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Ampelopsis arborea']], [], false)
        .length,
      'Ampelopsis arborea'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Ampelopsis brevipedunculata']],
        [],
        false
      ).length,
      'Ampelopsis brevipedunculata'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Ampelopsis humulifolia']], [], false)
        .length,
      'Ampelopsis humulifolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Ampelopsis japonica']], [], false)
        .length,
      'Ampelopsis japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amphicarpaea bracteata']], [], false)
        .length,
      'Amphicarpaea bracteata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amphicarpaea edgeworthii']], [], false)
        .length,
      'Amphicarpaea edgeworthii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amphicarpaea pitcheri']], [], false)
        .length,
      'Amphicarpaea pitcheri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amsinckia lycopsoides']], [], false)
        .length,
      'Amsinckia lycopsoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amsinckia tesselata']], [], false)
        .length,
      'Amsinckia tesselata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Amyema pendulum']], [], false).length,
      'Amyema pendulum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Anacamptis pyramidalis']], [], false)
        .length,
      'Anacamptis pyramidalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Anacyclus pyrethrum']], [], false)
        .length,
      'Anacyclus pyrethrum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anagallis arvensis']], [], false)
        .length,
      'Anagallis arvensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Anaphalis margaritacea']], [], false)
        .length,
      'Anaphalis margaritacea'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Anchusa azurea']], [], false).length,
      'Anchusa azurea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Anchusa officinalis']], [], false)
        .length,
      'Anchusa officinalis'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Andromeda glaucophylla']], [], false)
        .length,
      'Andromeda glaucophylla'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Andromeda polifolia']], [], false)
        .length,
      'Andromeda polifolia'
    );
    assert.equal(
      7072,
      filterAndSort(crops, [nameToCrop['Andropogon gerardii']], [], false)
        .length,
      'Andropogon gerardii'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Andropogon virginicus']], [], false)
        .length,
      'Andropogon virginicus'
    );
    assert.equal(
      6309,
      filterAndSort(crops, [nameToCrop['Androsace sarmentosa']], [], false)
        .length,
      'Androsace sarmentosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Androstephium caeruleum']], [], false)
        .length,
      'Androstephium caeruleum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Anemarrhena asphodeloides']], [], false)
        .length,
      'Anemarrhena asphodeloides'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Anemone altaica']], [], false).length,
      'Anemone altaica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Anemone canadensis']], [], false)
        .length,
      'Anemone canadensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Anemone cylindrica']], [], false)
        .length,
      'Anemone cylindrica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anemone flaccida']], [], false).length,
      'Anemone flaccida'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Anemone narcissiflora']], [], false)
        .length,
      'Anemone narcissiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anemone nemorosa']], [], false).length,
      'Anemone nemorosa'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Anemone nikoensis']], [], false).length,
      'Anemone nikoensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Anemone obtusiloba']], [], false)
        .length,
      'Anemone obtusiloba'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Anemone quinquefolia']], [], false)
        .length,
      'Anemone quinquefolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anemone rivularis']], [], false).length,
      'Anemone rivularis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Anemone stolonifera']], [], false)
        .length,
      'Anemone stolonifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anemone virginiana']], [], false)
        .length,
      'Anemone virginiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Anemone vitifolia']], [], false).length,
      'Anemone vitifolia'
    );
    assert.equal(
      7072,
      filterAndSort(crops, [nameToCrop['Anemonella thalictroides']], [], false)
        .length,
      'Anemonella thalictroides'
    );
    assert.equal(
      174,
      filterAndSort(crops, [nameToCrop['Anemopsis californica']], [], false)
        .length,
      'Anemopsis californica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Anethum graveolens']], [], false)
        .length,
      'Anethum graveolens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica acutiloba']], [], false)
        .length,
      'Angelica acutiloba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica anomala']], [], false).length,
      'Angelica anomala'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Angelica archangelica']], [], false)
        .length,
      'Angelica archangelica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Angelica atropurpurea']], [], false)
        .length,
      'Angelica atropurpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica crucifolia']], [], false)
        .length,
      'Angelica crucifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica dahurica']], [], false).length,
      'Angelica dahurica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica decursiva']], [], false)
        .length,
      'Angelica decursiva'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica edulis']], [], false).length,
      'Angelica edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica genuflexa']], [], false)
        .length,
      'Angelica genuflexa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica gigas']], [], false).length,
      'Angelica gigas'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica glauca']], [], false).length,
      'Angelica glauca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica japonica']], [], false).length,
      'Angelica japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica keiskei']], [], false).length,
      'Angelica keiskei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica koreana']], [], false).length,
      'Angelica koreana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica laxiflora']], [], false)
        .length,
      'Angelica laxiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica megaphylla']], [], false)
        .length,
      'Angelica megaphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica montana']], [], false).length,
      'Angelica montana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica polymorpha']], [], false)
        .length,
      'Angelica polymorpha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica pubescens']], [], false)
        .length,
      'Angelica pubescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica sinensis']], [], false).length,
      'Angelica sinensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Angelica sylvestris']], [], false)
        .length,
      'Angelica sylvestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica uchiyamanae']], [], false)
        .length,
      'Angelica uchiyamanae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angelica ursina']], [], false).length,
      'Angelica ursina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Angiopteris fokiensis']], [], false)
        .length,
      'Angiopteris fokiensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Angophora cordifolia']], [], false)
        .length,
      'Angophora cordifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Angophora floribunda']], [], false)
        .length,
      'Angophora floribunda'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Anredera cordifolia']], [], false)
        .length,
      'Anredera cordifolia'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Antennaria dioica']], [], false).length,
      'Antennaria dioica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Anthemis arvensis']], [], false).length,
      'Anthemis arvensis'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Anthemis cotula']], [], false).length,
      'Anthemis cotula'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Anthemis tinctoria']], [], false)
        .length,
      'Anthemis tinctoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anthoxanthum odoratum']], [], false)
        .length,
      'Anthoxanthum odoratum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Anthriscus cerefolium']], [], false)
        .length,
      'Anthriscus cerefolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Anthriscus sylvestris']], [], false)
        .length,
      'Anthriscus sylvestris'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Anthyllis vulneraria']], [], false)
        .length,
      'Anthyllis vulneraria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Antirrhinum majus']], [], false).length,
      'Antirrhinum majus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aphananthe aspera']], [], false).length,
      'Aphananthe aspera'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Aphanes arvensis']], [], false).length,
      'Aphanes arvensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Apios americana']], [], false).length,
      'Apios americana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Apios fortunei']], [], false).length,
      'Apios fortunei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Apios priceana']], [], false).length,
      'Apios priceana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium annuum']], [], false).length,
      'Apium annuum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium australe']], [], false).length,
      'Apium australe'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium filiforme']], [], false).length,
      'Apium filiforme'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium graveolens']], [], false).length,
      'Apium graveolens'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Apium graveolens dulce']], [], false)
        .length,
      'Apium graveolens dulce'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Apium graveolens rapaceum']], [], false)
        .length,
      'Apium graveolens rapaceum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Apium graveolens secalinum']],
        [],
        false
      ).length,
      'Apium graveolens secalinum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium insulare']], [], false).length,
      'Apium insulare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Apium prostratum']], [], false).length,
      'Apium prostratum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aplectrum hyemale']], [], false).length,
      'Aplectrum hyemale'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Apocynum androsaemifolium']], [], false)
        .length,
      'Apocynum androsaemifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Apocynum cannabinum']], [], false)
        .length,
      'Apocynum cannabinum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Apocynum venetum']], [], false).length,
      'Apocynum venetum'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Aponogeton distachyos']], [], false)
        .length,
      'Aponogeton distachyos'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Aquilegia brevistyla']], [], false)
        .length,
      'Aquilegia brevistyla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aquilegia buergeriana']], [], false)
        .length,
      'Aquilegia buergeriana'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aquilegia caerulea']], [], false)
        .length,
      'Aquilegia caerulea'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aquilegia canadensis']], [], false)
        .length,
      'Aquilegia canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aquilegia flabellata']], [], false)
        .length,
      'Aquilegia flabellata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aquilegia flavescens']], [], false)
        .length,
      'Aquilegia flavescens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aquilegia formosa']], [], false).length,
      'Aquilegia formosa'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Aquilegia formosa truncata']],
        [],
        false
      ).length,
      'Aquilegia formosa truncata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aquilegia jonesii']], [], false).length,
      'Aquilegia jonesii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aquilegia karelinii']], [], false)
        .length,
      'Aquilegia karelinii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aquilegia pubescens']], [], false)
        .length,
      'Aquilegia pubescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aquilegia shockleyi']], [], false)
        .length,
      'Aquilegia shockleyi'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aquilegia vulgaris']], [], false)
        .length,
      'Aquilegia vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arabidopsis thaliana']], [], false)
        .length,
      'Arabidopsis thaliana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arabis alpina']], [], false).length,
      'Arabis alpina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arabis caucasica']], [], false).length,
      'Arabis caucasica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arabis hirsuta']], [], false).length,
      'Arabis hirsuta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arabis lyrata']], [], false).length,
      'Arabis lyrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arabis pendula']], [], false).length,
      'Arabis pendula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arabis sagittata']], [], false).length,
      'Arabis sagittata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arabis serrata']], [], false).length,
      'Arabis serrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Arachis hypogaea']], [], false).length,
      'Arachis hypogaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Aralia chinensis']], [], false).length,
      'Aralia chinensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Aralia continentalis']], [], false)
        .length,
      'Aralia continentalis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Aralia cordata']], [], false).length,
      'Aralia cordata'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Aralia elata']], [], false).length,
      'Aralia elata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aralia hispida']], [], false).length,
      'Aralia hispida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aralia mandschurica']], [], false)
        .length,
      'Aralia mandschurica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aralia nudicaulis']], [], false).length,
      'Aralia nudicaulis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aralia racemosa']], [], false).length,
      'Aralia racemosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aralia schmidtii']], [], false).length,
      'Aralia schmidtii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Aralia spinosa']], [], false).length,
      'Aralia spinosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Araucaria araucana']], [], false)
        .length,
      'Araucaria araucana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Araucaria bidwillii']], [], false)
        .length,
      'Araucaria bidwillii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Araujia sericifera']], [], false)
        .length,
      'Araujia sericifera'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Arbutus andrachne']], [], false).length,
      'Arbutus andrachne'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arbutus arizonica']], [], false).length,
      'Arbutus arizonica'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Arbutus canariensis']], [], false)
        .length,
      'Arbutus canariensis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Arbutus menziesii']], [], false).length,
      'Arbutus menziesii'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Arbutus texana']], [], false).length,
      'Arbutus texana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arbutus unedo']], [], false).length,
      'Arbutus unedo'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Arbutus x andrachnoides']], [], false)
        .length,
      'Arbutus x andrachnoides'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Arbutus xalapensis']], [], false)
        .length,
      'Arbutus xalapensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Arctium lappa']], [], false).length,
      'Arctium lappa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arctium minus']], [], false).length,
      'Arctium minus'
    );
    assert.equal(
      5857,
      filterAndSort(crops, [nameToCrop['Arctostaphylos alpina']], [], false)
        .length,
      'Arctostaphylos alpina'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arctostaphylos columbiana']], [], false)
        .length,
      'Arctostaphylos columbiana'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Arctostaphylos glauca']], [], false)
        .length,
      'Arctostaphylos glauca'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Arctostaphylos manzanita']], [], false)
        .length,
      'Arctostaphylos manzanita'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arctostaphylos nevadensis']], [], false)
        .length,
      'Arctostaphylos nevadensis'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arctostaphylos parryana']], [], false)
        .length,
      'Arctostaphylos parryana'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arctostaphylos patula']], [], false)
        .length,
      'Arctostaphylos patula'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Arctostaphylos pungens']], [], false)
        .length,
      'Arctostaphylos pungens'
    );
    assert.equal(
      7057,
      filterAndSort(
        crops,
        [nameToCrop['Arctostaphylos stanfordiana']],
        [],
        false
      ).length,
      'Arctostaphylos stanfordiana'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Arctostaphylos tomentosa']], [], false)
        .length,
      'Arctostaphylos tomentosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arctostaphylos uva-ursi']], [], false)
        .length,
      'Arctostaphylos uva-ursi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ardisia crenata']], [], false).length,
      'Ardisia crenata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ardisia crispa']], [], false).length,
      'Ardisia crispa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ardisia japonica']], [], false).length,
      'Ardisia japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ardisia sieboldii']], [], false).length,
      'Ardisia sieboldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arenaria serpyllifolia']], [], false)
        .length,
      'Arenaria serpyllifolia'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Argemone albiflora']], [], false)
        .length,
      'Argemone albiflora'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Argemone mexicana']], [], false).length,
      'Argemone mexicana'
    );
    assert.equal(
      7035,
      filterAndSort(
        crops,
        [nameToCrop['Argyranthemum foeniculaceum']],
        [],
        false
      ).length,
      'Argyranthemum foeniculaceum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arisaema amurense']], [], false).length,
      'Arisaema amurense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema consanguineum']], [], false)
        .length,
      'Arisaema consanguineum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema costatum']], [], false).length,
      'Arisaema costatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arisaema dracontium']], [], false)
        .length,
      'Arisaema dracontium'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Arisaema flavum']], [], false).length,
      'Arisaema flavum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema jacquemontii']], [], false)
        .length,
      'Arisaema jacquemontii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema negishii']], [], false).length,
      'Arisaema negishii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema peninsulare']], [], false)
        .length,
      'Arisaema peninsulare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema quinatum']], [], false).length,
      'Arisaema quinatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema ringens']], [], false).length,
      'Arisaema ringens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arisaema serratum']], [], false).length,
      'Arisaema serratum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema thunbergii']], [], false)
        .length,
      'Arisaema thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arisaema tortuosum']], [], false)
        .length,
      'Arisaema tortuosum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arisaema triphyllum']], [], false)
        .length,
      'Arisaema triphyllum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Arisaema utile']], [], false).length,
      'Arisaema utile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arisarum vulgare']], [], false).length,
      'Arisarum vulgare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aristolochia clematitis']], [], false)
        .length,
      'Aristolochia clematitis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aristolochia contorta']], [], false)
        .length,
      'Aristolochia contorta'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Aristolochia debilis']], [], false)
        .length,
      'Aristolochia debilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aristolochia fangchi']], [], false)
        .length,
      'Aristolochia fangchi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aristolochia kaempferi']], [], false)
        .length,
      'Aristolochia kaempferi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aristolochia macrophylla']], [], false)
        .length,
      'Aristolochia macrophylla'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Aristolochia molissima']], [], false)
        .length,
      'Aristolochia molissima'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Aristolochia reticulata']], [], false)
        .length,
      'Aristolochia reticulata'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Aristolochia rotunda']], [], false)
        .length,
      'Aristolochia rotunda'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Aristolochia serpentaria']], [], false)
        .length,
      'Aristolochia serpentaria'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Aristolochia tomentosa']], [], false)
        .length,
      'Aristolochia tomentosa'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Aristotelia chilensis']], [], false)
        .length,
      'Aristotelia chilensis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Aristotelia serrata']], [], false)
        .length,
      'Aristotelia serrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arjona patagonica']], [], false).length,
      'Arjona patagonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Armeria maritima']], [], false).length,
      'Armeria maritima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Armoracia rusticana']], [], false)
        .length,
      'Armoracia rusticana'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Arnebia benthamii']], [], false).length,
      'Arnebia benthamii'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Arnebia euchroma']], [], false).length,
      'Arnebia euchroma'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Arnica angustifolia alpina']],
        [],
        false
      ).length,
      'Arnica angustifolia alpina'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Arnica cordifolia']], [], false).length,
      'Arnica cordifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Arnica diversifolia']], [], false)
        .length,
      'Arnica diversifolia'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Arnica fulgens']], [], false).length,
      'Arnica fulgens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arnica montana']], [], false).length,
      'Arnica montana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aronia arbutifolia']], [], false)
        .length,
      'Aronia arbutifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aronia melanocarpa']], [], false)
        .length,
      'Aronia melanocarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aronia prunifolia']], [], false).length,
      'Aronia prunifolia'
    );
    assert.equal(
      6950,
      filterAndSort(crops, [nameToCrop['Arracacia xanthorrhiza']], [], false)
        .length,
      'Arracacia xanthorrhiza'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia abrotanum']], [], false)
        .length,
      'Artemisia abrotanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia absinthum']], [], false)
        .length,
      'Artemisia absinthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia annua']], [], false).length,
      'Artemisia annua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Artemisia anomala']], [], false).length,
      'Artemisia anomala'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia argyi']], [], false).length,
      'Artemisia argyi'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia biennis']], [], false).length,
      'Artemisia biennis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Artemisia campestris']], [], false)
        .length,
      'Artemisia campestris'
    );
    assert.equal(
      7056,
      filterAndSort(
        crops,
        [nameToCrop['Artemisia campestris glutinosa']],
        [],
        false
      ).length,
      'Artemisia campestris glutinosa'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia capillaris']], [], false)
        .length,
      'Artemisia capillaris'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia caruifolia']], [], false)
        .length,
      'Artemisia caruifolia'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia cina']], [], false).length,
      'Artemisia cina'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia dracunculoides']], [], false)
        .length,
      'Artemisia dracunculoides'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia dracunculus']], [], false)
        .length,
      'Artemisia dracunculus'
    );
    assert.equal(
      6958,
      filterAndSort(crops, [nameToCrop['Artemisia filifolia']], [], false)
        .length,
      'Artemisia filifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia frigida']], [], false).length,
      'Artemisia frigida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia glacialis']], [], false)
        .length,
      'Artemisia glacialis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia gmelinii']], [], false)
        .length,
      'Artemisia gmelinii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia indica']], [], false).length,
      'Artemisia indica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Artemisia japonica']], [], false)
        .length,
      'Artemisia japonica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia keiskeana']], [], false)
        .length,
      'Artemisia keiskeana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia laciniata']], [], false)
        .length,
      'Artemisia laciniata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Artemisia lactiflora']], [], false)
        .length,
      'Artemisia lactiflora'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia lancea']], [], false).length,
      'Artemisia lancea'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Artemisia ludoviciana']], [], false)
        .length,
      'Artemisia ludoviciana'
    );
    assert.equal(
      7055,
      filterAndSort(
        crops,
        [nameToCrop['Artemisia ludoviciana gnaphalodes']],
        [],
        false
      ).length,
      'Artemisia ludoviciana gnaphalodes'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia maritima']], [], false)
        .length,
      'Artemisia maritima'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia mexicana']], [], false)
        .length,
      'Artemisia mexicana'
    );
    assert.equal(
      6958,
      filterAndSort(crops, [nameToCrop['Artemisia michauxiana']], [], false)
        .length,
      'Artemisia michauxiana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia monophylla']], [], false)
        .length,
      'Artemisia monophylla'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia montana']], [], false).length,
      'Artemisia montana'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia nova']], [], false).length,
      'Artemisia nova'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia persica']], [], false).length,
      'Artemisia persica'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Artemisia princeps']], [], false)
        .length,
      'Artemisia princeps'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia rubripes']], [], false)
        .length,
      'Artemisia rubripes'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia sacrorum']], [], false)
        .length,
      'Artemisia sacrorum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia schmidtiana']], [], false)
        .length,
      'Artemisia schmidtiana'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia scoparia']], [], false)
        .length,
      'Artemisia scoparia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia sibirica']], [], false)
        .length,
      'Artemisia sibirica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia sieversiana']], [], false)
        .length,
      'Artemisia sieversiana'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia stelleriana']], [], false)
        .length,
      'Artemisia stelleriana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia stolonifera']], [], false)
        .length,
      'Artemisia stolonifera'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia sylvatica']], [], false)
        .length,
      'Artemisia sylvatica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia tilesii']], [], false).length,
      'Artemisia tilesii'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Artemisia tridentata']], [], false)
        .length,
      'Artemisia tridentata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia tripartita']], [], false)
        .length,
      'Artemisia tripartita'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Artemisia umbelliformis']], [], false)
        .length,
      'Artemisia umbelliformis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia vestita']], [], false).length,
      'Artemisia vestita'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Artemisia vulgaris']], [], false)
        .length,
      'Artemisia vulgaris'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Artemisia wrightii']], [], false)
        .length,
      'Artemisia wrightii'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Arthrocnemum fruticosum']], [], false)
        .length,
      'Arthrocnemum fruticosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arthrocnemum subterminale']], [], false)
        .length,
      'Arthrocnemum subterminale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arthromeris wallichiana']], [], false)
        .length,
      'Arthromeris wallichiana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Arthropodium cirrhatum']], [], false)
        .length,
      'Arthropodium cirrhatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Arthropodium milleflorum']], [], false)
        .length,
      'Arthropodium milleflorum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Arthropodium minus']], [], false)
        .length,
      'Arthropodium minus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Arum dioscoridis']], [], false).length,
      'Arum dioscoridis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arum italicum']], [], false).length,
      'Arum italicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Arum maculatum']], [], false).length,
      'Arum maculatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arundinaria gigantea']], [], false)
        .length,
      'Arundinaria gigantea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arundinella hookeri']], [], false)
        .length,
      'Arundinella hookeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arundinella nepalensis']], [], false)
        .length,
      'Arundinella nepalensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Arundo donax']], [], false).length,
      'Arundo donax'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum arifolium']], [], false).length,
      'Asarum arifolium'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum blumei']], [], false).length,
      'Asarum blumei'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Asarum canadense']], [], false).length,
      'Asarum canadense'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum caudatum']], [], false).length,
      'Asarum caudatum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum dilatatum']], [], false).length,
      'Asarum dilatatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asarum europaeum']], [], false).length,
      'Asarum europaeum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum forbesii']], [], false).length,
      'Asarum forbesii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum heterotropoides']], [], false)
        .length,
      'Asarum heterotropoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum maximum']], [], false).length,
      'Asarum maximum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum nipponicum']], [], false).length,
      'Asarum nipponicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum reflexum']], [], false).length,
      'Asarum reflexum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum shuttleworthii']], [], false)
        .length,
      'Asarum shuttleworthii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Asarum sieboldii']], [], false).length,
      'Asarum sieboldii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asarum takaoi']], [], false).length,
      'Asarum takaoi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asclepias asperula']], [], false)
        .length,
      'Asclepias asperula'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Asclepias brachystephana']], [], false)
        .length,
      'Asclepias brachystephana'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias californica']], [], false)
        .length,
      'Asclepias californica'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias decumbens']], [], false)
        .length,
      'Asclepias decumbens'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Asclepias eriocarpa']], [], false)
        .length,
      'Asclepias eriocarpa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias erosa']], [], false).length,
      'Asclepias erosa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias galioides']], [], false)
        .length,
      'Asclepias galioides'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Asclepias hallii']], [], false).length,
      'Asclepias hallii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Asclepias incarnata']], [], false)
        .length,
      'Asclepias incarnata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias involucrata']], [], false)
        .length,
      'Asclepias involucrata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asclepias lanceolata']], [], false)
        .length,
      'Asclepias lanceolata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias latifolia']], [], false)
        .length,
      'Asclepias latifolia'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias mexicana']], [], false)
        .length,
      'Asclepias mexicana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asclepias ovalifolia']], [], false)
        .length,
      'Asclepias ovalifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asclepias pumila']], [], false).length,
      'Asclepias pumila'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Asclepias purpurascens']], [], false)
        .length,
      'Asclepias purpurascens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asclepias quadrifolia']], [], false)
        .length,
      'Asclepias quadrifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asclepias rubra']], [], false).length,
      'Asclepias rubra'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Asclepias speciosa']], [], false)
        .length,
      'Asclepias speciosa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias subulata']], [], false)
        .length,
      'Asclepias subulata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Asclepias sullivantii']], [], false)
        .length,
      'Asclepias sullivantii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Asclepias syriaca']], [], false).length,
      'Asclepias syriaca'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Asclepias tuberosa']], [], false)
        .length,
      'Asclepias tuberosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asclepias viridiflora']], [], false)
        .length,
      'Asclepias viridiflora'
    );
    assert.equal(
      7135,
      filterAndSort(crops, [nameToCrop['Asimina triloba']], [], false).length,
      'Asimina triloba'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Aspalathus linearis']], [], false)
        .length,
      'Aspalathus linearis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus abyssinicus']], [], false)
        .length,
      'Asparagus abyssinicus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Asparagus acutifolius']], [], false)
        .length,
      'Asparagus acutifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus adscendens']], [], false)
        .length,
      'Asparagus adscendens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Asparagus albus']], [], false).length,
      'Asparagus albus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus aphyllus']], [], false)
        .length,
      'Asparagus aphyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus cochinchinensis']], [], false)
        .length,
      'Asparagus cochinchinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus dauricus']], [], false)
        .length,
      'Asparagus dauricus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Asparagus filicinus']], [], false)
        .length,
      'Asparagus filicinus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus maritimus']], [], false)
        .length,
      'Asparagus maritimus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asparagus officinalis']], [], false)
        .length,
      'Asparagus officinalis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Asparagus racemosus']], [], false)
        .length,
      'Asparagus racemosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus sauveolens']], [], false)
        .length,
      'Asparagus sauveolens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus schoberioides']], [], false)
        .length,
      'Asparagus schoberioides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Asparagus setaceus']], [], false)
        .length,
      'Asparagus setaceus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus stipularis']], [], false)
        .length,
      'Asparagus stipularis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus tenuifolius']], [], false)
        .length,
      'Asparagus tenuifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asparagus verticillatus']], [], false)
        .length,
      'Asparagus verticillatus'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Asperula cynanchica']], [], false)
        .length,
      'Asperula cynanchica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Asperula tinctoria']], [], false)
        .length,
      'Asperula tinctoria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asphodeline lutea']], [], false).length,
      'Asphodeline lutea'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Asphodelus aestivus']], [], false)
        .length,
      'Asphodelus aestivus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Asphodelus albus']], [], false).length,
      'Asphodelus albus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Asphodelus fistulosus']], [], false)
        .length,
      'Asphodelus fistulosus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Aspidistra elatior']], [], false)
        .length,
      'Aspidistra elatior'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Aspidosperma quebracho-blanco']],
        [],
        false
      ).length,
      'Aspidosperma quebracho-blanco'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asplenium adiantum-nigrum']], [], false)
        .length,
      'Asplenium adiantum-nigrum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Asplenium bulbiferum']], [], false)
        .length,
      'Asplenium bulbiferum'
    );
    assert.equal(
      6387,
      filterAndSort(crops, [nameToCrop['Asplenium ceterach']], [], false)
        .length,
      'Asplenium ceterach'
    );
    assert.equal(
      6401,
      filterAndSort(crops, [nameToCrop['Asplenium ruta-muraria']], [], false)
        .length,
      'Asplenium ruta-muraria'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Asplenium scolopendrium']], [], false)
        .length,
      'Asplenium scolopendrium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Asplenium trichomanes']], [], false)
        .length,
      'Asplenium trichomanes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astelia alpina']], [], false).length,
      'Astelia alpina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astelia grandis']], [], false).length,
      'Astelia grandis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Astelia nervosa']], [], false).length,
      'Astelia nervosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astelia solandri']], [], false).length,
      'Astelia solandri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aster amellus']], [], false).length,
      'Aster amellus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aster cordifolius']], [], false).length,
      'Aster cordifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster diplostephioides']], [], false)
        .length,
      'Aster diplostephioides'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Aster fastigiatus']], [], false).length,
      'Aster fastigiatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster glehnii']], [], false).length,
      'Aster glehnii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Aster hauptii']], [], false).length,
      'Aster hauptii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster kantoensis']], [], false).length,
      'Aster kantoensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster koraiensis']], [], false).length,
      'Aster koraiensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Aster lanceolatus']], [], false).length,
      'Aster lanceolatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aster macrophyllus']], [], false)
        .length,
      'Aster macrophyllus'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Aster novae-angliae']], [], false)
        .length,
      'Aster novae-angliae'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Aster novi-belgii']], [], false).length,
      'Aster novi-belgii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Aster puniceus']], [], false).length,
      'Aster puniceus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster scaber']], [], false).length,
      'Aster scaber'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Aster tataricus']], [], false).length,
      'Aster tataricus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster tripolium']], [], false).length,
      'Aster tripolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Aster yomena']], [], false).length,
      'Aster yomena'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Astilbe chinensis']], [], false).length,
      'Astilbe chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astilbe longicarpa']], [], false)
        .length,
      'Astilbe longicarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astilbe thunbergii']], [], false)
        .length,
      'Astilbe thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus aboriginorum']], [], false)
        .length,
      'Astragalus aboriginorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus adscendens']], [], false)
        .length,
      'Astragalus adscendens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Astragalus boeticus']], [], false)
        .length,
      'Astragalus boeticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus brachycalyx']], [], false)
        .length,
      'Astragalus brachycalyx'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Astragalus canadensis']], [], false)
        .length,
      'Astragalus canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus carduchorum']], [], false)
        .length,
      'Astragalus carduchorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus chartostegius']], [], false)
        .length,
      'Astragalus chartostegius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus chinensis']], [], false)
        .length,
      'Astragalus chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus christianus']], [], false)
        .length,
      'Astragalus christianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus complanatus']], [], false)
        .length,
      'Astragalus complanatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus crassicarpus']], [], false)
        .length,
      'Astragalus crassicarpus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus creticus']], [], false)
        .length,
      'Astragalus creticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus densissimus']], [], false)
        .length,
      'Astragalus densissimus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus diphysus']], [], false)
        .length,
      'Astragalus diphysus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus echinus']], [], false)
        .length,
      'Astragalus echinus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus edulis']], [], false).length,
      'Astragalus edulis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Astragalus exscapus']], [], false)
        .length,
      'Astragalus exscapus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus floridus']], [], false)
        .length,
      'Astragalus floridus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus florulentus']], [], false)
        .length,
      'Astragalus florulentus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus garbancillo']], [], false)
        .length,
      'Astragalus garbancillo'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus globiflorus']], [], false)
        .length,
      'Astragalus globiflorus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Astragalus glycyphyllos']], [], false)
        .length,
      'Astragalus glycyphyllos'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Astragalus gummifer']], [], false)
        .length,
      'Astragalus gummifer'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus hamosus']], [], false)
        .length,
      'Astragalus hamosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus henryi']], [], false).length,
      'Astragalus henryi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus hoantchy']], [], false)
        .length,
      'Astragalus hoantchy'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus kurdicus']], [], false)
        .length,
      'Astragalus kurdicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus leioclados']], [], false)
        .length,
      'Astragalus leioclados'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus massiliensis']], [], false)
        .length,
      'Astragalus massiliensis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Astragalus membranaceus']], [], false)
        .length,
      'Astragalus membranaceus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus microcephalus']], [], false)
        .length,
      'Astragalus microcephalus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus mongholicus']], [], false)
        .length,
      'Astragalus mongholicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus multiceps']], [], false)
        .length,
      'Astragalus multiceps'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Astragalus parnassi cylleneus']],
        [],
        false
      ).length,
      'Astragalus parnassi cylleneus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Astragalus pictus-filifolius']],
        [],
        false
      ).length,
      'Astragalus pictus-filifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus piletocladus']], [], false)
        .length,
      'Astragalus piletocladus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus pycnocladus']], [], false)
        .length,
      'Astragalus pycnocladus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Astragalus reflexistipulus']],
        [],
        false
      ).length,
      'Astragalus reflexistipulus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus shinanensis']], [], false)
        .length,
      'Astragalus shinanensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus sinicus']], [], false)
        .length,
      'Astragalus sinicus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Astragalus sirinicus']], [], false)
        .length,
      'Astragalus sirinicus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Astragalus stenonychioides']],
        [],
        false
      ).length,
      'Astragalus stenonychioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus strobiliferus']], [], false)
        .length,
      'Astragalus strobiliferus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus stromatodes']], [], false)
        .length,
      'Astragalus stromatodes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus turkmenorum']], [], false)
        .length,
      'Astragalus turkmenorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Astragalus umbellatus']], [], false)
        .length,
      'Astragalus umbellatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astrantia major']], [], false).length,
      'Astrantia major'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astrebla pectinata']], [], false)
        .length,
      'Astrebla pectinata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astroloma conostephioides']], [], false)
        .length,
      'Astroloma conostephioides'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Astroloma humifusum']], [], false)
        .length,
      'Astroloma humifusum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Astroloma pinifolium']], [], false)
        .length,
      'Astroloma pinifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Astroloma serratifolium']], [], false)
        .length,
      'Astroloma serratifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Asyneuma pulchellum']], [], false)
        .length,
      'Asyneuma pulchellum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Asyneuma salignum']], [], false).length,
      'Asyneuma salignum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athamantha cretensis']], [], false)
        .length,
      'Athamantha cretensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athamantha sicula']], [], false).length,
      'Athamantha sicula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athamantha turbith']], [], false)
        .length,
      'Athamantha turbith'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Atherosperma moschatum']], [], false)
        .length,
      'Atherosperma moschatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Athrotaxis selaginoides']], [], false)
        .length,
      'Athrotaxis selaginoides'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Athyrium filix-femina']], [], false)
        .length,
      'Athyrium filix-femina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athyrium melanolepis']], [], false)
        .length,
      'Athyrium melanolepis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Athyrium niponicum']], [], false)
        .length,
      'Athyrium niponicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athyrium rubripes']], [], false).length,
      'Athyrium rubripes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athyrium squamigerum']], [], false)
        .length,
      'Athyrium squamigerum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Athyrium yokoscense']], [], false)
        .length,
      'Athyrium yokoscense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Atractylis gummifera']], [], false)
        .length,
      'Atractylis gummifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atractylodes japonica']], [], false)
        .length,
      'Atractylodes japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atractylodes lancea']], [], false)
        .length,
      'Atractylodes lancea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atractylodes macrocephala']], [], false)
        .length,
      'Atractylodes macrocephala'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Atraphaxis spinosa']], [], false)
        .length,
      'Atraphaxis spinosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex arenaria']], [], false).length,
      'Atriplex arenaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex argentea']], [], false).length,
      'Atriplex argentea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex argentea expansa']], [], false)
        .length,
      'Atriplex argentea expansa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Atriplex californica']], [], false)
        .length,
      'Atriplex californica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex canescens']], [], false)
        .length,
      'Atriplex canescens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex carnosa']], [], false).length,
      'Atriplex carnosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex confertifolia']], [], false)
        .length,
      'Atriplex confertifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex coronata']], [], false).length,
      'Atriplex coronata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex dimorphostegia']], [], false)
        .length,
      'Atriplex dimorphostegia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex elegans']], [], false).length,
      'Atriplex elegans'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex glabriuscula']], [], false)
        .length,
      'Atriplex glabriuscula'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex gmelinii']], [], false).length,
      'Atriplex gmelinii'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Atriplex halimus']], [], false).length,
      'Atriplex halimus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex hastata']], [], false).length,
      'Atriplex hastata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex hortensis']], [], false)
        .length,
      'Atriplex hortensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex lapathifolia']], [], false)
        .length,
      'Atriplex lapathifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Atriplex lentiformis']], [], false)
        .length,
      'Atriplex lentiformis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex maximowicziana']], [], false)
        .length,
      'Atriplex maximowicziana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Atriplex nummularia']], [], false)
        .length,
      'Atriplex nummularia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex nuttallii']], [], false)
        .length,
      'Atriplex nuttallii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atriplex patula']], [], false).length,
      'Atriplex patula'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex powellii']], [], false).length,
      'Atriplex powellii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex saccaria']], [], false).length,
      'Atriplex saccaria'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Atriplex serenana']], [], false).length,
      'Atriplex serenana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex subcordata']], [], false)
        .length,
      'Atriplex subcordata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex tatarica']], [], false).length,
      'Atriplex tatarica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Atriplex truncata']], [], false).length,
      'Atriplex truncata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atropa acuminata']], [], false).length,
      'Atropa acuminata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Atropa bella-donna']], [], false)
        .length,
      'Atropa bella-donna'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Aubrietia deltoidea']], [], false)
        .length,
      'Aubrietia deltoidea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Aucuba japonica']], [], false).length,
      'Aucuba japonica'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Aurinia saxatilis']], [], false).length,
      'Aurinia saxatilis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena abyssinica']], [], false).length,
      'Avena abyssinica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Avena barbata']], [], false).length,
      'Avena barbata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena brevis']], [], false).length,
      'Avena brevis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena byzantina']], [], false).length,
      'Avena byzantina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena fatua']], [], false).length,
      'Avena fatua'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena ludoviciana']], [], false).length,
      'Avena ludoviciana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena nuda']], [], false).length,
      'Avena nuda'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena nudibrevis']], [], false).length,
      'Avena nudibrevis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena orientalis']], [], false).length,
      'Avena orientalis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Avena sativa']], [], false).length,
      'Avena sativa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Avena sterilis']], [], false).length,
      'Avena sterilis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Avena strigosa']], [], false).length,
      'Avena strigosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Avena wiestii']], [], false).length,
      'Avena wiestii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Azara microphylla']], [], false).length,
      'Azara microphylla'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella caespitosa']], [], false)
        .length,
      'Azorella caespitosa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella diapensioides']], [], false)
        .length,
      'Azorella diapensioides'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella filamentosa']], [], false)
        .length,
      'Azorella filamentosa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella fuegiana']], [], false).length,
      'Azorella fuegiana'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella lycopodioides']], [], false)
        .length,
      'Azorella lycopodioides'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella selago']], [], false).length,
      'Azorella selago'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella trifurcata']], [], false)
        .length,
      'Azorella trifurcata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Azorella yareta']], [], false).length,
      'Azorella yareta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Azorina vidalii']], [], false).length,
      'Azorina vidalii'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Babiana plicata']], [], false).length,
      'Babiana plicata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Baccharis halimifolia']], [], false)
        .length,
      'Baccharis halimifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Baccharis patagonica']], [], false)
        .length,
      'Baccharis patagonica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Baccharis pilularis']], [], false)
        .length,
      'Baccharis pilularis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Baccharis viminea']], [], false).length,
      'Baccharis viminea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Backhousia myrtifolia']], [], false)
        .length,
      'Backhousia myrtifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Baeckea gunniana']], [], false).length,
      'Baeckea gunniana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ballota acetabulosa']], [], false)
        .length,
      'Ballota acetabulosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ballota nigra']], [], false).length,
      'Ballota nigra'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ballota pseudodictamnus']], [], false)
        .length,
      'Ballota pseudodictamnus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Balsamorhiza deltoidea']], [], false)
        .length,
      'Balsamorhiza deltoidea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Balsamorhiza hookeri']], [], false)
        .length,
      'Balsamorhiza hookeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Balsamorhiza incana']], [], false)
        .length,
      'Balsamorhiza incana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Balsamorhiza sagittata']], [], false)
        .length,
      'Balsamorhiza sagittata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Bambusa multiplex']], [], false).length,
      'Bambusa multiplex'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Bambusa oldhamii']], [], false).length,
      'Bambusa oldhamii'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Banksia integrifolia']], [], false)
        .length,
      'Banksia integrifolia'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Banksia marginata']], [], false).length,
      'Banksia marginata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Baptisia australis']], [], false)
        .length,
      'Baptisia australis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Baptisia bracteata']], [], false)
        .length,
      'Baptisia bracteata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Baptisia lactea']], [], false).length,
      'Baptisia lactea'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Baptisia pendula']], [], false).length,
      'Baptisia pendula'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Baptisia tinctoria']], [], false)
        .length,
      'Baptisia tinctoria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Barbarea australis']], [], false)
        .length,
      'Barbarea australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Barbarea orthoceras']], [], false)
        .length,
      'Barbarea orthoceras'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Barbarea verna']], [], false).length,
      'Barbarea verna'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Barbarea vulgaris']], [], false).length,
      'Barbarea vulgaris'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Basella alba']], [], false).length,
      'Basella alba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bassia scoparia']], [], false).length,
      'Bassia scoparia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Bauhinia variegata']], [], false)
        .length,
      'Bauhinia variegata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Beckmannia eruciformis']], [], false)
        .length,
      'Beckmannia eruciformis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Beckmannia syzigachne']], [], false)
        .length,
      'Beckmannia syzigachne'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Begonia grandis evansiana']], [], false)
        .length,
      'Begonia grandis evansiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Begonia palmata']], [], false).length,
      'Begonia palmata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Begonia picta']], [], false).length,
      'Begonia picta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Beilschmiedia sikkimensis']], [], false)
        .length,
      'Beilschmiedia sikkimensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Beilschmiedia tawa']], [], false)
        .length,
      'Beilschmiedia tawa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Belamcanda chinensis']], [], false)
        .length,
      'Belamcanda chinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Bellis perennis']], [], false).length,
      'Bellis perennis'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Benincasa hispida']], [], false).length,
      'Benincasa hispida'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Berberidopsis corallina']], [], false)
        .length,
      'Berberidopsis corallina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis aggregata']], [], false)
        .length,
      'Berberis aggregata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis amurensis']], [], false)
        .length,
      'Berberis amurensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis angulosa']], [], false).length,
      'Berberis angulosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis aristata']], [], false).length,
      'Berberis aristata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Berberis asiatica']], [], false).length,
      'Berberis asiatica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis buxifolia']], [], false)
        .length,
      'Berberis buxifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis calliantha']], [], false)
        .length,
      'Berberis calliantha'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis canadensis']], [], false)
        .length,
      'Berberis canadensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Berberis capillaris']], [], false)
        .length,
      'Berberis capillaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis chengii']], [], false).length,
      'Berberis chengii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis chinensis']], [], false)
        .length,
      'Berberis chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis chitria']], [], false).length,
      'Berberis chitria'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis concinna']], [], false).length,
      'Berberis concinna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis cooperi']], [], false).length,
      'Berberis cooperi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis darwinii']], [], false).length,
      'Berberis darwinii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis empetrifolia']], [], false)
        .length,
      'Berberis empetrifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis everstiana']], [], false)
        .length,
      'Berberis everstiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis fendleri']], [], false).length,
      'Berberis fendleri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis flexuosa']], [], false).length,
      'Berberis flexuosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis gagnepainii']], [], false)
        .length,
      'Berberis gagnepainii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Berberis georgii']], [], false).length,
      'Berberis georgii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Berberis heterophylla']], [], false)
        .length,
      'Berberis heterophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis jaeschkeana']], [], false)
        .length,
      'Berberis jaeschkeana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis koreana']], [], false).length,
      'Berberis koreana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis lycium']], [], false).length,
      'Berberis lycium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis parisepala']], [], false)
        .length,
      'Berberis parisepala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis rariflora']], [], false)
        .length,
      'Berberis rariflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis rubrostilla']], [], false)
        .length,
      'Berberis rubrostilla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis ruscifolia']], [], false)
        .length,
      'Berberis ruscifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis sherriffii']], [], false)
        .length,
      'Berberis sherriffii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis sibirica']], [], false).length,
      'Berberis sibirica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis sieboldii']], [], false)
        .length,
      'Berberis sieboldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis sikkimensis']], [], false)
        .length,
      'Berberis sikkimensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis soulieana']], [], false)
        .length,
      'Berberis soulieana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Berberis thunbergii']], [], false)
        .length,
      'Berberis thunbergii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis tomentosa']], [], false)
        .length,
      'Berberis tomentosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis ulcina']], [], false).length,
      'Berberis ulcina'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis verruculosa']], [], false)
        .length,
      'Berberis verruculosa'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Berberis vulgaris']], [], false).length,
      'Berberis vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis wallichiana']], [], false)
        .length,
      'Berberis wallichiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis wilsoniae']], [], false)
        .length,
      'Berberis wilsoniae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis x carminea']], [], false)
        .length,
      'Berberis x carminea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Berberis x lologensis']], [], false)
        .length,
      'Berberis x lologensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Berberis x stenophylla']], [], false)
        .length,
      'Berberis x stenophylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Berchemia flavescens']], [], false)
        .length,
      'Berchemia flavescens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Berchemia lineata']], [], false).length,
      'Berchemia lineata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Berchemia racemosa']], [], false)
        .length,
      'Berchemia racemosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bergenia ciliata']], [], false).length,
      'Bergenia ciliata'
    );
    assert.equal(
      7124,
      filterAndSort(crops, [nameToCrop['Bergenia cordifolia']], [], false)
        .length,
      'Bergenia cordifolia'
    );
    assert.equal(
      7124,
      filterAndSort(crops, [nameToCrop['Bergenia crassifolia']], [], false)
        .length,
      'Bergenia crassifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Bergenia purpurascens']], [], false)
        .length,
      'Bergenia purpurascens'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Berula erecta']], [], false).length,
      'Berula erecta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Beta lomatogona']], [], false).length,
      'Beta lomatogona'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Beta trigyna']], [], false).length,
      'Beta trigyna'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Beta vulgaris altissima']], [], false)
        .length,
      'Beta vulgaris altissima'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Beta vulgaris cicla']], [], false)
        .length,
      'Beta vulgaris cicla'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Beta vulgaris craca']], [], false)
        .length,
      'Beta vulgaris craca'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Beta vulgaris flavescens']], [], false)
        .length,
      'Beta vulgaris flavescens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Beta vulgaris maritima']], [], false)
        .length,
      'Beta vulgaris maritima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Betula alleghaniensis']], [], false)
        .length,
      'Betula alleghaniensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Betula alnoides']], [], false).length,
      'Betula alnoides'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Betula ermanii']], [], false).length,
      'Betula ermanii'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Betula glandulosa']], [], false).length,
      'Betula glandulosa'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Betula kenaica']], [], false).length,
      'Betula kenaica'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Betula lenta']], [], false).length,
      'Betula lenta'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Betula nana']], [], false).length,
      'Betula nana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Betula nigra']], [], false).length,
      'Betula nigra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Betula occidentalis']], [], false)
        .length,
      'Betula occidentalis'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Betula papyrifera']], [], false).length,
      'Betula papyrifera'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Betula pendula']], [], false).length,
      'Betula pendula'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Betula platyphylla']], [], false)
        .length,
      'Betula platyphylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Betula populifolia']], [], false)
        .length,
      'Betula populifolia'
    );
    assert.equal(
      6009,
      filterAndSort(crops, [nameToCrop['Betula pubescens']], [], false).length,
      'Betula pubescens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Betula schmidtii']], [], false).length,
      'Betula schmidtii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Betula utilis']], [], false).length,
      'Betula utilis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Bidens aurea']], [], false).length,
      'Bidens aurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens bigelovii']], [], false).length,
      'Bidens bigelovii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens bipinnata']], [], false).length,
      'Bidens bipinnata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens biternata']], [], false).length,
      'Bidens biternata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens frondosa']], [], false).length,
      'Bidens frondosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens parviflora']], [], false).length,
      'Bidens parviflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens pilosa']], [], false).length,
      'Bidens pilosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bidens tripartita']], [], false).length,
      'Bidens tripartita'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Billardiera cymosa']], [], false)
        .length,
      'Billardiera cymosa'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Billardiera longiflora']], [], false)
        .length,
      'Billardiera longiflora'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Billardiera scandens']], [], false)
        .length,
      'Billardiera scandens'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Blackstonia perfoliata']], [], false)
        .length,
      'Blackstonia perfoliata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Blechnum spicant']], [], false).length,
      'Blechnum spicant'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Bletilla striata']], [], false).length,
      'Bletilla striata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Bloomeria aurea']], [], false).length,
      'Bloomeria aurea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Bloomeria crocea']], [], false).length,
      'Bloomeria crocea'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Bobartia indica']], [], false).length,
      'Bobartia indica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria cylindrica']], [], false)
        .length,
      'Boehmeria cylindrica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria longispica']], [], false)
        .length,
      'Boehmeria longispica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria macrophylla']], [], false)
        .length,
      'Boehmeria macrophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria malabarica']], [], false)
        .length,
      'Boehmeria malabarica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria nipononivea']], [], false)
        .length,
      'Boehmeria nipononivea'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Boehmeria nivea']], [], false).length,
      'Boehmeria nivea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria spicata']], [], false).length,
      'Boehmeria spicata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Boehmeria tricuspis']], [], false)
        .length,
      'Boehmeria tricuspis'
    );
    assert.equal(
      7202,
      filterAndSort(
        crops,
        [nameToCrop['Boenninghausenia albiflora']],
        [],
        false
      ).length,
      'Boenninghausenia albiflora'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Boerhavia diffusa']], [], false).length,
      'Boerhavia diffusa'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Bolax gummifera']], [], false).length,
      'Bolax gummifera'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Bomarea acutifolia']], [], false)
        .length,
      'Bomarea acutifolia'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Bomarea edulis']], [], false).length,
      'Bomarea edulis'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Bomarea salsilla']], [], false).length,
      'Bomarea salsilla'
    );
    assert.equal(
      6893,
      filterAndSort(crops, [nameToCrop['Bongardia chrysogonum']], [], false)
        .length,
      'Bongardia chrysogonum'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Boopsis australis']], [], false).length,
      'Boopsis australis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Borago officinalis']], [], false)
        .length,
      'Borago officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Borinda emeryi']], [], false).length,
      'Borinda emeryi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Borinda grossa']], [], false).length,
      'Borinda grossa'
    );
    assert.equal(
      6732,
      filterAndSort(crops, [nameToCrop['Boronia pinnata']], [], false).length,
      'Boronia pinnata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Botrychium australe']], [], false)
        .length,
      'Botrychium australe'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Botrychium lunaria']], [], false)
        .length,
      'Botrychium lunaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Botrychium ternatum']], [], false)
        .length,
      'Botrychium ternatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Botrychium virginianum']], [], false)
        .length,
      'Botrychium virginianum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Bouteloua gracilis']], [], false)
        .length,
      'Bouteloua gracilis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Brachychiton populneus']], [], false)
        .length,
      'Brachychiton populneus'
    );
    assert.equal(
      7203,
      filterAndSort(
        crops,
        [nameToCrop['Brachyglottis Dunedin Hybrids']],
        [],
        false
      ).length,
      'Brachyglottis Dunedin Hybrids'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Brachyglottis greyi']], [], false)
        .length,
      'Brachyglottis greyi'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Brachyglottis laxifolia']], [], false)
        .length,
      'Brachyglottis laxifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Brachyglottis monroi']], [], false)
        .length,
      'Brachyglottis monroi'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Brachyglottis repanda']], [], false)
        .length,
      'Brachyglottis repanda'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Brachyglottis rotundifolia']],
        [],
        false
      ).length,
      'Brachyglottis rotundifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Brachyloma ciliatum']], [], false)
        .length,
      'Brachyloma ciliatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bracyloma depressum']], [], false)
        .length,
      'Bracyloma depressum'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Brahea armata']], [], false).length,
      'Brahea armata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Brahea dulcis']], [], false).length,
      'Brahea dulcis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Brahea edulis']], [], false).length,
      'Brahea edulis'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Brasenia schreberi']], [], false)
        .length,
      'Brasenia schreberi'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Brassica balearica']], [], false)
        .length,
      'Brassica balearica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica carinata']], [], false).length,
      'Brassica carinata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica cretica']], [], false).length,
      'Brassica cretica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica elongata']], [], false).length,
      'Brassica elongata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea']], [], false).length,
      'Brassica juncea'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica juncea crispifolia']],
        [],
        false
      ).length,
      'Brassica juncea crispifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea foliosa']], [], false)
        .length,
      'Brassica juncea foliosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea multiceps']], [], false)
        .length,
      'Brassica juncea multiceps'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica juncea napiformis']],
        [],
        false
      ).length,
      'Brassica juncea napiformis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea rugosa']], [], false)
        .length,
      'Brassica juncea rugosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea strumata']], [], false)
        .length,
      'Brassica juncea strumata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica juncea tumida']], [], false)
        .length,
      'Brassica juncea tumida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica napus']], [], false).length,
      'Brassica napus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica napus arvensis']], [], false)
        .length,
      'Brassica napus arvensis'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica napus napobrassica']],
        [],
        false
      ).length,
      'Brassica napus napobrassica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica napus napus']], [], false)
        .length,
      'Brassica napus napus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica napus pabularia']], [], false)
        .length,
      'Brassica napus pabularia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica nigra']], [], false).length,
      'Brassica nigra'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Brassica oleracea']], [], false).length,
      'Brassica oleracea'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Brassica oleracea']], [], false).length,
      'Brassica oleracea'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea alboglabra']],
        [],
        false
      ).length,
      'Brassica oleracea alboglabra'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea botrytis aparagoides']],
        [],
        false
      ).length,
      'Brassica oleracea botrytis aparagoides'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea botrytis']],
        [],
        false
      ).length,
      'Brassica oleracea botrytis'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Brassica oleracea']], [], false).length,
      'Brassica oleracea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Brassica oleracea costata']], [], false)
        .length,
      'Brassica oleracea costata'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea gemmifera']],
        [],
        false
      ).length,
      'Brassica oleracea gemmifera'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea gongylodes']],
        [],
        false
      ).length,
      'Brassica oleracea gongylodes'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Brassica oleracea']], [], false).length,
      'Brassica oleracea'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea medullosa']],
        [],
        false
      ).length,
      'Brassica oleracea medullosa'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea palmifolia']],
        [],
        false
      ).length,
      'Brassica oleracea palmifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica oleracea ramosa']], [], false)
        .length,
      'Brassica oleracea ramosa'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica oleracea sabellica']],
        [],
        false
      ).length,
      'Brassica oleracea sabellica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica oleracea viridis']], [], false)
        .length,
      'Brassica oleracea viridis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa']], [], false).length,
      'Brassica rapa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa campestris']], [], false)
        .length,
      'Brassica rapa campestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa chinensis']], [], false)
        .length,
      'Brassica rapa chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa dichotoma']], [], false)
        .length,
      'Brassica rapa dichotoma'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa narinosa']], [], false)
        .length,
      'Brassica rapa narinosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa nipposinica']], [], false)
        .length,
      'Brassica rapa nipposinica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa oleifera']], [], false)
        .length,
      'Brassica rapa oleifera'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica rapa parachinensis']],
        [],
        false
      ).length,
      'Brassica rapa parachinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica rapa pekinensis']], [], false)
        .length,
      'Brassica rapa pekinensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Brassica rapa perviridis']], [], false)
        .length,
      'Brassica rapa perviridis'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Brassica rapa trilocularis']],
        [],
        false
      ).length,
      'Brassica rapa trilocularis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Brassica tournefortii']], [], false)
        .length,
      'Brassica tournefortii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Brodiaea coronaria']], [], false)
        .length,
      'Brodiaea coronaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bromus breviaristatus']], [], false)
        .length,
      'Bromus breviaristatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bromus carinatus']], [], false).length,
      'Bromus carinatus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Bromus inermis']], [], false).length,
      'Bromus inermis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Bromus japonicus']], [], false).length,
      'Bromus japonicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bromus mango']], [], false).length,
      'Bromus mango'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bromus marginatus']], [], false).length,
      'Bromus marginatus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Bromus ramosus']], [], false).length,
      'Bromus ramosus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Bromus rigidus']], [], false).length,
      'Bromus rigidus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Bromus tectorum']], [], false).length,
      'Bromus tectorum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Bromus thominii']], [], false).length,
      'Bromus thominii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Broussonetia kazinoki']], [], false)
        .length,
      'Broussonetia kazinoki'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Broussonetia papyrifera']], [], false)
        .length,
      'Broussonetia papyrifera'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Bryonia alba']], [], false).length,
      'Bryonia alba'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Bryonia dioica']], [], false).length,
      'Bryonia dioica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Buddleia asiatica']], [], false).length,
      'Buddleia asiatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Buddleia davidii']], [], false).length,
      'Buddleia davidii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Buddleia globosa']], [], false).length,
      'Buddleia globosa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Buddleia officinalis']], [], false)
        .length,
      'Buddleia officinalis'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Buddleia paniculata']], [], false)
        .length,
      'Buddleia paniculata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Buglossoides arvensis']], [], false)
        .length,
      'Buglossoides arvensis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Bulbinella hookeri']], [], false)
        .length,
      'Bulbinella hookeri'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Bulbinopsis bulbosa']], [], false)
        .length,
      'Bulbinopsis bulbosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bulbophyllum inconspicuum']], [], false)
        .length,
      'Bulbophyllum inconspicuum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bumelia lanuginosa']], [], false)
        .length,
      'Bumelia lanuginosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bumelia lycioides']], [], false).length,
      'Bumelia lycioides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Bumelia tenax']], [], false).length,
      'Bumelia tenax'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bunchosia armeniaca']], [], false)
        .length,
      'Bunchosia armeniaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bunias erucago']], [], false).length,
      'Bunias erucago'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Bunias orientalis']], [], false).length,
      'Bunias orientalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Bunium bulbocastanum']], [], false)
        .length,
      'Bunium bulbocastanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bunium ferulaceum']], [], false).length,
      'Bunium ferulaceum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bunium persicum']], [], false).length,
      'Bunium persicum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Bupleurum chinense']], [], false)
        .length,
      'Bupleurum chinense'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Bupleurum falcatum']], [], false)
        .length,
      'Bupleurum falcatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bupleurum fruticosum']], [], false)
        .length,
      'Bupleurum fruticosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bupleurum longiradiatum']], [], false)
        .length,
      'Bupleurum longiradiatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bupleurum octoradiatum']], [], false)
        .length,
      'Bupleurum octoradiatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Bupleurum rotundifolium']], [], false)
        .length,
      'Bupleurum rotundifolium'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Burchardia umbellata']], [], false)
        .length,
      'Burchardia umbellata'
    );
    assert.equal(
      7118,
      filterAndSort(crops, [nameToCrop['Bursaria spinosa']], [], false).length,
      'Bursaria spinosa'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Butia capitata']], [], false).length,
      'Butia capitata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Butomus umbellatus']], [], false)
        .length,
      'Butomus umbellatus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Buxus balearica']], [], false).length,
      'Buxus balearica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Buxus harlandii']], [], false).length,
      'Buxus harlandii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Buxus microphylla']], [], false).length,
      'Buxus microphylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Buxus sempervirens']], [], false)
        .length,
      'Buxus sempervirens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Buxus wallichiana']], [], false).length,
      'Buxus wallichiana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia atriplicifolia']], [], false)
        .length,
      'Cacalia atriplicifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia auriculata']], [], false)
        .length,
      'Cacalia auriculata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia delphiniifolia']], [], false)
        .length,
      'Cacalia delphiniifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia farfarifolia']], [], false)
        .length,
      'Cacalia farfarifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia firma']], [], false).length,
      'Cacalia firma'
    );
    assert.equal(
      7216,
      filterAndSort(
        crops,
        [nameToCrop['Cacalia hastata orientalis']],
        [],
        false
      ).length,
      'Cacalia hastata orientalis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia hastata tanakae']], [], false)
        .length,
      'Cacalia hastata tanakae'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia kiusiana']], [], false).length,
      'Cacalia kiusiana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia nikomontana']], [], false)
        .length,
      'Cacalia nikomontana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia peltifolia']], [], false)
        .length,
      'Cacalia peltifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cacalia pseudo-taimingasa']], [], false)
        .length,
      'Cacalia pseudo-taimingasa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Caesalpinia decapetala']], [], false)
        .length,
      'Caesalpinia decapetala'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Caesalpinia gilliesii']], [], false)
        .length,
      'Caesalpinia gilliesii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Caesia calliantha']], [], false).length,
      'Caesia calliantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Caesia parviflora']], [], false).length,
      'Caesia parviflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Caesia vittata']], [], false).length,
      'Caesia vittata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Cakile edentula']], [], false).length,
      'Cakile edentula'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Cakile maritima']], [], false).length,
      'Cakile maritima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calamintha grandiflora']], [], false)
        .length,
      'Calamintha grandiflora'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Calamintha nepeta']], [], false).length,
      'Calamintha nepeta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calamintha sylvatica']], [], false)
        .length,
      'Calamintha sylvatica'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Calandrinia balonensis']], [], false)
        .length,
      'Calandrinia balonensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Calandrinia ciliata']], [], false)
        .length,
      'Calandrinia ciliata'
    );
    assert.equal(
      7074,
      filterAndSort(
        crops,
        [nameToCrop['Calandrinia ciliata menziesii']],
        [],
        false
      ).length,
      'Calandrinia ciliata menziesii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Calandrinia polyandra']], [], false)
        .length,
      'Calandrinia polyandra'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Calandrinia remota']], [], false)
        .length,
      'Calandrinia remota'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Calceolaria arachnoidea']], [], false)
        .length,
      'Calceolaria arachnoidea'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Calceolaria thyrsiflora']], [], false)
        .length,
      'Calceolaria thyrsiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calendula arvensis']], [], false)
        .length,
      'Calendula arvensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calendula officinalis']], [], false)
        .length,
      'Calendula officinalis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Calicotome spinosa']], [], false)
        .length,
      'Calicotome spinosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Calicotome villosa']], [], false)
        .length,
      'Calicotome villosa'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Calla palustris']], [], false).length,
      'Calla palustris'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Callicarpa americana']], [], false)
        .length,
      'Callicarpa americana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Callicarpa japonica']], [], false)
        .length,
      'Callicarpa japonica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Callicarpa macrophylla']], [], false)
        .length,
      'Callicarpa macrophylla'
    );
    assert.equal(
      7118,
      filterAndSort(crops, [nameToCrop['Callicarpa mollis']], [], false).length,
      'Callicarpa mollis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Callicarpa pedunculata']], [], false)
        .length,
      'Callicarpa pedunculata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Callicoma serratifolia']], [], false)
        .length,
      'Callicoma serratifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calligonum aphyllum']], [], false)
        .length,
      'Calligonum aphyllum'
    );
    assert.equal(
      7072,
      filterAndSort(crops, [nameToCrop['Callirhoe digitata']], [], false)
        .length,
      'Callirhoe digitata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Callirhoe involucrata']], [], false)
        .length,
      'Callirhoe involucrata'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Callirhoe leiocarpa']], [], false)
        .length,
      'Callirhoe leiocarpa'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Callistemon citrinus']], [], false)
        .length,
      'Callistemon citrinus'
    );
    assert.equal(
      192,
      filterAndSort(
        crops,
        [nameToCrop['Callitriche hermaphroditica']],
        [],
        false
      ).length,
      'Callitriche hermaphroditica'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Callitriche palustris']], [], false)
        .length,
      'Callitriche palustris'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Callitris columellaris']], [], false)
        .length,
      'Callitris columellaris'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Callitris endlicheri']], [], false)
        .length,
      'Callitris endlicheri'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Calluna vulgaris']], [], false).length,
      'Calluna vulgaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calocedrus decurrens']], [], false)
        .length,
      'Calocedrus decurrens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus barbatus']], [], false)
        .length,
      'Calochortus barbatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus clavatus']], [], false)
        .length,
      'Calochortus clavatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus elegans']], [], false)
        .length,
      'Calochortus elegans'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus gunnisonii']], [], false)
        .length,
      'Calochortus gunnisonii'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Calochortus luteus']], [], false)
        .length,
      'Calochortus luteus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus macrocarpus']], [], false)
        .length,
      'Calochortus macrocarpus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus nuttallii']], [], false)
        .length,
      'Calochortus nuttallii'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Calochortus nuttallii aureus']],
        [],
        false
      ).length,
      'Calochortus nuttallii aureus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus pulchellus']], [], false)
        .length,
      'Calochortus pulchellus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus tolmiei']], [], false)
        .length,
      'Calochortus tolmiei'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus uniflorus']], [], false)
        .length,
      'Calochortus uniflorus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Calochortus venustus']], [], false)
        .length,
      'Calochortus venustus'
    );
    assert.equal(
      190,
      filterAndSort(crops, [nameToCrop['Caltha leptosepala']], [], false)
        .length,
      'Caltha leptosepala'
    );
    assert.equal(
      190,
      filterAndSort(
        crops,
        [nameToCrop['Caltha leptosepala howellii']],
        [],
        false
      ).length,
      'Caltha leptosepala howellii'
    );
    assert.equal(
      185,
      filterAndSort(crops, [nameToCrop['Caltha natans']], [], false).length,
      'Caltha natans'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Caltha palustris']], [], false).length,
      'Caltha palustris'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Caltha sinogracilis']], [], false)
        .length,
      'Caltha sinogracilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Calycanthus floridus']], [], false)
        .length,
      'Calycanthus floridus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Calycanthus floridus glaucus']],
        [],
        false
      ).length,
      'Calycanthus floridus glaucus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Calycanthus occidentalis']], [], false)
        .length,
      'Calycanthus occidentalis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Calypso bulbosa']], [], false).length,
      'Calypso bulbosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Calystegia hederacea']], [], false)
        .length,
      'Calystegia hederacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Calystegia pellita']], [], false)
        .length,
      'Calystegia pellita'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Calystegia pubescens']], [], false)
        .length,
      'Calystegia pubescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Calystegia sepium']], [], false).length,
      'Calystegia sepium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Calystegia soldanella']], [], false)
        .length,
      'Calystegia soldanella'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Calystegia subvolubilis']], [], false)
        .length,
      'Calystegia subvolubilis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Camassia leichtlinii']], [], false)
        .length,
      'Camassia leichtlinii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Camassia quamash']], [], false).length,
      'Camassia quamash'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Camassia scilloides']], [], false)
        .length,
      'Camassia scilloides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Camelina sativa']], [], false).length,
      'Camelina sativa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Camellia biflora']], [], false).length,
      'Camellia biflora'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia chekiangoleosa']], [], false)
        .length,
      'Camellia chekiangoleosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Camellia gracilis']], [], false).length,
      'Camellia gracilis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Camellia japonica']], [], false).length,
      'Camellia japonica'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia kissi']], [], false).length,
      'Camellia kissi'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia oleifera']], [], false).length,
      'Camellia oleifera'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia pitardii']], [], false).length,
      'Camellia pitardii'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia polyodonta']], [], false)
        .length,
      'Camellia polyodonta'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia reticulata']], [], false)
        .length,
      'Camellia reticulata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia sasanqua']], [], false).length,
      'Camellia sasanqua'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia semiserrata']], [], false)
        .length,
      'Camellia semiserrata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia sinensis']], [], false).length,
      'Camellia sinensis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Camellia yunnanensis']], [], false)
        .length,
      'Camellia yunnanensis'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula alliariifolia']], [], false)
        .length,
      'Campanula alliariifolia'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Campanula carpatica']], [], false)
        .length,
      'Campanula carpatica'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Campanula carpatica turbinata']],
        [],
        false
      ).length,
      'Campanula carpatica turbinata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Campanula cochleariifolia']], [], false)
        .length,
      'Campanula cochleariifolia'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Campanula edulis']], [], false).length,
      'Campanula edulis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Campanula fenestrellata']], [], false)
        .length,
      'Campanula fenestrellata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Campanula garganica']], [], false)
        .length,
      'Campanula garganica'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Campanula glomerata']], [], false)
        .length,
      'Campanula glomerata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Campanula lactiflora']], [], false)
        .length,
      'Campanula lactiflora'
    );
    assert.equal(
      7072,
      filterAndSort(crops, [nameToCrop['Campanula lasiocarpa']], [], false)
        .length,
      'Campanula lasiocarpa'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula latifolia']], [], false)
        .length,
      'Campanula latifolia'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula latiloba']], [], false)
        .length,
      'Campanula latiloba'
    );
    assert.equal(
      7038,
      filterAndSort(crops, [nameToCrop['Campanula medium']], [], false).length,
      'Campanula medium'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Campanula parryi']], [], false).length,
      'Campanula parryi'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula persicifolia']], [], false)
        .length,
      'Campanula persicifolia'
    );
    assert.equal(
      6957,
      filterAndSort(
        crops,
        [nameToCrop['Campanula portenschlagiana']],
        [],
        false
      ).length,
      'Campanula portenschlagiana'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula poscharskyana']], [], false)
        .length,
      'Campanula poscharskyana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Campanula punctata']], [], false)
        .length,
      'Campanula punctata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Campanula pyramidalis']], [], false)
        .length,
      'Campanula pyramidalis'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula rapunculoides']], [], false)
        .length,
      'Campanula rapunculoides'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Campanula rapunculus']], [], false)
        .length,
      'Campanula rapunculus'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Campanula rotundifolia']], [], false)
        .length,
      'Campanula rotundifolia'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Campanula takesimana']], [], false)
        .length,
      'Campanula takesimana'
    );
    assert.equal(
      7038,
      filterAndSort(crops, [nameToCrop['Campanula versicolor']], [], false)
        .length,
      'Campanula versicolor'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Camphorosma monspeliaca']], [], false)
        .length,
      'Camphorosma monspeliaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Campsis grandiflora']], [], false)
        .length,
      'Campsis grandiflora'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Campsis radicans']], [], false).length,
      'Campsis radicans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Canarium album']], [], false).length,
      'Canarium album'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Canna edulis']], [], false).length,
      'Canna edulis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Canna glauca']], [], false).length,
      'Canna glauca'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Canna indica']], [], false).length,
      'Canna indica'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Cannabis sativa']], [], false).length,
      'Cannabis sativa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Capparis spinosa']], [], false).length,
      'Capparis spinosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Capsella bursa-pastoris']], [], false)
        .length,
      'Capsella bursa-pastoris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Capsicum annuum']], [], false).length,
      'Capsicum annuum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Capsicum baccatum']], [], false).length,
      'Capsicum baccatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Capsicum frutescens']], [], false)
        .length,
      'Capsicum frutescens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Capsicum pubescens']], [], false)
        .length,
      'Capsicum pubescens'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Caragana arborescens']], [], false)
        .length,
      'Caragana arborescens'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Caragana boisii']], [], false).length,
      'Caragana boisii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Caragana brevispina']], [], false)
        .length,
      'Caragana brevispina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Caragana decorticans']], [], false)
        .length,
      'Caragana decorticans'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Caragana fruticosa']], [], false)
        .length,
      'Caragana fruticosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Caragana gerardiana']], [], false)
        .length,
      'Caragana gerardiana'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Caragana jubata']], [], false).length,
      'Caragana jubata'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Caragana pygmaea']], [], false).length,
      'Caragana pygmaea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Caragana sinica']], [], false).length,
      'Caragana sinica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine amara']], [], false).length,
      'Cardamine amara'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine amaraeformis']], [], false)
        .length,
      'Cardamine amaraeformis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine bonariensis']], [], false)
        .length,
      'Cardamine bonariensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine bulbifera']], [], false)
        .length,
      'Cardamine bulbifera'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine bulbosa']], [], false).length,
      'Cardamine bulbosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine debilis']], [], false).length,
      'Cardamine debilis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine fauriei']], [], false).length,
      'Cardamine fauriei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine flexuosa']], [], false)
        .length,
      'Cardamine flexuosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine glacialis']], [], false)
        .length,
      'Cardamine glacialis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine heptaphylla']], [], false)
        .length,
      'Cardamine heptaphylla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine hirsuta']], [], false).length,
      'Cardamine hirsuta'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine impatiens']], [], false)
        .length,
      'Cardamine impatiens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine kitaibelii']], [], false)
        .length,
      'Cardamine kitaibelii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine komarovii']], [], false)
        .length,
      'Cardamine komarovii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine leucantha']], [], false)
        .length,
      'Cardamine leucantha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine loxostemonoides']], [], false)
        .length,
      'Cardamine loxostemonoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine lyrata']], [], false).length,
      'Cardamine lyrata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine macrophylla']], [], false)
        .length,
      'Cardamine macrophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine nasturtioides']], [], false)
        .length,
      'Cardamine nasturtioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine nipponica']], [], false)
        .length,
      'Cardamine nipponica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine oligosperma']], [], false)
        .length,
      'Cardamine oligosperma'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine pennsylvanica']], [], false)
        .length,
      'Cardamine pennsylvanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine pentaphyllos']], [], false)
        .length,
      'Cardamine pentaphyllos'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine pratensis']], [], false)
        .length,
      'Cardamine pratensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine prorepens']], [], false)
        .length,
      'Cardamine prorepens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine raphanifolia']], [], false)
        .length,
      'Cardamine raphanifolia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Cardamine rotundifolia']], [], false)
        .length,
      'Cardamine rotundifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine schinziana']], [], false)
        .length,
      'Cardamine schinziana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine scutata']], [], false).length,
      'Cardamine scutata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine trifolia']], [], false)
        .length,
      'Cardamine trifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardamine violacea']], [], false)
        .length,
      'Cardamine violacea'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cardamine yezoensis']], [], false)
        .length,
      'Cardamine yezoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cardaria draba']], [], false).length,
      'Cardaria draba'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cardiocrinum cordatum']], [], false)
        .length,
      'Cardiocrinum cordatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cardiocrinum giganteum']], [], false)
        .length,
      'Cardiocrinum giganteum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cardiospermum halicacabum']], [], false)
        .length,
      'Cardiospermum halicacabum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carduus cernuus']], [], false).length,
      'Carduus cernuus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carduus crispus']], [], false).length,
      'Carduus crispus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carduus nutans']], [], false).length,
      'Carduus nutans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex acutiformis']], [], false).length,
      'Carex acutiformis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Carex aquatilis']], [], false).length,
      'Carex aquatilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex arenaria']], [], false).length,
      'Carex arenaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex brizoides']], [], false).length,
      'Carex brizoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex buxbaumii']], [], false).length,
      'Carex buxbaumii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex dispalata']], [], false).length,
      'Carex dispalata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carex disticha']], [], false).length,
      'Carex disticha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex elata']], [], false).length,
      'Carex elata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex hirta']], [], false).length,
      'Carex hirta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex kobomugi']], [], false).length,
      'Carex kobomugi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex macrocephala']], [], false)
        .length,
      'Carex macrocephala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex nebraskensis']], [], false)
        .length,
      'Carex nebraskensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex nubigena']], [], false).length,
      'Carex nubigena'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex paniculata']], [], false).length,
      'Carex paniculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex riparia']], [], false).length,
      'Carex riparia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carex rostrata']], [], false).length,
      'Carex rostrata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Carex utriculata']], [], false).length,
      'Carex utriculata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Carlina acanthifolia']], [], false)
        .length,
      'Carlina acanthifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Carlina acaulis']], [], false).length,
      'Carlina acaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Carlina vulgaris']], [], false).length,
      'Carlina vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carpesium abrotanoides']], [], false)
        .length,
      'Carpesium abrotanoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carpesium divaricatum']], [], false)
        .length,
      'Carpesium divaricatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carpesium glossophyllum']], [], false)
        .length,
      'Carpesium glossophyllum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carpesium triste']], [], false).length,
      'Carpesium triste'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carpinus betulus']], [], false).length,
      'Carpinus betulus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carpinus caroliniana']], [], false)
        .length,
      'Carpinus caroliniana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carpinus cordata']], [], false).length,
      'Carpinus cordata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carpinus laxiflora']], [], false)
        .length,
      'Carpinus laxiflora'
    );
    assert.equal(
      6893,
      filterAndSort(crops, [nameToCrop['Carpobrotus acinaciformis']], [], false)
        .length,
      'Carpobrotus acinaciformis'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Carpobrotus aequilaterus']], [], false)
        .length,
      'Carpobrotus aequilaterus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Carpobrotus deliciosus']], [], false)
        .length,
      'Carpobrotus deliciosus'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Carpobrotus edulis']], [], false)
        .length,
      'Carpobrotus edulis'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Carpobrotus glaucescens']], [], false)
        .length,
      'Carpobrotus glaucescens'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Carpobrotus modestus']], [], false)
        .length,
      'Carpobrotus modestus'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Carpobrotus rossii']], [], false)
        .length,
      'Carpobrotus rossii'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Carpobrotus virescens']], [], false)
        .length,
      'Carpobrotus virescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Carthamnus lanatus']], [], false)
        .length,
      'Carthamnus lanatus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Carthamnus tinctorius']], [], false)
        .length,
      'Carthamnus tinctorius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Carum carvi']], [], false).length,
      'Carum carvi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya aquatica']], [], false).length,
      'Carya aquatica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya buckleyi']], [], false).length,
      'Carya buckleyi'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Carya californica']], [], false).length,
      'Carya californica'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Carya carolinae-septentrionalis']],
        [],
        false
      ).length,
      'Carya carolinae-septentrionalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya cathayensis']], [], false).length,
      'Carya cathayensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya cordiformis']], [], false).length,
      'Carya cordiformis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Carya floridana']], [], false).length,
      'Carya floridana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya glabra']], [], false).length,
      'Carya glabra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya glabra megacarpa']], [], false)
        .length,
      'Carya glabra megacarpa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya illinoinensis']], [], false)
        .length,
      'Carya illinoinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya laciniosa']], [], false).length,
      'Carya laciniosa'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Carya myristiciformis']], [], false)
        .length,
      'Carya myristiciformis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya ovalis']], [], false).length,
      'Carya ovalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya ovata']], [], false).length,
      'Carya ovata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya pallida']], [], false).length,
      'Carya pallida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Carya texana']], [], false).length,
      'Carya texana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya tomentosa']], [], false).length,
      'Carya tomentosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Carya x laneyi']], [], false).length,
      'Carya x laneyi'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cassinia fulvida']], [], false).length,
      'Cassinia fulvida'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cassiope tetragona']], [], false)
        .length,
      'Cassiope tetragona'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cassythia glabella']], [], false)
        .length,
      'Cassythia glabella'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Castanea alnifolia']], [], false)
        .length,
      'Castanea alnifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea crenata']], [], false).length,
      'Castanea crenata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea dentata']], [], false).length,
      'Castanea dentata'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Castanea henryi']], [], false).length,
      'Castanea henryi'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea mollissima']], [], false)
        .length,
      'Castanea mollissima'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Castanea ozarkensis']], [], false)
        .length,
      'Castanea ozarkensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea pumila']], [], false).length,
      'Castanea pumila'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Castanea pumila ashei']], [], false)
        .length,
      'Castanea pumila ashei'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea sativa']], [], false).length,
      'Castanea sativa'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Castanea seguinii']], [], false).length,
      'Castanea seguinii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea  species']], [], false).length,
      'Castanea  species'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Castanea x neglecta']], [], false)
        .length,
      'Castanea x neglecta'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Castanopsis cuspidata']], [], false)
        .length,
      'Castanopsis cuspidata'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Castanopsis delavayi']], [], false)
        .length,
      'Castanopsis delavayi'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Castanopsis hystrix']], [], false)
        .length,
      'Castanopsis hystrix'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Castanopsis orthacantha']], [], false)
        .length,
      'Castanopsis orthacantha'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Castanopsis sclerophylla']], [], false)
        .length,
      'Castanopsis sclerophylla'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Castanopsis tibetana']], [], false)
        .length,
      'Castanopsis tibetana'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Castanopsis tribuloides']], [], false)
        .length,
      'Castanopsis tribuloides'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Castanospermum australe']], [], false)
        .length,
      'Castanospermum australe'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Castilleja linariaefolia']], [], false)
        .length,
      'Castilleja linariaefolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina cristata']], [], false)
        .length,
      'Casuarina cristata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina cunninghamiana']], [], false)
        .length,
      'Casuarina cunninghamiana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina glauca']], [], false).length,
      'Casuarina glauca'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina littoralis']], [], false)
        .length,
      'Casuarina littoralis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina torulosa']], [], false)
        .length,
      'Casuarina torulosa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Casuarina verticillata']], [], false)
        .length,
      'Casuarina verticillata'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Catabrosa aquatica']], [], false)
        .length,
      'Catabrosa aquatica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Catalpa bignonioides']], [], false)
        .length,
      'Catalpa bignonioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Catalpa bungei']], [], false).length,
      'Catalpa bungei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Catalpa ovata']], [], false).length,
      'Catalpa ovata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Catalpa speciosa']], [], false).length,
      'Catalpa speciosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Caucalis platycarpos']], [], false)
        .length,
      'Caucalis platycarpos'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Caulanthus glaucus']], [], false)
        .length,
      'Caulanthus glaucus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Caulophyllum robustum']], [], false)
        .length,
      'Caulophyllum robustum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Caulophyllum thalictroides']],
        [],
        false
      ).length,
      'Caulophyllum thalictroides'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Cautleya spicata']], [], false).length,
      'Cautleya spicata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cavendishia alatum']], [], false)
        .length,
      'Cavendishia alatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ceanothus americanus']], [], false)
        .length,
      'Ceanothus americanus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ceanothus arboreus']], [], false)
        .length,
      'Ceanothus arboreus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus cuneatus']], [], false)
        .length,
      'Ceanothus cuneatus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ceanothus divergens']], [], false)
        .length,
      'Ceanothus divergens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ceanothus fendleri']], [], false)
        .length,
      'Ceanothus fendleri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus impressus']], [], false)
        .length,
      'Ceanothus impressus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus integerrimus']], [], false)
        .length,
      'Ceanothus integerrimus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ceanothus maritimus']], [], false)
        .length,
      'Ceanothus maritimus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ceanothus ovatus']], [], false).length,
      'Ceanothus ovatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus prostratus']], [], false)
        .length,
      'Ceanothus prostratus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ceanothus purpureus']], [], false)
        .length,
      'Ceanothus purpureus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ceanothus sanguineus']], [], false)
        .length,
      'Ceanothus sanguineus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus  species']], [], false)
        .length,
      'Ceanothus  species'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ceanothus thyrsiflorus']], [], false)
        .length,
      'Ceanothus thyrsiflorus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ceanothus velutinus']], [], false)
        .length,
      'Ceanothus velutinus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cedronella canariensis']], [], false)
        .length,
      'Cedronella canariensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cedrus atlantica']], [], false).length,
      'Cedrus atlantica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Cedrus deodara']], [], false).length,
      'Cedrus deodara'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cedrus libani']], [], false).length,
      'Cedrus libani'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Celastrus angulatus']], [], false)
        .length,
      'Celastrus angulatus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Celastrus dependens']], [], false)
        .length,
      'Celastrus dependens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Celastrus flagellaris']], [], false)
        .length,
      'Celastrus flagellaris'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Celastrus orbiculatus']], [], false)
        .length,
      'Celastrus orbiculatus'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Celastrus scandens']], [], false)
        .length,
      'Celastrus scandens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Celosia argentea cristata']], [], false)
        .length,
      'Celosia argentea cristata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis australis']], [], false).length,
      'Celtis australis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis boninensis']], [], false).length,
      'Celtis boninensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Celtis bungeana']], [], false).length,
      'Celtis bungeana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis caucasica']], [], false).length,
      'Celtis caucasica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis glycycarpa']], [], false).length,
      'Celtis glycycarpa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis jessoensis']], [], false).length,
      'Celtis jessoensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Celtis koraiensis']], [], false).length,
      'Celtis koraiensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Celtis laevigata']], [], false).length,
      'Celtis laevigata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis laveillei']], [], false).length,
      'Celtis laveillei'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis lindheimeri']], [], false)
        .length,
      'Celtis lindheimeri'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Celtis occidentalis']], [], false)
        .length,
      'Celtis occidentalis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis pallida']], [], false).length,
      'Celtis pallida'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis reticulata']], [], false).length,
      'Celtis reticulata'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Celtis sinensis']], [], false).length,
      'Celtis sinensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis tenuifolia']], [], false).length,
      'Celtis tenuifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis tetrandra']], [], false).length,
      'Celtis tetrandra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Celtis tournefortii']], [], false)
        .length,
      'Celtis tournefortii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea acaulis']], [], false).length,
      'Centaurea acaulis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea calcitrapa']], [], false)
        .length,
      'Centaurea calcitrapa'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Centaurea chamaerhaponticum']],
        [],
        false
      ).length,
      'Centaurea chamaerhaponticum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea cyanus']], [], false).length,
      'Centaurea cyanus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea depressa']], [], false)
        .length,
      'Centaurea depressa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea iberica']], [], false).length,
      'Centaurea iberica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea jacea']], [], false).length,
      'Centaurea jacea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea melitensis']], [], false)
        .length,
      'Centaurea melitensis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Centaurea montana']], [], false).length,
      'Centaurea montana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Centaurea nigra']], [], false).length,
      'Centaurea nigra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea raphanina']], [], false)
        .length,
      'Centaurea raphanina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Centaurea scabiosa']], [], false)
        .length,
      'Centaurea scabiosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centaurea solstitialis']], [], false)
        .length,
      'Centaurea solstitialis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Centaurium erythraea']], [], false)
        .length,
      'Centaurium erythraea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Centaurium spicatum']], [], false)
        .length,
      'Centaurium spicatum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Centella asiatica']], [], false).length,
      'Centella asiatica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Centipeda minima']], [], false).length,
      'Centipeda minima'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Centranthus macrosiphon']], [], false)
        .length,
      'Centranthus macrosiphon'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Centranthus ruber']], [], false).length,
      'Centranthus ruber'
    );
    assert.equal(
      5278,
      filterAndSort(crops, [nameToCrop['Centrosema virginianum']], [], false)
        .length,
      'Centrosema virginianum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Cephalanthus occidentalis']], [], false)
        .length,
      'Cephalanthus occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cephalaria syriaca']], [], false)
        .length,
      'Cephalaria syriaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cephalotaxus fortunei']], [], false)
        .length,
      'Cephalotaxus fortunei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cephalotaxus harringtonia']], [], false)
        .length,
      'Cephalotaxus harringtonia'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Cephalotaxus harringtonia drupacea']],
        [],
        false
      ).length,
      'Cephalotaxus harringtonia drupacea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Cephalotaxus harringtonia koreana']],
        [],
        false
      ).length,
      'Cephalotaxus harringtonia koreana'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Cephalotaxus harringtonia nana']],
        [],
        false
      ).length,
      'Cephalotaxus harringtonia nana'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cephalotaxus lanceolata']], [], false)
        .length,
      'Cephalotaxus lanceolata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cephalotaxus oliveri']], [], false)
        .length,
      'Cephalotaxus oliveri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cephalotaxus sinensis']], [], false)
        .length,
      'Cephalotaxus sinensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cephalotaxus wilsoniana']], [], false)
        .length,
      'Cephalotaxus wilsoniana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cerastium arvense']], [], false).length,
      'Cerastium arvense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cerastium fontanum']], [], false)
        .length,
      'Cerastium fontanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cerastium furcatum']], [], false)
        .length,
      'Cerastium furcatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cerastium holosteoides']], [], false)
        .length,
      'Cerastium holosteoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cerastium semidecandrum']], [], false)
        .length,
      'Cerastium semidecandrum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cerastium viscosum']], [], false)
        .length,
      'Cerastium viscosum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ceratonia siliqua']], [], false).length,
      'Ceratonia siliqua'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ceratophyllum demersum']], [], false)
        .length,
      'Ceratophyllum demersum'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Ceratostigma plumbaginoides']],
        [],
        false
      ).length,
      'Ceratostigma plumbaginoides'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Ceratostigma willmottianum']],
        [],
        false
      ).length,
      'Ceratostigma willmottianum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cercidiphyllum japonicum']], [], false)
        .length,
      'Cercidiphyllum japonicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cercis canadensis']], [], false).length,
      'Cercis canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cercis chinensis']], [], false).length,
      'Cercis chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cercis occidentalis']], [], false)
        .length,
      'Cercis occidentalis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cercis siliquastrum']], [], false)
        .length,
      'Cercis siliquastrum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cercocarpus ledifolius']], [], false)
        .length,
      'Cercocarpus ledifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cercocarpus montanus']], [], false)
        .length,
      'Cercocarpus montanus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ceroxylon alpinum']], [], false).length,
      'Ceroxylon alpinum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ceroxylon quindiuense']], [], false)
        .length,
      'Ceroxylon quindiuense'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ceroxylon utile']], [], false).length,
      'Ceroxylon utile'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Cetraria islandica']], [], false)
        .length,
      'Cetraria islandica'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Chaenactis douglasii']], [], false)
        .length,
      'Chaenactis douglasii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chaenomeles cathayensis']], [], false)
        .length,
      'Chaenomeles cathayensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chaenomeles japonica']], [], false)
        .length,
      'Chaenomeles japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chaenomeles speciosa']], [], false)
        .length,
      'Chaenomeles speciosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chaenomeles x superba']], [], false)
        .length,
      'Chaenomeles x superba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chaerophyllum bulbosum']], [], false)
        .length,
      'Chaerophyllum bulbosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chaerophyllum tuberosum']], [], false)
        .length,
      'Chaerophyllum tuberosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chaerophyllum villosum']], [], false)
        .length,
      'Chaerophyllum villosum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chamaecrista fasciculata']], [], false)
        .length,
      'Chamaecrista fasciculata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Chamaecyparis lawsoniana']], [], false)
        .length,
      'Chamaecyparis lawsoniana'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Chamaecyparis nootkatensis']],
        [],
        false
      ).length,
      'Chamaecyparis nootkatensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chamaecyparis thyoides']], [], false)
        .length,
      'Chamaecyparis thyoides'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Chamaedaphne calyculata']], [], false)
        .length,
      'Chamaedaphne calyculata'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Chamaelirium luteum']], [], false)
        .length,
      'Chamaelirium luteum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Chamaemelum nobile']], [], false)
        .length,
      'Chamaemelum nobile'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Chamaerops humilis']], [], false)
        .length,
      'Chamaerops humilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chamaesaracha coronopus']], [], false)
        .length,
      'Chamaesaracha coronopus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chasmanthium latifolium']], [], false)
        .length,
      'Chasmanthium latifolium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cheilanthes pteridioides']], [], false)
        .length,
      'Cheilanthes pteridioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chelidonium majus']], [], false).length,
      'Chelidonium majus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Chelone glabra']], [], false).length,
      'Chelone glabra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium acuminatum']], [], false)
        .length,
      'Chenopodium acuminatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium album']], [], false).length,
      'Chenopodium album'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Chenopodium ambrosioides']], [], false)
        .length,
      'Chenopodium ambrosioides'
    );
    assert.equal(
      7205,
      filterAndSort(
        crops,
        [nameToCrop['Chenopodium ambrosioides anthelminticum']],
        [],
        false
      ).length,
      'Chenopodium ambrosioides anthelminticum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium auricomum']], [], false)
        .length,
      'Chenopodium auricomum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium berlandieri']], [], false)
        .length,
      'Chenopodium berlandieri'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Chenopodium bonus-henricus']],
        [],
        false
      ).length,
      'Chenopodium bonus-henricus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium botrys']], [], false)
        .length,
      'Chenopodium botrys'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium bushianum']], [], false)
        .length,
      'Chenopodium bushianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium californicum']], [], false)
        .length,
      'Chenopodium californicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium canihua']], [], false)
        .length,
      'Chenopodium canihua'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chenopodium capitatum']], [], false)
        .length,
      'Chenopodium capitatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium cristatum']], [], false)
        .length,
      'Chenopodium cristatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chenopodium ficifolium']], [], false)
        .length,
      'Chenopodium ficifolium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chenopodium foliosum']], [], false)
        .length,
      'Chenopodium foliosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium fremontii']], [], false)
        .length,
      'Chenopodium fremontii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chenopodium giganteum']], [], false)
        .length,
      'Chenopodium giganteum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Chenopodium gigantospermum']],
        [],
        false
      ).length,
      'Chenopodium gigantospermum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium glaucum']], [], false)
        .length,
      'Chenopodium glaucum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium graveolens']], [], false)
        .length,
      'Chenopodium graveolens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium hybridum']], [], false)
        .length,
      'Chenopodium hybridum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium incanum']], [], false)
        .length,
      'Chenopodium incanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium leptophyllum']], [], false)
        .length,
      'Chenopodium leptophyllum'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Chenopodium murale']], [], false)
        .length,
      'Chenopodium murale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium nuttalliae']], [], false)
        .length,
      'Chenopodium nuttalliae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium opulifolium']], [], false)
        .length,
      'Chenopodium opulifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium overi']], [], false).length,
      'Chenopodium overi'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Chenopodium pallidicaule']], [], false)
        .length,
      'Chenopodium pallidicaule'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium polyspermum']], [], false)
        .length,
      'Chenopodium polyspermum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium pratericola']], [], false)
        .length,
      'Chenopodium pratericola'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Chenopodium quinoa']], [], false)
        .length,
      'Chenopodium quinoa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium rubrum']], [], false)
        .length,
      'Chenopodium rubrum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium schraderianum']], [], false)
        .length,
      'Chenopodium schraderianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium stenophyllum']], [], false)
        .length,
      'Chenopodium stenophyllum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium suecicum']], [], false)
        .length,
      'Chenopodium suecicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium urbicum']], [], false)
        .length,
      'Chenopodium urbicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium virgatum']], [], false)
        .length,
      'Chenopodium virgatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chenopodium viride']], [], false)
        .length,
      'Chenopodium viride'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chenopodium vulvaria']], [], false)
        .length,
      'Chenopodium vulvaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chesneya nubigena']], [], false).length,
      'Chesneya nubigena'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Chiliotrichum diffusum']], [], false)
        .length,
      'Chiliotrichum diffusum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Chilopsis linearis']], [], false)
        .length,
      'Chilopsis linearis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chimaphila maculata']], [], false)
        .length,
      'Chimaphila maculata'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Chimaphila umbellata']], [], false)
        .length,
      'Chimaphila umbellata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chimonanthus praecox']], [], false)
        .length,
      'Chimonanthus praecox'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chimonobambusa marmorea']], [], false)
        .length,
      'Chimonobambusa marmorea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Chimonobambusa pachystachys']],
        [],
        false
      ).length,
      'Chimonobambusa pachystachys'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chimonobambusa purpurea']], [], false)
        .length,
      'Chimonobambusa purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Chimonobambusa quadrangularis']],
        [],
        false
      ).length,
      'Chimonobambusa quadrangularis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Chimonobambusa szechuanensis']],
        [],
        false
      ).length,
      'Chimonobambusa szechuanensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Chionanthus virginicus']], [], false)
        .length,
      'Chionanthus virginicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chionographis japonica']], [], false)
        .length,
      'Chionographis japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chloranthus japonicus']], [], false)
        .length,
      'Chloranthus japonicus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Chlorogalum parviflorum']], [], false)
        .length,
      'Chlorogalum parviflorum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Chlorogalum pomeridianum']], [], false)
        .length,
      'Chlorogalum pomeridianum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Choisya ternata']], [], false).length,
      'Choisya ternata'
    );
    assert.equal(
      6401,
      filterAndSort(crops, [nameToCrop['Chondrilla chondrilloides']], [], false)
        .length,
      'Chondrilla chondrilloides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chondrilla juncea']], [], false).length,
      'Chondrilla juncea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chorispora sabulosa']], [], false)
        .length,
      'Chorispora sabulosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Chorispora tenella']], [], false)
        .length,
      'Chorispora tenella'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chrozophora obliqua']], [], false)
        .length,
      'Chrozophora obliqua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chrozophora tinctoria']], [], false)
        .length,
      'Chrozophora tinctoria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chrysanthemum carinatum']], [], false)
        .length,
      'Chrysanthemum carinatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chrysanthemum coronarium']], [], false)
        .length,
      'Chrysanthemum coronarium'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Chrysanthemum coronarium spatiosum']],
        [],
        false
      ).length,
      'Chrysanthemum coronarium spatiosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Chrysanthemum marshallii']], [], false)
        .length,
      'Chrysanthemum marshallii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Chrysanthemum segetum']], [], false)
        .length,
      'Chrysanthemum segetum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Chrysolepis chrysophylla']], [], false)
        .length,
      'Chrysolepis chrysophylla'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Chrysolepis sempervirens']], [], false)
        .length,
      'Chrysolepis sempervirens'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Chrysosplenium alternifolium']],
        [],
        false
      ).length,
      'Chrysosplenium alternifolium'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Chrysosplenium americanum']], [], false)
        .length,
      'Chrysosplenium americanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Chrysosplenium carnosum']], [], false)
        .length,
      'Chrysosplenium carnosum'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Chrysosplenium oppositifolium']],
        [],
        false
      ).length,
      'Chrysosplenium oppositifolium'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Chrysothamnus graveolens']], [], false)
        .length,
      'Chrysothamnus graveolens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Chrysothamnus nauseosus']], [], false)
        .length,
      'Chrysothamnus nauseosus'
    );
    assert.equal(
      7121,
      filterAndSort(
        crops,
        [nameToCrop['Chrysothamnus viscidiflorus']],
        [],
        false
      ).length,
      'Chrysothamnus viscidiflorus'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Chusquea culeou']], [], false).length,
      'Chusquea culeou'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Chusquea quila']], [], false).length,
      'Chusquea quila'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Cibotium barometz']], [], false).length,
      'Cibotium barometz'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cicer arietinum']], [], false).length,
      'Cicer arietinum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cicer microphyllum']], [], false)
        .length,
      'Cicer microphyllum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Cicerbita alpina']], [], false).length,
      'Cicerbita alpina'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cichorium endiva']], [], false).length,
      'Cichorium endiva'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Cichorium intybus']], [], false).length,
      'Cichorium intybus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cichorium spinosum']], [], false)
        .length,
      'Cichorium spinosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cicuta virosa']], [], false).length,
      'Cicuta virosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cimicifuga dahurica']], [], false)
        .length,
      'Cimicifuga dahurica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Cimicifuga foetida']], [], false)
        .length,
      'Cimicifuga foetida'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Cimicifuga heracleifolia']], [], false)
        .length,
      'Cimicifuga heracleifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cimicifuga racemosa']], [], false)
        .length,
      'Cimicifuga racemosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cimicifuga simplex']], [], false)
        .length,
      'Cimicifuga simplex'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cinna latifolia']], [], false).length,
      'Cinna latifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cinnamomum camphora']], [], false)
        .length,
      'Cinnamomum camphora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Circaea lutetiana']], [], false).length,
      'Circaea lutetiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cirsium acaulon']], [], false).length,
      'Cirsium acaulon'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium amplexifolium']], [], false)
        .length,
      'Cirsium amplexifolium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cirsium arvense']], [], false).length,
      'Cirsium arvense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium brevicaule']], [], false)
        .length,
      'Cirsium brevicaule'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium brevistylum']], [], false)
        .length,
      'Cirsium brevistylum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium buergeri']], [], false).length,
      'Cirsium buergeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium chinense']], [], false).length,
      'Cirsium chinense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium coreanum']], [], false).length,
      'Cirsium coreanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium dipsacolepis']], [], false)
        .length,
      'Cirsium dipsacolepis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cirsium eatoni']], [], false).length,
      'Cirsium eatoni'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium edule']], [], false).length,
      'Cirsium edule'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium eriophorum']], [], false)
        .length,
      'Cirsium eriophorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium foliosum']], [], false).length,
      'Cirsium foliosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium hookerianum']], [], false)
        .length,
      'Cirsium hookerianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium japonicum']], [], false).length,
      'Cirsium japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium kamtschaticum']], [], false)
        .length,
      'Cirsium kamtschaticum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium lepskyle']], [], false).length,
      'Cirsium lepskyle'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium lineare']], [], false).length,
      'Cirsium lineare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium maackii']], [], false).length,
      'Cirsium maackii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium maritimum']], [], false).length,
      'Cirsium maritimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium nipponicum']], [], false)
        .length,
      'Cirsium nipponicum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cirsium occidentale']], [], false)
        .length,
      'Cirsium occidentale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cirsium ochrocentrum']], [], false)
        .length,
      'Cirsium ochrocentrum'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Cirsium oleraceum']], [], false).length,
      'Cirsium oleraceum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium oligophyllum']], [], false)
        .length,
      'Cirsium oligophyllum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium pallidum']], [], false).length,
      'Cirsium pallidum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cirsium palustre']], [], false).length,
      'Cirsium palustre'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium pectinellum']], [], false)
        .length,
      'Cirsium pectinellum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium pendulum']], [], false).length,
      'Cirsium pendulum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium purpuratum']], [], false)
        .length,
      'Cirsium purpuratum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium schantarense']], [], false)
        .length,
      'Cirsium schantarense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cirsium scopulorum']], [], false)
        .length,
      'Cirsium scopulorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium serratuloides']], [], false)
        .length,
      'Cirsium serratuloides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium setosum']], [], false).length,
      'Cirsium setosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium sieboldii']], [], false).length,
      'Cirsium sieboldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium spicatum']], [], false).length,
      'Cirsium spicatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium spinosum']], [], false).length,
      'Cirsium spinosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium suffultum']], [], false).length,
      'Cirsium suffultum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium tuberosum']], [], false).length,
      'Cirsium tuberosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium undulatum']], [], false).length,
      'Cirsium undulatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium verutum']], [], false).length,
      'Cirsium verutum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium virginianum']], [], false)
        .length,
      'Cirsium virginianum'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Cirsium vulgare']], [], false).length,
      'Cirsium vulgare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cirsium yezoense']], [], false).length,
      'Cirsium yezoense'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cistus albidus']], [], false).length,
      'Cistus albidus'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Cistus creticus']], [], false).length,
      'Cistus creticus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cistus ladanifer']], [], false).length,
      'Cistus ladanifer'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Cistus salviifolius']], [], false)
        .length,
      'Cistus salviifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Citrofortunella floridana']], [], false)
        .length,
      'Citrofortunella floridana'
    );
    assert.equal(
      7038,
      filterAndSort(
        crops,
        [nameToCrop['Citrofortunella microcarpa']],
        [],
        false
      ).length,
      'Citrofortunella microcarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Citrofortunella swinglei']], [], false)
        .length,
      'Citrofortunella swinglei'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Citroncirus']], [], false).length,
      'Citroncirus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Citroncirus webberi']], [], false)
        .length,
      'Citroncirus webberi'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Citrullus lanatus']], [], false).length,
      'Citrullus lanatus'
    );
    assert.equal(
      6949,
      filterAndSort(crops, [nameToCrop['Citrus aurantium']], [], false).length,
      'Citrus aurantium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Citrus ichangensis']], [], false)
        .length,
      'Citrus ichangensis'
    );
    assert.equal(
      6950,
      filterAndSort(crops, [nameToCrop['Citrus limon']], [], false).length,
      'Citrus limon'
    );
    assert.equal(
      6950,
      filterAndSort(crops, [nameToCrop['Citrus reticulata']], [], false).length,
      'Citrus reticulata'
    );
    assert.equal(
      6950,
      filterAndSort(crops, [nameToCrop['Citrus sinensis']], [], false).length,
      'Citrus sinensis'
    );
    assert.equal(
      6950,
      filterAndSort(crops, [nameToCrop['Citrus x meyeri']], [], false).length,
      'Citrus x meyeri'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Cladium mariscus']], [], false).length,
      'Cladium mariscus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cladrastis lutea']], [], false).length,
      'Cladrastis lutea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Clarkia biloba']], [], false).length,
      'Clarkia biloba'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clarkia pulchella']], [], false).length,
      'Clarkia pulchella'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Clarkia purpurea']], [], false).length,
      'Clarkia purpurea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clarkia unguiculata']], [], false)
        .length,
      'Clarkia unguiculata'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Claytonia acutifolia']], [], false)
        .length,
      'Claytonia acutifolia'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Claytonia caroliniana']], [], false)
        .length,
      'Claytonia caroliniana'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Claytonia lanceolata']], [], false)
        .length,
      'Claytonia lanceolata'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Claytonia megarhiza']], [], false)
        .length,
      'Claytonia megarhiza'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Claytonia perfoliata']], [], false)
        .length,
      'Claytonia perfoliata'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Claytonia scammaniana']], [], false)
        .length,
      'Claytonia scammaniana'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Claytonia sibirica']], [], false)
        .length,
      'Claytonia sibirica'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Claytonia tuberosa']], [], false)
        .length,
      'Claytonia tuberosa'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Claytonia umbellata']], [], false)
        .length,
      'Claytonia umbellata'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Claytonia virginica']], [], false)
        .length,
      'Claytonia virginica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis alternata']], [], false)
        .length,
      'Clematis alternata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis apiifolia']], [], false)
        .length,
      'Clematis apiifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Clematis barbellata']], [], false)
        .length,
      'Clematis barbellata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis brachyura']], [], false)
        .length,
      'Clematis brachyura'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis buchananiana']], [], false)
        .length,
      'Clematis buchananiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis chinensis']], [], false)
        .length,
      'Clematis chinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Clematis columbiana']], [], false)
        .length,
      'Clematis columbiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis connata']], [], false).length,
      'Clematis connata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis douglasii']], [], false)
        .length,
      'Clematis douglasii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis flammula']], [], false).length,
      'Clematis flammula'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Clematis ianthina']], [], false).length,
      'Clematis ianthina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Clematis ligusticifolia']], [], false)
        .length,
      'Clematis ligusticifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis mandschurica']], [], false)
        .length,
      'Clematis mandschurica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Clematis microphylla']], [], false)
        .length,
      'Clematis microphylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis orientalis']], [], false)
        .length,
      'Clematis orientalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis patens']], [], false).length,
      'Clematis patens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis pierotii']], [], false).length,
      'Clematis pierotii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Clematis recta']], [], false).length,
      'Clematis recta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis serratifolia']], [], false)
        .length,
      'Clematis serratifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis terniflora']], [], false)
        .length,
      'Clematis terniflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clematis tibetana']], [], false).length,
      'Clematis tibetana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Clematis trichotoma']], [], false)
        .length,
      'Clematis trichotoma'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Clematis vitalba']], [], false).length,
      'Clematis vitalba'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome gynandra']], [], false).length,
      'Cleome gynandra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome lutea']], [], false).length,
      'Cleome lutea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome monophylla']], [], false).length,
      'Cleome monophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome ornithopodioides']], [], false)
        .length,
      'Cleome ornithopodioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome serrulata']], [], false).length,
      'Cleome serrulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cleome viscosa']], [], false).length,
      'Cleome viscosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clerodendrum bungei']], [], false)
        .length,
      'Clerodendrum bungei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clerodendrum cyrtophyllum']], [], false)
        .length,
      'Clerodendrum cyrtophyllum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Clerodendrum japonicum']], [], false)
        .length,
      'Clerodendrum japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Clerodendrum kwangtungense']],
        [],
        false
      ).length,
      'Clerodendrum kwangtungense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Clerodendrum trichotomum']], [], false)
        .length,
      'Clerodendrum trichotomum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Clethra alnifolia']], [], false).length,
      'Clethra alnifolia'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Clethra barbinervis']], [], false)
        .length,
      'Clethra barbinervis'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Cliftonia monophylla']], [], false)
        .length,
      'Cliftonia monophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clinopodium chinense']], [], false)
        .length,
      'Clinopodium chinense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clinopodium umbrosum']], [], false)
        .length,
      'Clinopodium umbrosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Clinopodium vulgare']], [], false)
        .length,
      'Clinopodium vulgare'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Clintonia borealis']], [], false)
        .length,
      'Clintonia borealis'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Clintonia udensis']], [], false).length,
      'Clintonia udensis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Clintonia umbellulata']], [], false)
        .length,
      'Clintonia umbellulata'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Cneorum tricoccon']], [], false).length,
      'Cneorum tricoccon'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Cnicus benedictus']], [], false).length,
      'Cnicus benedictus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cnidium japonicum']], [], false).length,
      'Cnidium japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cnidium monnieri']], [], false).length,
      'Cnidium monnieri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cnidium officinale']], [], false)
        .length,
      'Cnidium officinale'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Coccinia grandis']], [], false).length,
      'Coccinia grandis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cocculus orbiculatus']], [], false)
        .length,
      'Cocculus orbiculatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cochlearia anglica']], [], false)
        .length,
      'Cochlearia anglica'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Cochlearia danica']], [], false).length,
      'Cochlearia danica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cochlearia macrocarpa']], [], false)
        .length,
      'Cochlearia macrocarpa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cochlearia oblongifolia']], [], false)
        .length,
      'Cochlearia oblongifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cochlearia officinalis']], [], false)
        .length,
      'Cochlearia officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cochlearia scotica']], [], false)
        .length,
      'Cochlearia scotica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Codonopsis javanica']], [], false)
        .length,
      'Codonopsis javanica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Codonopsis lanceolata']], [], false)
        .length,
      'Codonopsis lanceolata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Codonopsis nervosa']], [], false)
        .length,
      'Codonopsis nervosa'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Codonopsis ovata']], [], false).length,
      'Codonopsis ovata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Codonopsis pilosula']], [], false)
        .length,
      'Codonopsis pilosula'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Codonopsis tangshen']], [], false)
        .length,
      'Codonopsis tangshen'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Codonopsis tubulosa']], [], false)
        .length,
      'Codonopsis tubulosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Codonopsis ussuriensis']], [], false)
        .length,
      'Codonopsis ussuriensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Coelopleurum gmelini']], [], false)
        .length,
      'Coelopleurum gmelini'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Coelopleurum lucidum']], [], false)
        .length,
      'Coelopleurum lucidum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Coix lacryma-jobi']], [], false).length,
      'Coix lacryma-jobi'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Colchicum autumnale']], [], false)
        .length,
      'Colchicum autumnale'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Colchicum bivonae']], [], false).length,
      'Colchicum bivonae'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Colchicum luteum']], [], false).length,
      'Colchicum luteum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Coleus edulis']], [], false).length,
      'Coleus edulis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Colletia armata']], [], false).length,
      'Colletia armata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Colletia ferox']], [], false).length,
      'Colletia ferox'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Colletia paradoxa']], [], false).length,
      'Colletia paradoxa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Collinsonia canadensis']], [], false)
        .length,
      'Collinsonia canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Coluria geoides']], [], false).length,
      'Coluria geoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Colutea arborescens']], [], false)
        .length,
      'Colutea arborescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Colutea istria']], [], false).length,
      'Colutea istria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Colutea x media']], [], false).length,
      'Colutea x media'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Comandra pallida']], [], false).length,
      'Comandra pallida'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Comandra richardsiana']], [], false)
        .length,
      'Comandra richardsiana'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Comandra umbellata']], [], false)
        .length,
      'Comandra umbellata'
    );
    assert.equal(
      6893,
      filterAndSort(crops, [nameToCrop['Commelina coelestis']], [], false)
        .length,
      'Commelina coelestis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Commelina communis']], [], false)
        .length,
      'Commelina communis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Commelina dianthifolia']], [], false)
        .length,
      'Commelina dianthifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Commelina elliptica']], [], false)
        .length,
      'Commelina elliptica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Commelina erecta']], [], false).length,
      'Commelina erecta'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Commelina erecta angustifolia']],
        [],
        false
      ).length,
      'Commelina erecta angustifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Commelina tuberosa']], [], false)
        .length,
      'Commelina tuberosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Commelina virginica']], [], false)
        .length,
      'Commelina virginica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Commersonia fraseri']], [], false)
        .length,
      'Commersonia fraseri'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Comptonia peregrina']], [], false)
        .length,
      'Comptonia peregrina'
    );
    assert.equal(
      7057,
      filterAndSort(
        crops,
        [nameToCrop['Comptonia peregrina asplenifolia']],
        [],
        false
      ).length,
      'Comptonia peregrina asplenifolia'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Conandron ramondioides']], [], false)
        .length,
      'Conandron ramondioides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Conanthera bifolia']], [], false)
        .length,
      'Conanthera bifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Conanthera campanulata']], [], false)
        .length,
      'Conanthera campanulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Condalia hookeri']], [], false).length,
      'Condalia hookeri'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Coniogramme japonica']], [], false)
        .length,
      'Coniogramme japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Conioselinum pacificum']], [], false)
        .length,
      'Conioselinum pacificum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Conioselinum univittatum']], [], false)
        .length,
      'Conioselinum univittatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Conium maculatum']], [], false).length,
      'Conium maculatum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Conopodium majus']], [], false).length,
      'Conopodium majus'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Conradina verticillata']], [], false)
        .length,
      'Conradina verticillata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Conringia orientalis']], [], false)
        .length,
      'Conringia orientalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Consolida ambigua']], [], false).length,
      'Consolida ambigua'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Consolida regalis']], [], false).length,
      'Consolida regalis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Convallaria keiskei']], [], false)
        .length,
      'Convallaria keiskei'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Convallaria majalis']], [], false)
        .length,
      'Convallaria majalis'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Convolvulus arvensis']], [], false)
        .length,
      'Convolvulus arvensis'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Convolvulus erubescens']], [], false)
        .length,
      'Convolvulus erubescens'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Convolvulus scammonia']], [], false)
        .length,
      'Convolvulus scammonia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Convolvulus tricolor']], [], false)
        .length,
      'Convolvulus tricolor'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Conyza canadensis']], [], false).length,
      'Conyza canadensis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma acerosa']], [], false).length,
      'Coprosma acerosa'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma areolata']], [], false).length,
      'Coprosma areolata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Coprosma atropurpurea']], [], false)
        .length,
      'Coprosma atropurpurea'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma billardieri']], [], false)
        .length,
      'Coprosma billardieri'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma brunnea']], [], false).length,
      'Coprosma brunnea'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma foetidissima']], [], false)
        .length,
      'Coprosma foetidissima'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma grandifolia']], [], false)
        .length,
      'Coprosma grandifolia'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma hirtella']], [], false).length,
      'Coprosma hirtella'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma lucida']], [], false).length,
      'Coprosma lucida'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma moorei']], [], false).length,
      'Coprosma moorei'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma nitida']], [], false).length,
      'Coprosma nitida'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Coprosma petriei']], [], false).length,
      'Coprosma petriei'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Coprosma propinqua']], [], false)
        .length,
      'Coprosma propinqua'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Coprosma pumila']], [], false).length,
      'Coprosma pumila'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma repens']], [], false).length,
      'Coprosma repens'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma rhamnoides']], [], false)
        .length,
      'Coprosma rhamnoides'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma robusta']], [], false).length,
      'Coprosma robusta'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Coprosma rotundifolia']], [], false)
        .length,
      'Coprosma rotundifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Coprosma rugosa']], [], false).length,
      'Coprosma rugosa'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma serrulata']], [], false)
        .length,
      'Coprosma serrulata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Coprosma virescens']], [], false)
        .length,
      'Coprosma virescens'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Coptis brachypetala']], [], false)
        .length,
      'Coptis brachypetala'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Coptis chinensis']], [], false).length,
      'Coptis chinensis'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Coptis deltoidea']], [], false).length,
      'Coptis deltoidea'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Coptis japonica']], [], false).length,
      'Coptis japonica'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Coptis occidentalis']], [], false)
        .length,
      'Coptis occidentalis'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Coptis teeta']], [], false).length,
      'Coptis teeta'
    );
    assert.equal(
      6490,
      filterAndSort(crops, [nameToCrop['Coptis trifolia']], [], false).length,
      'Coptis trifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corallorhiza maculata']], [], false)
        .length,
      'Corallorhiza maculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corallorhiza odontorhiza']], [], false)
        .length,
      'Corallorhiza odontorhiza'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Corchorus capsularis']], [], false)
        .length,
      'Corchorus capsularis'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Corchorus olitorius']], [], false)
        .length,
      'Corchorus olitorius'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cordyline australis']], [], false)
        .length,
      'Cordyline australis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cordyline indivisa']], [], false)
        .length,
      'Cordyline indivisa'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Corema album']], [], false).length,
      'Corema album'
    );
    assert.equal(
      6959,
      filterAndSort(crops, [nameToCrop['Corema conradii']], [], false).length,
      'Corema conradii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Coreopsis auriculata']], [], false)
        .length,
      'Coreopsis auriculata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Coreopsis calliopsidea']], [], false)
        .length,
      'Coreopsis calliopsidea'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Coreopsis gigantea']], [], false)
        .length,
      'Coreopsis gigantea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Coreopsis tinctoria']], [], false)
        .length,
      'Coreopsis tinctoria'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Coreopsis tinctoria atkinsoniana']],
        [],
        false
      ).length,
      'Coreopsis tinctoria atkinsoniana'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Coriandrum sativum']], [], false)
        .length,
      'Coriandrum sativum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria microphylla']], [], false)
        .length,
      'Coriaria microphylla'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Coriaria myrtifolia']], [], false)
        .length,
      'Coriaria myrtifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria napalensis']], [], false)
        .length,
      'Coriaria napalensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria ruscifolia']], [], false)
        .length,
      'Coriaria ruscifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria sarmentosa']], [], false)
        .length,
      'Coriaria sarmentosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria sinica']], [], false).length,
      'Coriaria sinica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Coriaria terminalis']], [], false)
        .length,
      'Coriaria terminalis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cornus alternifolia']], [], false)
        .length,
      'Cornus alternifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus amomum']], [], false).length,
      'Cornus amomum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Cornus asperifolia drummondii']],
        [],
        false
      ).length,
      'Cornus asperifolia drummondii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus australis']], [], false).length,
      'Cornus australis'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Cornus canadensis']], [], false).length,
      'Cornus canadensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cornus capitata']], [], false).length,
      'Cornus capitata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cornus chinensis']], [], false).length,
      'Cornus chinensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus controversa']], [], false)
        .length,
      'Cornus controversa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus coreana']], [], false).length,
      'Cornus coreana'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Cornus florida']], [], false).length,
      'Cornus florida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus hongkongensis']], [], false)
        .length,
      'Cornus hongkongensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus iberica']], [], false).length,
      'Cornus iberica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus kousa']], [], false).length,
      'Cornus kousa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus kousa chinensis']], [], false)
        .length,
      'Cornus kousa chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus macrophylla']], [], false)
        .length,
      'Cornus macrophylla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus mas']], [], false).length,
      'Cornus mas'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus monbeigii']], [], false).length,
      'Cornus monbeigii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus nuttallii']], [], false).length,
      'Cornus nuttallii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus occidentalis']], [], false)
        .length,
      'Cornus occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus officinalis']], [], false)
        .length,
      'Cornus officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus poliophylla']], [], false)
        .length,
      'Cornus poliophylla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus quinquenervis']], [], false)
        .length,
      'Cornus quinquenervis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus rugosa']], [], false).length,
      'Cornus rugosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cornus sanguinea']], [], false).length,
      'Cornus sanguinea'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Cornus sericea']], [], false).length,
      'Cornus sericea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cornus sessilis']], [], false).length,
      'Cornus sessilis'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Cornus suecica']], [], false).length,
      'Cornus suecica'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Cornus x unalaschkensis']], [], false)
        .length,
      'Cornus x unalaschkensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Corokia x virgata']], [], false).length,
      'Corokia x virgata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Coronilla emerus']], [], false).length,
      'Coronilla emerus'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Coronilla scorpioides']], [], false)
        .length,
      'Coronilla scorpioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Coronilla varia']], [], false).length,
      'Coronilla varia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Coronopus didymus']], [], false).length,
      'Coronopus didymus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Coronopus squamatus']], [], false)
        .length,
      'Coronopus squamatus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Correa alba']], [], false).length,
      'Correa alba'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corrigiola littoralis']], [], false)
        .length,
      'Corrigiola littoralis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cortaderia selloana']], [], false)
        .length,
      'Cortaderia selloana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis ambigua']], [], false).length,
      'Corydalis ambigua'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis aurea']], [], false).length,
      'Corydalis aurea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis cava']], [], false).length,
      'Corydalis cava'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis edulis']], [], false).length,
      'Corydalis edulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis falconeri']], [], false)
        .length,
      'Corydalis falconeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis govaniana']], [], false)
        .length,
      'Corydalis govaniana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis incisa']], [], false).length,
      'Corydalis incisa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis intermedia']], [], false)
        .length,
      'Corydalis intermedia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis juncea']], [], false).length,
      'Corydalis juncea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis ochotensis']], [], false)
        .length,
      'Corydalis ochotensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis pallida']], [], false).length,
      'Corydalis pallida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis solida']], [], false).length,
      'Corydalis solida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis ternata']], [], false).length,
      'Corydalis ternata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Corydalis vaginans']], [], false)
        .length,
      'Corydalis vaginans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Corydalis yanhusuo']], [], false)
        .length,
      'Corydalis yanhusuo'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus americana']], [], false).length,
      'Corylus americana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus avellana']], [], false).length,
      'Corylus avellana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus avellana pontica']], [], false)
        .length,
      'Corylus avellana pontica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Corylus chinensis']], [], false).length,
      'Corylus chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus colurna']], [], false).length,
      'Corylus colurna'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus cornuta']], [], false).length,
      'Corylus cornuta'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Corylus cornuta californica']],
        [],
        false
      ).length,
      'Corylus cornuta californica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus fargesii']], [], false).length,
      'Corylus fargesii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Corylus ferox']], [], false).length,
      'Corylus ferox'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus heterophylla']], [], false)
        .length,
      'Corylus heterophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus jacquemontii']], [], false)
        .length,
      'Corylus jacquemontii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus maxima']], [], false).length,
      'Corylus maxima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus sieboldiana']], [], false)
        .length,
      'Corylus sieboldiana'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Corylus sieboldiana mandschurica']],
        [],
        false
      ).length,
      'Corylus sieboldiana mandschurica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus tibetica']], [], false).length,
      'Corylus tibetica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Corylus x colurnoides']], [], false)
        .length,
      'Corylus x colurnoides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Corylus x vilmorinii']], [], false)
        .length,
      'Corylus x vilmorinii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Corynocarpus laevigatus']], [], false)
        .length,
      'Corynocarpus laevigatus'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Cosmos bipinnatus']], [], false).length,
      'Cosmos bipinnatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotinus coggygria']], [], false).length,
      'Cotinus coggygria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cotinus obovatus']], [], false).length,
      'Cotinus obovatus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cotoneaster acuminatus']], [], false)
        .length,
      'Cotoneaster acuminatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster bacillaris']], [], false)
        .length,
      'Cotoneaster bacillaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster conspicuus']], [], false)
        .length,
      'Cotoneaster conspicuus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster coriaceus']], [], false)
        .length,
      'Cotoneaster coriaceus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cotoneaster divaricatus']], [], false)
        .length,
      'Cotoneaster divaricatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster franchetii']], [], false)
        .length,
      'Cotoneaster franchetii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster frigidus']], [], false)
        .length,
      'Cotoneaster frigidus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster glaucophyllus']], [], false)
        .length,
      'Cotoneaster glaucophyllus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cotoneaster microphyllus']], [], false)
        .length,
      'Cotoneaster microphyllus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cotoneaster racemiflorus']], [], false)
        .length,
      'Cotoneaster racemiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster serotinus']], [], false)
        .length,
      'Cotoneaster serotinus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cotoneaster simonsii']], [], false)
        .length,
      'Cotoneaster simonsii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster wardii']], [], false)
        .length,
      'Cotoneaster wardii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cotoneaster x watereri']], [], false)
        .length,
      'Cotoneaster x watereri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cotula coronopifolia']], [], false)
        .length,
      'Cotula coronopifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cousinia thomsonii']], [], false)
        .length,
      'Cousinia thomsonii'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cowania mexicana']], [], false).length,
      'Cowania mexicana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crambe abyssinica']], [], false).length,
      'Crambe abyssinica'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Crambe cordifolia']], [], false).length,
      'Crambe cordifolia'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Crambe kotschyana']], [], false).length,
      'Crambe kotschyana'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Crambe maritima']], [], false).length,
      'Crambe maritima'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Crambe orientalis']], [], false).length,
      'Crambe orientalis'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Crambe tatarica']], [], false).length,
      'Crambe tatarica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Crataegomespilus dardarii']], [], false)
        .length,
      'Crataegomespilus dardarii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus acclivis']], [], false)
        .length,
      'Crataegus acclivis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus aestivalis']], [], false)
        .length,
      'Crataegus aestivalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus altaica']], [], false).length,
      'Crataegus altaica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus anomala']], [], false).length,
      'Crataegus anomala'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus apiifolia']], [], false)
        .length,
      'Crataegus apiifolia'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus aprica']], [], false).length,
      'Crataegus aprica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus armena']], [], false).length,
      'Crataegus armena'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus arnoldiana']], [], false)
        .length,
      'Crataegus arnoldiana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus atrosanguinea']], [], false)
        .length,
      'Crataegus atrosanguinea'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus azarolus']], [], false)
        .length,
      'Crataegus azarolus'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus baroussana']], [], false)
        .length,
      'Crataegus baroussana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus caesa']], [], false).length,
      'Crataegus caesa'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Crataegus calpodendron']], [], false)
        .length,
      'Crataegus calpodendron'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus canadensis']], [], false)
        .length,
      'Crataegus canadensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus canbyi']], [], false).length,
      'Crataegus canbyi'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus champlainensis']], [], false)
        .length,
      'Crataegus champlainensis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus chlorosarca']], [], false)
        .length,
      'Crataegus chlorosarca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus chrysocarpa']], [], false)
        .length,
      'Crataegus chrysocarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus coccinoides']], [], false)
        .length,
      'Crataegus coccinoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus columbiana']], [], false)
        .length,
      'Crataegus columbiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus crus-galli']], [], false)
        .length,
      'Crataegus crus-galli'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus cuneata']], [], false).length,
      'Crataegus cuneata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus dilatata']], [], false)
        .length,
      'Crataegus dilatata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus dispessa']], [], false)
        .length,
      'Crataegus dispessa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus douglasii']], [], false)
        .length,
      'Crataegus douglasii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus durobrivensis']], [], false)
        .length,
      'Crataegus durobrivensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus ellwangeriana']], [], false)
        .length,
      'Crataegus ellwangeriana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus elongata']], [], false)
        .length,
      'Crataegus elongata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus festiva']], [], false).length,
      'Crataegus festiva'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus flabellata']], [], false)
        .length,
      'Crataegus flabellata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus flava']], [], false).length,
      'Crataegus flava'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus gemosa']], [], false).length,
      'Crataegus gemosa'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus heterophylla']], [], false)
        .length,
      'Crataegus heterophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus holmesiana']], [], false)
        .length,
      'Crataegus holmesiana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus hupehensis']], [], false)
        .length,
      'Crataegus hupehensis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus illinoiensis']], [], false)
        .length,
      'Crataegus illinoiensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus intricata']], [], false)
        .length,
      'Crataegus intricata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus jackii']], [], false).length,
      'Crataegus jackii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus jonesiae']], [], false)
        .length,
      'Crataegus jonesiae'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus laciniata']], [], false)
        .length,
      'Crataegus laciniata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus laevigata']], [], false)
        .length,
      'Crataegus laevigata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus lobulata']], [], false)
        .length,
      'Crataegus lobulata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus macrosperma']], [], false)
        .length,
      'Crataegus macrosperma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus maximowiczii']], [], false)
        .length,
      'Crataegus maximowiczii'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus meyeri']], [], false).length,
      'Crataegus meyeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus missouriensis']], [], false)
        .length,
      'Crataegus missouriensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus mollis']], [], false).length,
      'Crataegus mollis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus monogna']], [], false).length,
      'Crataegus monogna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus monogyna']], [], false)
        .length,
      'Crataegus monogyna'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus nigra']], [], false).length,
      'Crataegus nigra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus opaca']], [], false).length,
      'Crataegus opaca'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus parvifolia']], [], false)
        .length,
      'Crataegus parvifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus pedicellata']], [], false)
        .length,
      'Crataegus pedicellata'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Crataegus pedicellata gloriosa']],
        [],
        false
      ).length,
      'Crataegus pedicellata gloriosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus pensylvanica']], [], false)
        .length,
      'Crataegus pensylvanica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus pentagyna']], [], false)
        .length,
      'Crataegus pentagyna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus phaenopyrum']], [], false)
        .length,
      'Crataegus phaenopyrum'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus pinnatifida']], [], false)
        .length,
      'Crataegus pinnatifida'
    );
    assert.equal(
      7224,
      filterAndSort(
        crops,
        [nameToCrop['Crataegus pinnatifida major']],
        [],
        false
      ).length,
      'Crataegus pinnatifida major'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus pontica']], [], false).length,
      'Crataegus pontica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus pringlei']], [], false)
        .length,
      'Crataegus pringlei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus pruinosa']], [], false)
        .length,
      'Crataegus pruinosa'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus pubescens']], [], false)
        .length,
      'Crataegus pubescens'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Crataegus pubescens stipulacea']],
        [],
        false
      ).length,
      'Crataegus pubescens stipulacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus punctata']], [], false)
        .length,
      'Crataegus punctata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus reverchonii']], [], false)
        .length,
      'Crataegus reverchonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus rivularis']], [], false)
        .length,
      'Crataegus rivularis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus rotundifolia']], [], false)
        .length,
      'Crataegus rotundifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus sanguinea']], [], false)
        .length,
      'Crataegus sanguinea'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus schraderiana']], [], false)
        .length,
      'Crataegus schraderiana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus songorica']], [], false)
        .length,
      'Crataegus songorica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus  species']], [], false)
        .length,
      'Crataegus  species'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus stipulosa']], [], false)
        .length,
      'Crataegus stipulosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus submollis']], [], false)
        .length,
      'Crataegus submollis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus subvillosa']], [], false)
        .length,
      'Crataegus subvillosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Crataegus succulenta']], [], false)
        .length,
      'Crataegus succulenta'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Crataegus szovitskii']], [], false)
        .length,
      'Crataegus szovitskii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Crataegus tanacetifolia']], [], false)
        .length,
      'Crataegus tanacetifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus uniflora']], [], false)
        .length,
      'Crataegus uniflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crataegus x grignonensis']], [], false)
        .length,
      'Crataegus x grignonensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crepis bursifolia']], [], false).length,
      'Crepis bursifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crepis runcinata']], [], false).length,
      'Crepis runcinata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crepis sancta']], [], false).length,
      'Crepis sancta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crepis tectorum']], [], false).length,
      'Crepis tectorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crepis vesicaria']], [], false).length,
      'Crepis vesicaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Crinum bulbispermum']], [], false)
        .length,
      'Crinum bulbispermum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Crinum flaccidum']], [], false).length,
      'Crinum flaccidum'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Crithmum maritimum']], [], false)
        .length,
      'Crithmum maritimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crocosmia aurea']], [], false).length,
      'Crocosmia aurea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Crocus cancellatus']], [], false)
        .length,
      'Crocus cancellatus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Crocus kotschyanus']], [], false)
        .length,
      'Crocus kotschyanus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Crocus nudiflorus']], [], false).length,
      'Crocus nudiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Crocus sativus']], [], false).length,
      'Crocus sativus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crocus serotinus']], [], false).length,
      'Crocus serotinus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Crotalaria sessiliflora']], [], false)
        .length,
      'Crotalaria sessiliflora'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Cruciata laevipes']], [], false).length,
      'Cruciata laevipes'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cryptomeria japonica']], [], false)
        .length,
      'Cryptomeria japonica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cryptotaenia canadensis']], [], false)
        .length,
      'Cryptotaenia canadensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cryptotaenia japonica']], [], false)
        .length,
      'Cryptotaenia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cucubalus baccifer']], [], false)
        .length,
      'Cucubalus baccifer'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis anguria']], [], false).length,
      'Cucumis anguria'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo']], [], false).length,
      'Cucumis melo'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo agrestis']], [], false)
        .length,
      'Cucumis melo agrestis'
    );
    assert.equal(
      6644,
      filterAndSort(
        crops,
        [nameToCrop['Cucumis melo cantalupensis']],
        [],
        false
      ).length,
      'Cucumis melo cantalupensis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo chito']], [], false)
        .length,
      'Cucumis melo chito'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo conomon']], [], false)
        .length,
      'Cucumis melo conomon'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo flexuosus']], [], false)
        .length,
      'Cucumis melo flexuosus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo inodorus']], [], false)
        .length,
      'Cucumis melo inodorus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis melo momordica']], [], false)
        .length,
      'Cucumis melo momordica'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucumis metuliferus']], [], false)
        .length,
      'Cucumis metuliferus'
    );
    assert.equal(
      6642,
      filterAndSort(crops, [nameToCrop['Cucumis sativus']], [], false).length,
      'Cucumis sativus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cucurbita argyrosperma']], [], false)
        .length,
      'Cucurbita argyrosperma'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Cucurbita ficifolia']], [], false)
        .length,
      'Cucurbita ficifolia'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Cucurbita foetidissima']], [], false)
        .length,
      'Cucurbita foetidissima'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Cucurbita maxima']], [], false).length,
      'Cucurbita maxima'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Cucurbita moschata']], [], false)
        .length,
      'Cucurbita moschata'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cucurbita pepo']], [], false).length,
      'Cucurbita pepo'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cudrania tricuspidata']], [], false)
        .length,
      'Cudrania tricuspidata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Cuminum cyminum']], [], false).length,
      'Cuminum cyminum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cunila origanoides']], [], false)
        .length,
      'Cunila origanoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cunninghamia lanceolata']], [], false)
        .length,
      'Cunninghamia lanceolata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuphea viscosissima']], [], false)
        .length,
      'Cuphea viscosissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cupressocyparis leylandii']], [], false)
        .length,
      'Cupressocyparis leylandii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cupressus arizonica']], [], false)
        .length,
      'Cupressus arizonica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Cupressus funebris']], [], false)
        .length,
      'Cupressus funebris'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Cupressus macrocarpa']], [], false)
        .length,
      'Cupressus macrocarpa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Cupressus sempervirens']], [], false)
        .length,
      'Cupressus sempervirens'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Cupressus torulosa']], [], false)
        .length,
      'Cupressus torulosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta chinensis']], [], false).length,
      'Cuscuta chinensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cuscuta epythymum']], [], false).length,
      'Cuscuta epythymum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta europaea']], [], false).length,
      'Cuscuta europaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta japonica']], [], false).length,
      'Cuscuta japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta megalocarpa']], [], false)
        .length,
      'Cuscuta megalocarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta reflexa']], [], false).length,
      'Cuscuta reflexa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cuscuta umbellata']], [], false).length,
      'Cuscuta umbellata'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Cyananthus lobatus']], [], false)
        .length,
      'Cyananthus lobatus'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Cyanella amboensis']], [], false)
        .length,
      'Cyanella amboensis'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Cyanella capensis']], [], false).length,
      'Cyanella capensis'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Cyanella hyacinthoides']], [], false)
        .length,
      'Cyanella hyacinthoides'
    );
    assert.equal(
      6894,
      filterAndSort(crops, [nameToCrop['Cyanella lutea']], [], false).length,
      'Cyanella lutea'
    );
    assert.equal(
      6894,
      filterAndSort(crops, [nameToCrop['Cyanella orchidiformis']], [], false)
        .length,
      'Cyanella orchidiformis'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Cyathea dealbata']], [], false).length,
      'Cyathea dealbata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Cyathea medullaris']], [], false)
        .length,
      'Cyathea medullaris'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Cyathodes colensoi']], [], false)
        .length,
      'Cyathodes colensoi'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cyathodes fasciculata']], [], false)
        .length,
      'Cyathodes fasciculata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Cyathodes fraseri']], [], false).length,
      'Cyathodes fraseri'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cyathodes glauca']], [], false).length,
      'Cyathodes glauca'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cyathodes juniperina']], [], false)
        .length,
      'Cyathodes juniperina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyathodes oxycedrus']], [], false)
        .length,
      'Cyathodes oxycedrus'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cyathodes parviflora']], [], false)
        .length,
      'Cyathodes parviflora'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Cyathodes straminea']], [], false)
        .length,
      'Cyathodes straminea'
    );
    assert.equal(
      6560,
      filterAndSort(crops, [nameToCrop['Cycas circinalis']], [], false).length,
      'Cycas circinalis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cycas revoluta']], [], false).length,
      'Cycas revoluta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cyclamen hederifolium']], [], false)
        .length,
      'Cyclamen hederifolium'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cyclanthera brachystachya']], [], false)
        .length,
      'Cyclanthera brachystachya'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Cyclanthera pedata']], [], false)
        .length,
      'Cyclanthera pedata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyclea hypoglauca']], [], false).length,
      'Cyclea hypoglauca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cycloloma atriplicifolium']], [], false)
        .length,
      'Cycloloma atriplicifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyclospermum leptophyllum']], [], false)
        .length,
      'Cyclospermum leptophyllum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Cydonia oblonga']], [], false).length,
      'Cydonia oblonga'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Cymbalaria muralis']], [], false)
        .length,
      'Cymbalaria muralis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cymbonotus lawsonianus']], [], false)
        .length,
      'Cymbonotus lawsonianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus acaulis']], [], false)
        .length,
      'Cymopterus acaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus bulbosus']], [], false)
        .length,
      'Cymopterus bulbosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus fendleri']], [], false)
        .length,
      'Cymopterus fendleri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus globosus']], [], false)
        .length,
      'Cymopterus globosus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cymopterus longipes']], [], false)
        .length,
      'Cymopterus longipes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus montanus']], [], false)
        .length,
      'Cymopterus montanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cymopterus newberryi']], [], false)
        .length,
      'Cymopterus newberryi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cymopterus purpurescens']], [], false)
        .length,
      'Cymopterus purpurescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cymopterus purpureus']], [], false)
        .length,
      'Cymopterus purpureus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum acutum']], [], false).length,
      'Cynanchum acutum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum amplexicaule']], [], false)
        .length,
      'Cynanchum amplexicaule'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum arnottianum']], [], false)
        .length,
      'Cynanchum arnottianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum ascyrifolium']], [], false)
        .length,
      'Cynanchum ascyrifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum atratum']], [], false).length,
      'Cynanchum atratum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum caudatum']], [], false)
        .length,
      'Cynanchum caudatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum glaucescens']], [], false)
        .length,
      'Cynanchum glaucescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum japonicum']], [], false)
        .length,
      'Cynanchum japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum paniculatum']], [], false)
        .length,
      'Cynanchum paniculatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum sibiricum']], [], false)
        .length,
      'Cynanchum sibiricum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum stauntonii']], [], false)
        .length,
      'Cynanchum stauntonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cynanchum wilfordii']], [], false)
        .length,
      'Cynanchum wilfordii'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Cynara cardunculus']], [], false)
        .length,
      'Cynara cardunculus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cynara scolymus']], [], false).length,
      'Cynara scolymus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cynodon dactylon']], [], false).length,
      'Cynodon dactylon'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Cynoglossum grande']], [], false)
        .length,
      'Cynoglossum grande'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Cynoglossum officinale']], [], false)
        .length,
      'Cynoglossum officinale'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cyperus aristatus']], [], false).length,
      'Cyperus aristatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus distans']], [], false).length,
      'Cyperus distans'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Cyperus esculentus']], [], false)
        .length,
      'Cyperus esculentus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus fendlerianus']], [], false)
        .length,
      'Cyperus fendlerianus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Cyperus longus']], [], false).length,
      'Cyperus longus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus rotundus']], [], false).length,
      'Cyperus rotundus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus schweinitzii']], [], false)
        .length,
      'Cyperus schweinitzii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus setigerus']], [], false).length,
      'Cyperus setigerus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus tegetiformis']], [], false)
        .length,
      'Cyperus tegetiformis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cyperus ustulatus']], [], false).length,
      'Cyperus ustulatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cyphomandra betacea']], [], false)
        .length,
      'Cyphomandra betacea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cyphomandra casana']], [], false)
        .length,
      'Cyphomandra casana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cyphomandra fragrans']], [], false)
        .length,
      'Cyphomandra fragrans'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Cyphomandra hartwegii']], [], false)
        .length,
      'Cyphomandra hartwegii'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Cypripedium acaule']], [], false)
        .length,
      'Cypripedium acaule'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Cypripedium calceolus parviflorum']],
        [],
        false
      ).length,
      'Cypripedium calceolus parviflorum'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Cypripedium calceolus pubescens']],
        [],
        false
      ).length,
      'Cypripedium calceolus pubescens'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Cyrilla racemiflora']], [], false)
        .length,
      'Cyrilla racemiflora'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Cyrtanthus breviflorus']], [], false)
        .length,
      'Cyrtanthus breviflorus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Cyrtomium falcatum']], [], false)
        .length,
      'Cyrtomium falcatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cyrtomium fortunei']], [], false)
        .length,
      'Cyrtomium fortunei'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cystopteris bulbifera']], [], false)
        .length,
      'Cystopteris bulbifera'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Cystopteris fragilis']], [], false)
        .length,
      'Cystopteris fragilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Cystopteris montana']], [], false)
        .length,
      'Cystopteris montana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Cytinus hypocistus']], [], false)
        .length,
      'Cytinus hypocistus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Cytisus scoparius']], [], false).length,
      'Cytisus scoparius'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Dacrycarpus dacrydioides']], [], false)
        .length,
      'Dacrycarpus dacrydioides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Dacrydium cupressinum']], [], false)
        .length,
      'Dacrydium cupressinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dactylis glomerata']], [], false)
        .length,
      'Dactylis glomerata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dactyloctenium radulans']], [], false)
        .length,
      'Dactyloctenium radulans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dactylorhiza incarnata']], [], false)
        .length,
      'Dactylorhiza incarnata'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Dactylorhiza maculata']], [], false)
        .length,
      'Dactylorhiza maculata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Dahlia pinnata']], [], false).length,
      'Dahlia pinnata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Dahlia rosea']], [], false).length,
      'Dahlia rosea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dalbergia hupeana']], [], false).length,
      'Dalbergia hupeana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Dalea candida']], [], false).length,
      'Dalea candida'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Dalea candida oligophylla']], [], false)
        .length,
      'Dalea candida oligophylla'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Dalea gattingeri']], [], false).length,
      'Dalea gattingeri'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Dalea purpurea']], [], false).length,
      'Dalea purpurea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Damasonium alisma']], [], false).length,
      'Damasonium alisma'
    );
    assert.equal(
      7118,
      filterAndSort(crops, [nameToCrop['Daphne bholua']], [], false).length,
      'Daphne bholua'
    );
    assert.equal(
      7131,
      filterAndSort(crops, [nameToCrop['Daphne genkwa']], [], false).length,
      'Daphne genkwa'
    );
    assert.equal(
      7118,
      filterAndSort(crops, [nameToCrop['Daphne gnidium']], [], false).length,
      'Daphne gnidium'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Daphne involucrata']], [], false)
        .length,
      'Daphne involucrata'
    );
    assert.equal(
      7129,
      filterAndSort(crops, [nameToCrop['Daphne laureola']], [], false).length,
      'Daphne laureola'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Daphne mezereum']], [], false).length,
      'Daphne mezereum'
    );
    assert.equal(
      7129,
      filterAndSort(crops, [nameToCrop['Daphne odora']], [], false).length,
      'Daphne odora'
    );
    assert.equal(
      7111,
      filterAndSort(crops, [nameToCrop['Daphne oleoides']], [], false).length,
      'Daphne oleoides'
    );
    assert.equal(
      7118,
      filterAndSort(crops, [nameToCrop['Daphne papyracea']], [], false).length,
      'Daphne papyracea'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Daphne pseudomezereum']], [], false)
        .length,
      'Daphne pseudomezereum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Daphniphyllum himalense']], [], false)
        .length,
      'Daphniphyllum himalense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Daphniphyllum macropodum']], [], false)
        .length,
      'Daphniphyllum macropodum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Darmera peltata']], [], false).length,
      'Darmera peltata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dasylirion simplex']], [], false)
        .length,
      'Dasylirion simplex'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Dasylirion texanum']], [], false)
        .length,
      'Dasylirion texanum'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Dasylirion wheeleri']], [], false)
        .length,
      'Dasylirion wheeleri'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Datisca cannabina']], [], false).length,
      'Datisca cannabina'
    );
    assert.equal(
      6887,
      filterAndSort(crops, [nameToCrop['Datura inoxia']], [], false).length,
      'Datura inoxia'
    );
    assert.equal(
      6887,
      filterAndSort(crops, [nameToCrop['Datura metel']], [], false).length,
      'Datura metel'
    );
    assert.equal(
      7038,
      filterAndSort(crops, [nameToCrop['Datura quercifolia']], [], false)
        .length,
      'Datura quercifolia'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Datura stramonium']], [], false).length,
      'Datura stramonium'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Daucus carota']], [], false).length,
      'Daucus carota'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Daucus carota']], [], false).length,
      'Daucus carota'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Daucus pusillus']], [], false).length,
      'Daucus pusillus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Daviesia horrida']], [], false).length,
      'Daviesia horrida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Debregeasia edulis']], [], false)
        .length,
      'Debregeasia edulis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Debregeasia hypoleuca']], [], false)
        .length,
      'Debregeasia hypoleuca'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Debregeasia longifolia']], [], false)
        .length,
      'Debregeasia longifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Debregeasia wallichiana']], [], false)
        .length,
      'Debregeasia wallichiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Decaisnea fargesii']], [], false)
        .length,
      'Decaisnea fargesii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Decaisnea insignis']], [], false)
        .length,
      'Decaisnea insignis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Decemium appendiculatum']], [], false)
        .length,
      'Decemium appendiculatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Deinanthe bifida']], [], false).length,
      'Deinanthe bifida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Delphinium brachycentrum']], [], false)
        .length,
      'Delphinium brachycentrum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Delphinium brunonianum']], [], false)
        .length,
      'Delphinium brunonianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Delphinium caeruleum']], [], false)
        .length,
      'Delphinium caeruleum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Delphinium cashmerianum']], [], false)
        .length,
      'Delphinium cashmerianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Delphinium denudatum']], [], false)
        .length,
      'Delphinium denudatum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Delphinium elatum']], [], false).length,
      'Delphinium elatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Delphinium glaucum']], [], false)
        .length,
      'Delphinium glaucum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Delphinium menziesii']], [], false)
        .length,
      'Delphinium menziesii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Delphinium nudicaule']], [], false)
        .length,
      'Delphinium nudicaule'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Delphinium nuttallianum']], [], false)
        .length,
      'Delphinium nuttallianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Delphinium semibarbatum']], [], false)
        .length,
      'Delphinium semibarbatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Delphinium staphisagria']], [], false)
        .length,
      'Delphinium staphisagria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dendranthema indicum']], [], false)
        .length,
      'Dendranthema indicum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Dendranthema lavandulifolium']],
        [],
        false
      ).length,
      'Dendranthema lavandulifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dendranthema nubigenum']], [], false)
        .length,
      'Dendranthema nubigenum'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Dendranthema x grandiflorum']],
        [],
        false
      ).length,
      'Dendranthema x grandiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dendrobium nobile']], [], false).length,
      'Dendrobium nobile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dendrostellera arenaria']], [], false)
        .length,
      'Dendrostellera arenaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dentaria diphylla']], [], false).length,
      'Dentaria diphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dentaria laciniata']], [], false)
        .length,
      'Dentaria laciniata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dentaria maxima']], [], false).length,
      'Dentaria maxima'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Deschampsia caespitosa']], [], false)
        .length,
      'Deschampsia caespitosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Descurainia antarctica']], [], false)
        .length,
      'Descurainia antarctica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Descurainia incana']], [], false)
        .length,
      'Descurainia incana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Descurainia pinnata']], [], false)
        .length,
      'Descurainia pinnata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Descurainia sophia']], [], false)
        .length,
      'Descurainia sophia'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Desfontainia spinosa']], [], false)
        .length,
      'Desfontainia spinosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Desmanthus illinoensis']], [], false)
        .length,
      'Desmanthus illinoensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Desmodium caudatum']], [], false)
        .length,
      'Desmodium caudatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Desmodium elegans']], [], false).length,
      'Desmodium elegans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Desmodium styracifolium']], [], false)
        .length,
      'Desmodium styracifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Desmoschoenus spiralis']], [], false)
        .length,
      'Desmoschoenus spiralis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Deutzia scabra']], [], false).length,
      'Deutzia scabra'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Dianella caerulea']], [], false).length,
      'Dianella caerulea'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Dianella congesta']], [], false).length,
      'Dianella congesta'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Dianella laevis']], [], false).length,
      'Dianella laevis'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Dianella revoluta']], [], false).length,
      'Dianella revoluta'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Dianella tasmanica']], [], false)
        .length,
      'Dianella tasmanica'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Dianthus anatolicus']], [], false)
        .length,
      'Dianthus anatolicus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Dianthus barbatus']], [], false).length,
      'Dianthus barbatus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Dianthus caryophyllus']], [], false)
        .length,
      'Dianthus caryophyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dianthus chinensis']], [], false)
        .length,
      'Dianthus chinensis'
    );
    assert.equal(
      6957,
      filterAndSort(
        crops,
        [nameToCrop['Dianthus gratianopolitanus']],
        [],
        false
      ).length,
      'Dianthus gratianopolitanus'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Dianthus plumarius']], [], false)
        .length,
      'Dianthus plumarius'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Dianthus superbus']], [], false).length,
      'Dianthus superbus'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Dicentra canadensis']], [], false)
        .length,
      'Dicentra canadensis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Dicentra cucullaria']], [], false)
        .length,
      'Dicentra cucullaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dicentra spectabilis']], [], false)
        .length,
      'Dicentra spectabilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dichelachne crinita']], [], false)
        .length,
      'Dichelachne crinita'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Dichelostemma pulchellum']], [], false)
        .length,
      'Dichelostemma pulchellum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Dichelostemma volubile']], [], false)
        .length,
      'Dichelostemma volubile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dichondra micrantha']], [], false)
        .length,
      'Dichondra micrantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dichopogon fimbriatus']], [], false)
        .length,
      'Dichopogon fimbriatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Dichopogon strictus']], [], false)
        .length,
      'Dichopogon strictus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Dichroa febrifuga']], [], false).length,
      'Dichroa febrifuga'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Dicksonia antarctica']], [], false)
        .length,
      'Dicksonia antarctica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dicliptera japonica']], [], false)
        .length,
      'Dicliptera japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dicoria brandegei']], [], false).length,
      'Dicoria brandegei'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Dictamnus albus']], [], false).length,
      'Dictamnus albus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Diervilla lonicera']], [], false)
        .length,
      'Diervilla lonicera'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Digitalis ferruginea']], [], false)
        .length,
      'Digitalis ferruginea'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Digitalis grandiflora']], [], false)
        .length,
      'Digitalis grandiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Digitalis laevigata']], [], false)
        .length,
      'Digitalis laevigata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Digitalis lanata']], [], false).length,
      'Digitalis lanata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Digitalis lutea']], [], false).length,
      'Digitalis lutea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Digitalis purpurea']], [], false)
        .length,
      'Digitalis purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Digitaria ciliaris']], [], false)
        .length,
      'Digitaria ciliaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Digitaria sanguinalis']], [], false)
        .length,
      'Digitaria sanguinalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Dioscorea batatas']], [], false).length,
      'Dioscorea batatas'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dioscorea deltoidea']], [], false)
        .length,
      'Dioscorea deltoidea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dioscorea japonica']], [], false)
        .length,
      'Dioscorea japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dioscorea kamoonensis']], [], false)
        .length,
      'Dioscorea kamoonensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dioscorea tokoro']], [], false).length,
      'Dioscorea tokoro'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dioscorea villosa']], [], false).length,
      'Dioscorea villosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Diospyros kaki']], [], false).length,
      'Diospyros kaki'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Diospyros lotus']], [], false).length,
      'Diospyros lotus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diospyros texanum']], [], false).length,
      'Diospyros texanum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Diospyros virginiana']], [], false)
        .length,
      'Diospyros virginiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dipcadi erythaeum']], [], false).length,
      'Dipcadi erythaeum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diphylleia cymosa']], [], false).length,
      'Diphylleia cymosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diphylleia grayi']], [], false).length,
      'Diphylleia grayi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diphylleia sinensis']], [], false)
        .length,
      'Diphylleia sinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diplotaxis erucoides']], [], false)
        .length,
      'Diplotaxis erucoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Diplotaxis muralis']], [], false)
        .length,
      'Diplotaxis muralis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diplotaxis tenuifolia']], [], false)
        .length,
      'Diplotaxis tenuifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Diploterigium glaucum']], [], false)
        .length,
      'Diploterigium glaucum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dipploglottis australis']], [], false)
        .length,
      'Dipploglottis australis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Dipsacus fullonum']], [], false).length,
      'Dipsacus fullonum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dipsacus japonicus']], [], false)
        .length,
      'Dipsacus japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dipsacus mitis']], [], false).length,
      'Dipsacus mitis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Dipsacus sativus']], [], false).length,
      'Dipsacus sativus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dirca occidentalis']], [], false)
        .length,
      'Dirca occidentalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Dirca palustris']], [], false).length,
      'Dirca palustris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Disphyma australe']], [], false).length,
      'Disphyma australe'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Disporum cantoniense']], [], false)
        .length,
      'Disporum cantoniense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Disporum sessile']], [], false).length,
      'Disporum sessile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Disporum smilacinum']], [], false)
        .length,
      'Disporum smilacinum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Disporum trachycarpum']], [], false)
        .length,
      'Disporum trachycarpum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Disporum viridescens']], [], false)
        .length,
      'Disporum viridescens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Distylium racemosum']], [], false)
        .length,
      'Distylium racemosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dittrichia viscosa']], [], false)
        .length,
      'Dittrichia viscosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Docynia delavayi']], [], false).length,
      'Docynia delavayi'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Docynia indica']], [], false).length,
      'Docynia indica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Dodecatheon hendersonii']], [], false)
        .length,
      'Dodecatheon hendersonii'
    );
    assert.equal(
      6893,
      filterAndSort(crops, [nameToCrop['Dodonaea viscosa']], [], false).length,
      'Dodonaea viscosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dorema ammoniacum']], [], false).length,
      'Dorema ammoniacum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Doronicum falconeri']], [], false)
        .length,
      'Doronicum falconeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Doronicum pardalianches']], [], false)
        .length,
      'Doronicum pardalianches'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Doronicum roylei']], [], false).length,
      'Doronicum roylei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Draba muralis']], [], false).length,
      'Draba muralis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Draba nemerosa']], [], false).length,
      'Draba nemerosa'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Dracocephalum heterophyllum']],
        [],
        false
      ).length,
      'Dracocephalum heterophyllum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dracocephalum moldavica']], [], false)
        .length,
      'Dracocephalum moldavica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dracocephalum parviflorum']], [], false)
        .length,
      'Dracocephalum parviflorum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Drepanostachyum falcatum']], [], false)
        .length,
      'Drepanostachyum falcatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Drimys insipida']], [], false).length,
      'Drimys insipida'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Drimys lanceolata']], [], false).length,
      'Drimys lanceolata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Drimys winteri']], [], false).length,
      'Drimys winteri'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Drosera peltata']], [], false).length,
      'Drosera peltata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Drosera rotundifolia']], [], false)
        .length,
      'Drosera rotundifolia'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Dryas octopetala']], [], false).length,
      'Dryas octopetala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Drymaria cordata']], [], false).length,
      'Drymaria cordata'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris barbigera']], [], false)
        .length,
      'Dryopteris barbigera'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris blandfordii']], [], false)
        .length,
      'Dryopteris blandfordii'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Dryopteris carthusiana']], [], false)
        .length,
      'Dryopteris carthusiana'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris crassirhizoma']], [], false)
        .length,
      'Dryopteris crassirhizoma'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Dryopteris cristata']], [], false)
        .length,
      'Dryopteris cristata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Dryopteris dilatata']], [], false)
        .length,
      'Dryopteris dilatata'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Dryopteris expansa']], [], false)
        .length,
      'Dryopteris expansa'
    );
    assert.equal(
      6640,
      filterAndSort(crops, [nameToCrop['Dryopteris filix-mas']], [], false)
        .length,
      'Dryopteris filix-mas'
    );
    assert.equal(
      7117,
      filterAndSort(crops, [nameToCrop['Dryopteris fragrans']], [], false)
        .length,
      'Dryopteris fragrans'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Dryopteris marginalis']], [], false)
        .length,
      'Dryopteris marginalis'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris odontoloma']], [], false)
        .length,
      'Dryopteris odontoloma'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris oreades']], [], false)
        .length,
      'Dryopteris oreades'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Dryopteris schimperiana']], [], false)
        .length,
      'Dryopteris schimperiana'
    );
    assert.equal(
      7199,
      filterAndSort(crops, [nameToCrop['Dryopteris sieboldii']], [], false)
        .length,
      'Dryopteris sieboldii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Duchesnea chrysantha']], [], false)
        .length,
      'Duchesnea chrysantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Duchesnea filipendula']], [], false)
        .length,
      'Duchesnea filipendula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Duchesnea indica']], [], false).length,
      'Duchesnea indica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Dudleya edulis']], [], false).length,
      'Dudleya edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dudleya lanceolata']], [], false)
        .length,
      'Dudleya lanceolata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Dudleya pulverulenta']], [], false)
        .length,
      'Dudleya pulverulenta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dysosma auranticocaulis']], [], false)
        .length,
      'Dysosma auranticocaulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Dysoxylum spectabile']], [], false)
        .length,
      'Dysoxylum spectabile'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ecballium elaterium']], [], false)
        .length,
      'Ecballium elaterium'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Echinacea angustifolia']], [], false)
        .length,
      'Echinacea angustifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Echinacea pallida']], [], false).length,
      'Echinacea pallida'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Echinacea purpurea']], [], false)
        .length,
      'Echinacea purpurea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Echinochloa colona']], [], false)
        .length,
      'Echinochloa colona'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Echinochloa crus-galli']], [], false)
        .length,
      'Echinochloa crus-galli'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Echinochloa frumentacea']], [], false)
        .length,
      'Echinochloa frumentacea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Echinocystis lobata']], [], false)
        .length,
      'Echinocystis lobata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Echinophora spinosa']], [], false)
        .length,
      'Echinophora spinosa'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Echinops latifolius']], [], false)
        .length,
      'Echinops latifolius'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Echinops ritro']], [], false).length,
      'Echinops ritro'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Echinops setifer']], [], false).length,
      'Echinops setifer'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Echinops spinosissimus']], [], false)
        .length,
      'Echinops spinosissimus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Echium vulgare']], [], false).length,
      'Echium vulgare'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Eclipta prostrata']], [], false).length,
      'Eclipta prostrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Edgeworthia chrysantha']], [], false)
        .length,
      'Edgeworthia chrysantha'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Edgeworthia gardneri']], [], false)
        .length,
      'Edgeworthia gardneri'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Edgeworthia papyrifera']], [], false)
        .length,
      'Edgeworthia papyrifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ehretia acuminata']], [], false).length,
      'Ehretia acuminata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ehretia anacua']], [], false).length,
      'Ehretia anacua'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ehretia dicksonii']], [], false).length,
      'Ehretia dicksonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ehretia ovalifolia']], [], false)
        .length,
      'Ehretia ovalifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eichhornia crassipes']], [], false)
        .length,
      'Eichhornia crassipes'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Elaeagnus angustifolia']], [], false)
        .length,
      'Elaeagnus angustifolia'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Elaeagnus commutata']], [], false)
        .length,
      'Elaeagnus commutata'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Elaeagnus cordifolia']], [], false)
        .length,
      'Elaeagnus cordifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus formosana']], [], false)
        .length,
      'Elaeagnus formosana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus fragrans']], [], false)
        .length,
      'Elaeagnus fragrans'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Elaeagnus glabra']], [], false).length,
      'Elaeagnus glabra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus gonyanthes']], [], false)
        .length,
      'Elaeagnus gonyanthes'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Elaeagnus latifolia']], [], false)
        .length,
      'Elaeagnus latifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus macrophylla']], [], false)
        .length,
      'Elaeagnus macrophylla'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus maritima']], [], false)
        .length,
      'Elaeagnus maritima'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus montana']], [], false).length,
      'Elaeagnus montana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus multiflora']], [], false)
        .length,
      'Elaeagnus multiflora'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Elaeagnus multiflora ovata']],
        [],
        false
      ).length,
      'Elaeagnus multiflora ovata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Elaeagnus oldhamii']], [], false)
        .length,
      'Elaeagnus oldhamii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Elaeagnus orientalis']], [], false)
        .length,
      'Elaeagnus orientalis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Elaeagnus parvifolia']], [], false)
        .length,
      'Elaeagnus parvifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus pungens']], [], false).length,
      'Elaeagnus pungens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus pyriformis']], [], false)
        .length,
      'Elaeagnus pyriformis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus thunbergii']], [], false)
        .length,
      'Elaeagnus thunbergii'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Elaeagnus umbellata']], [], false)
        .length,
      'Elaeagnus umbellata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus x ebbingei']], [], false)
        .length,
      'Elaeagnus x ebbingei'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus x reflexa']], [], false)
        .length,
      'Elaeagnus x reflexa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Elaeagnus yoshinoi']], [], false)
        .length,
      'Elaeagnus yoshinoi'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Elaeocarpus cyaneus']], [], false)
        .length,
      'Elaeocarpus cyaneus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Elaeocarpus dentatus']], [], false)
        .length,
      'Elaeocarpus dentatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Elaeocarpus hookerianus']], [], false)
        .length,
      'Elaeocarpus hookerianus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Elaeocarpus lanceaefolius']], [], false)
        .length,
      'Elaeocarpus lanceaefolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Elatostema densiflorum']], [], false)
        .length,
      'Elatostema densiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Elatostema dissectum']], [], false)
        .length,
      'Elatostema dissectum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Elatostema laetevirens']], [], false)
        .length,
      'Elatostema laetevirens'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Eleocharis dulcis']], [], false).length,
      'Eleocharis dulcis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Eleocharis palustris']], [], false)
        .length,
      'Eleocharis palustris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eleusine coracana']], [], false).length,
      'Eleusine coracana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eleusine indica']], [], false).length,
      'Eleusine indica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eleusine tocussa']], [], false).length,
      'Eleusine tocussa'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus chiisanensis']],
        [],
        false
      ).length,
      'Eleutherococcus chiisanensis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus divaricatus']],
        [],
        false
      ).length,
      'Eleutherococcus divaricatus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus gracylistylus']],
        [],
        false
      ).length,
      'Eleutherococcus gracylistylus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eleutherococcus innovans']], [], false)
        .length,
      'Eleutherococcus innovans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eleutherococcus japonicus']], [], false)
        .length,
      'Eleutherococcus japonicus'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus senticosus']],
        [],
        false
      ).length,
      'Eleutherococcus senticosus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus seoulensis']],
        [],
        false
      ).length,
      'Eleutherococcus seoulensis'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus sessiliflorus']],
        [],
        false
      ).length,
      'Eleutherococcus sessiliflorus'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus sieboldianus']],
        [],
        false
      ).length,
      'Eleutherococcus sieboldianus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Eleutherococcus spinosus']], [], false)
        .length,
      'Eleutherococcus spinosus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Eleutherococcus trifoliatus']],
        [],
        false
      ).length,
      'Eleutherococcus trifoliatus'
    );
    assert.equal(
      185,
      filterAndSort(crops, [nameToCrop['Elodea canadensis']], [], false).length,
      'Elodea canadensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Elsholtzia ciliata']], [], false)
        .length,
      'Elsholtzia ciliata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Elsholtzia fruticosa']], [], false)
        .length,
      'Elsholtzia fruticosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Elsholtzia splendens']], [], false)
        .length,
      'Elsholtzia splendens'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Elymus canadensis']], [], false).length,
      'Elymus canadensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Elymus glauca']], [], false).length,
      'Elymus glauca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Elytrigia juncea']], [], false).length,
      'Elytrigia juncea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Elytrigia repens']], [], false).length,
      'Elytrigia repens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Emex australis']], [], false).length,
      'Emex australis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Emilia coccinea']], [], false).length,
      'Emilia coccinea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Emilia sonchifolia']], [], false)
        .length,
      'Emilia sonchifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eminium spiculatum']], [], false)
        .length,
      'Eminium spiculatum'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Empetrum atropurpureum']], [], false)
        .length,
      'Empetrum atropurpureum'
    );
    assert.equal(
      6962,
      filterAndSort(crops, [nameToCrop['Empetrum eamesii']], [], false).length,
      'Empetrum eamesii'
    );
    assert.equal(
      7113,
      filterAndSort(
        crops,
        [nameToCrop['Empetrum eamesii hermaphroditum']],
        [],
        false
      ).length,
      'Empetrum eamesii hermaphroditum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Empetrum nigrum']], [], false).length,
      'Empetrum nigrum'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Empetrum rubrum']], [], false).length,
      'Empetrum rubrum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Encelia farinosa']], [], false).length,
      'Encelia farinosa'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Enchylaena tomentosa']], [], false)
        .length,
      'Enchylaena tomentosa'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Ensete ventricosum']], [], false)
        .length,
      'Ensete ventricosum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Entelea arborescens']], [], false)
        .length,
      'Entelea arborescens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra altissima']], [], false).length,
      'Ephedra altissima'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra americana andina']], [], false)
        .length,
      'Ephedra americana andina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra distachya']], [], false).length,
      'Ephedra distachya'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra equisetina']], [], false)
        .length,
      'Ephedra equisetina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra foliata']], [], false).length,
      'Ephedra foliata'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ephedra fragilis']], [], false).length,
      'Ephedra fragilis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra gerardiana']], [], false)
        .length,
      'Ephedra gerardiana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra intermedia']], [], false)
        .length,
      'Ephedra intermedia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra major']], [], false).length,
      'Ephedra major'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra nevadensis']], [], false)
        .length,
      'Ephedra nevadensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra pachyclada']], [], false)
        .length,
      'Ephedra pachyclada'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra sinica']], [], false).length,
      'Ephedra sinica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra torreyana']], [], false).length,
      'Ephedra torreyana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra triandra']], [], false).length,
      'Ephedra triandra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ephedra trifurca']], [], false).length,
      'Ephedra trifurca'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Ephedra viridis']], [], false).length,
      'Ephedra viridis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Epifagus virginiana']], [], false)
        .length,
      'Epifagus virginiana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Epigaea asiatica']], [], false).length,
      'Epigaea asiatica'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Epigaea repens']], [], false).length,
      'Epigaea repens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Epilobium angustifolium']], [], false)
        .length,
      'Epilobium angustifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Epilobium coloratum']], [], false)
        .length,
      'Epilobium coloratum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Epilobium glabellum']], [], false)
        .length,
      'Epilobium glabellum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Epilobium hirsutum']], [], false)
        .length,
      'Epilobium hirsutum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Epilobium latifolium']], [], false)
        .length,
      'Epilobium latifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Epilobium macranthum']], [], false)
        .length,
      'Epilobium macranthum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Epilobium palustre']], [], false)
        .length,
      'Epilobium palustre'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Epilobium parviflorum']], [], false)
        .length,
      'Epilobium parviflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Epilobium pyrricholophum']], [], false)
        .length,
      'Epilobium pyrricholophum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Epilobium tetragonum']], [], false)
        .length,
      'Epilobium tetragonum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Epimedium grandiflorum']], [], false)
        .length,
      'Epimedium grandiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Epimedium koreanum']], [], false)
        .length,
      'Epimedium koreanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Epimedium sagittatum']], [], false)
        .length,
      'Epimedium sagittatum'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Equisetum arvense']], [], false).length,
      'Equisetum arvense'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Equisetum fluviatile']], [], false)
        .length,
      'Equisetum fluviatile'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Equisetum hyemale']], [], false).length,
      'Equisetum hyemale'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Equisetum palustre']], [], false)
        .length,
      'Equisetum palustre'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Equisetum pratense']], [], false)
        .length,
      'Equisetum pratense'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Equisetum sylvaticum']], [], false)
        .length,
      'Equisetum sylvaticum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Equisetum telmateia']], [], false)
        .length,
      'Equisetum telmateia'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Equisetum variegatum']], [], false)
        .length,
      'Equisetum variegatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eragrostis caroliniana']], [], false)
        .length,
      'Eragrostis caroliniana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eragrostis curvula']], [], false)
        .length,
      'Eragrostis curvula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eragrostis pilosa']], [], false).length,
      'Eragrostis pilosa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eragrostis tef']], [], false).length,
      'Eragrostis tef'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Erechtites hieraciifolia']], [], false)
        .length,
      'Erechtites hieraciifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eremophila longifolia']], [], false)
        .length,
      'Eremophila longifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Eremophila maculata']], [], false)
        .length,
      'Eremophila maculata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eremurus anisopterus']], [], false)
        .length,
      'Eremurus anisopterus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eremurus aucherianus']], [], false)
        .length,
      'Eremurus aucherianus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eremurus olgae']], [], false).length,
      'Eremurus olgae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eremurus regelii']], [], false).length,
      'Eremurus regelii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eremurus robustus']], [], false).length,
      'Eremurus robustus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eremurus spectabilis']], [], false)
        .length,
      'Eremurus spectabilis'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Eremurus stenophyllus aurantiacus']],
        [],
        false
      ).length,
      'Eremurus stenophyllus aurantiacus'
    );
    assert.equal(
      6638,
      filterAndSort(crops, [nameToCrop['Erica cerinthoides']], [], false)
        .length,
      'Erica cerinthoides'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Erica tetralix']], [], false).length,
      'Erica tetralix'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Erica vagans']], [], false).length,
      'Erica vagans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erica x darleyensis']], [], false)
        .length,
      'Erica x darleyensis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Erica x veitchii']], [], false).length,
      'Erica x veitchii'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ericameria parishii']], [], false)
        .length,
      'Ericameria parishii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Erigenia bulbosa']], [], false).length,
      'Erigenia bulbosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erigeron acer']], [], false).length,
      'Erigeron acer'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erigeron affinis']], [], false).length,
      'Erigeron affinis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Erigeron annuus']], [], false).length,
      'Erigeron annuus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erigeron bulbosa']], [], false).length,
      'Erigeron bulbosa'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Erigeron glaucus']], [], false).length,
      'Erigeron glaucus'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Erigeron philadelphicus']], [], false)
        .length,
      'Erigeron philadelphicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriobotrya japonica']], [], false)
        .length,
      'Eriobotrya japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eriocaulon cinereum']], [], false)
        .length,
      'Eriocaulon cinereum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Eriodictyon californicum']], [], false)
        .length,
      'Eriodictyon californicum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Eriodictyon trichocalyx']], [], false)
        .length,
      'Eriodictyon trichocalyx'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriogonum alatum']], [], false).length,
      'Eriogonum alatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriogonum atrorubens']], [], false)
        .length,
      'Eriogonum atrorubens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Eriogonum corymbosum']], [], false)
        .length,
      'Eriogonum corymbosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriogonum inflatum']], [], false)
        .length,
      'Eriogonum inflatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eriogonum jamesii']], [], false).length,
      'Eriogonum jamesii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Eriogonum latifolium']], [], false)
        .length,
      'Eriogonum latifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriogonum longifolium']], [], false)
        .length,
      'Eriogonum longifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eriogonum microthecum']], [], false)
        .length,
      'Eriogonum microthecum'
    );
    assert.equal(
      180,
      filterAndSort(crops, [nameToCrop['Eriophorum angustifolium']], [], false)
        .length,
      'Eriophorum angustifolium'
    );
    assert.equal(
      180,
      filterAndSort(crops, [nameToCrop['Eriophorum gracile']], [], false)
        .length,
      'Eriophorum gracile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eriophyton wallichii']], [], false)
        .length,
      'Eriophyton wallichii'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium cicutarium']], [], false)
        .length,
      'Erodium cicutarium'
    );
    assert.equal(
      7055,
      filterAndSort(
        crops,
        [nameToCrop['Erodium cicutarium bipinnatum']],
        [],
        false
      ).length,
      'Erodium cicutarium bipinnatum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium crinitum']], [], false).length,
      'Erodium crinitum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium hirtum']], [], false).length,
      'Erodium hirtum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium jacquinianum']], [], false)
        .length,
      'Erodium jacquinianum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium malacoides']], [], false)
        .length,
      'Erodium malacoides'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium moschatum']], [], false).length,
      'Erodium moschatum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erodium stephanianum']], [], false)
        .length,
      'Erodium stephanianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erophila verna']], [], false).length,
      'Erophila verna'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eruca vesicaria sativa']], [], false)
        .length,
      'Eruca vesicaria sativa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Erucaria hispanica']], [], false)
        .length,
      'Erucaria hispanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium aquaticum']], [], false)
        .length,
      'Eryngium aquaticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium campestre']], [], false)
        .length,
      'Eryngium campestre'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium caucasicum']], [], false)
        .length,
      'Eryngium caucasicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium creticum']], [], false).length,
      'Eryngium creticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium graecum']], [], false).length,
      'Eryngium graecum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium maritimum']], [], false)
        .length,
      'Eryngium maritimum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Eryngium pandanifolium']], [], false)
        .length,
      'Eryngium pandanifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium planum']], [], false).length,
      'Eryngium planum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium ternatum']], [], false).length,
      'Eryngium ternatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eryngium viride']], [], false).length,
      'Eryngium viride'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eryngium yuccifolium']], [], false)
        .length,
      'Eryngium yuccifolium'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erysimum capitatum']], [], false)
        .length,
      'Erysimum capitatum'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Erysimum cheiranthoides']], [], false)
        .length,
      'Erysimum cheiranthoides'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erysimum cheiri']], [], false).length,
      'Erysimum cheiri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erysimum diffusum']], [], false).length,
      'Erysimum diffusum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erysimum hieraciifolium']], [], false)
        .length,
      'Erysimum hieraciifolium'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erysimum repandum']], [], false).length,
      'Erysimum repandum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Erysimum x allionii']], [], false)
        .length,
      'Erysimum x allionii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Erythrina acanthocarpa']], [], false)
        .length,
      'Erythrina acanthocarpa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Erythrina crista-galli']], [], false)
        .length,
      'Erythrina crista-galli'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Erythrina herbacea']], [], false)
        .length,
      'Erythrina herbacea'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Erythrina humeana']], [], false).length,
      'Erythrina humeana'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Erythrina x bidwillii']], [], false)
        .length,
      'Erythrina x bidwillii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Erythrina zeyheri']], [], false).length,
      'Erythrina zeyheri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium albidum']], [], false)
        .length,
      'Erythronium albidum'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Erythronium albidum mesochoreum']],
        [],
        false
      ).length,
      'Erythronium albidum mesochoreum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Erythronium americanum']], [], false)
        .length,
      'Erythronium americanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium californicum']], [], false)
        .length,
      'Erythronium californicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium citrinum']], [], false)
        .length,
      'Erythronium citrinum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Erythronium dens-canis']], [], false)
        .length,
      'Erythronium dens-canis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium grandiflorum']], [], false)
        .length,
      'Erythronium grandiflorum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium helenae']], [], false)
        .length,
      'Erythronium helenae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium hendersonii']], [], false)
        .length,
      'Erythronium hendersonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium howellii']], [], false)
        .length,
      'Erythronium howellii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium japonicum']], [], false)
        .length,
      'Erythronium japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium montanum']], [], false)
        .length,
      'Erythronium montanum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Erythronium multiscapoideum']],
        [],
        false
      ).length,
      'Erythronium multiscapoideum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium oregonum']], [], false)
        .length,
      'Erythronium oregonum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium parviflorum']], [], false)
        .length,
      'Erythronium parviflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium purpurascens']], [], false)
        .length,
      'Erythronium purpurascens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Erythronium revolutum']], [], false)
        .length,
      'Erythronium revolutum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Erythronium tuolumnense']], [], false)
        .length,
      'Erythronium tuolumnense'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Escallonia laevis']], [], false).length,
      'Escallonia laevis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Escallonia pulverulenta']], [], false)
        .length,
      'Escallonia pulverulenta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Escallonia rosea']], [], false).length,
      'Escallonia rosea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Escallonia rubra']], [], false).length,
      'Escallonia rubra'
    );
    assert.equal(
      7202,
      filterAndSort(
        crops,
        [nameToCrop['Escallonia rubra macrantha']],
        [],
        false
      ).length,
      'Escallonia rubra macrantha'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Escallonia  species']], [], false)
        .length,
      'Escallonia  species'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Escallonia x exoniensis']], [], false)
        .length,
      'Escallonia x exoniensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eschscholzia californica']], [], false)
        .length,
      'Eschscholzia californica'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus caesia']], [], false).length,
      'Eucalyptus caesia'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus camaldulensis']], [], false)
        .length,
      'Eucalyptus camaldulensis'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus citriodora']], [], false)
        .length,
      'Eucalyptus citriodora'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus coccifera']], [], false)
        .length,
      'Eucalyptus coccifera'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus dumosa']], [], false).length,
      'Eucalyptus dumosa'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus globulus']], [], false)
        .length,
      'Eucalyptus globulus'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus gummifera']], [], false)
        .length,
      'Eucalyptus gummifera'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus gunnii']], [], false).length,
      'Eucalyptus gunnii'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus johnstonii']], [], false)
        .length,
      'Eucalyptus johnstonii'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus largiflorens']], [], false)
        .length,
      'Eucalyptus largiflorens'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus leucoxylon']], [], false)
        .length,
      'Eucalyptus leucoxylon'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Eucalyptus macrorhyncha']], [], false)
        .length,
      'Eucalyptus macrorhyncha'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus melliodora']], [], false)
        .length,
      'Eucalyptus melliodora'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus microcorys']], [], false)
        .length,
      'Eucalyptus microcorys'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus obliqua']], [], false)
        .length,
      'Eucalyptus obliqua'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus pauciflora']], [], false)
        .length,
      'Eucalyptus pauciflora'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Eucalyptus pauciflora niphophila']],
        [],
        false
      ).length,
      'Eucalyptus pauciflora niphophila'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus perriniana']], [], false)
        .length,
      'Eucalyptus perriniana'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Eucalyptus piperita']], [], false)
        .length,
      'Eucalyptus piperita'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eucalyptus polybractea']], [], false)
        .length,
      'Eucalyptus polybractea'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus punctata']], [], false)
        .length,
      'Eucalyptus punctata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eucalyptus racemosa']], [], false)
        .length,
      'Eucalyptus racemosa'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus regnans']], [], false)
        .length,
      'Eucalyptus regnans'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Eucalyptus sideroxylon']], [], false)
        .length,
      'Eucalyptus sideroxylon'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Eucalyptus viminalis']], [], false)
        .length,
      'Eucalyptus viminalis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Eucalyptus youmanii']], [], false)
        .length,
      'Eucalyptus youmanii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euchresta japonica']], [], false)
        .length,
      'Euchresta japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eucommia ulmoides']], [], false).length,
      'Eucommia ulmoides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eucryphia cordifolia']], [], false)
        .length,
      'Eucryphia cordifolia'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Eucryphia lucida']], [], false).length,
      'Eucryphia lucida'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eucryphia moorei']], [], false).length,
      'Eucryphia moorei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eucryphia x nymansensis']], [], false)
        .length,
      'Eucryphia x nymansensis'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Euodia daniellii']], [], false).length,
      'Euodia daniellii'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Euodia fraxinifolia']], [], false)
        .length,
      'Euodia fraxinifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euodia lepta']], [], false).length,
      'Euodia lepta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euodia officinalis']], [], false)
        .length,
      'Euodia officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euodia ruticarpa']], [], false).length,
      'Euodia ruticarpa'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Euonymus alatus']], [], false).length,
      'Euonymus alatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Euonymus alatus apterus']], [], false)
        .length,
      'Euonymus alatus apterus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euonymus americanus']], [], false)
        .length,
      'Euonymus americanus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus atropurpureus']], [], false)
        .length,
      'Euonymus atropurpureus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euonymus crenulatus']], [], false)
        .length,
      'Euonymus crenulatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Euonymus europaeus']], [], false)
        .length,
      'Euonymus europaeus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Euonymus fimbriatus']], [], false)
        .length,
      'Euonymus fimbriatus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus fortunei']], [], false).length,
      'Euonymus fortunei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus hamiltonianus']], [], false)
        .length,
      'Euonymus hamiltonianus'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Euonymus hamiltonianus maackii']],
        [],
        false
      ).length,
      'Euonymus hamiltonianus maackii'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Euonymus hamiltonianus sieboldianus']],
        [],
        false
      ).length,
      'Euonymus hamiltonianus sieboldianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euonymus japonicus']], [], false)
        .length,
      'Euonymus japonicus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus latifolius']], [], false)
        .length,
      'Euonymus latifolius'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Euonymus lucidus']], [], false).length,
      'Euonymus lucidus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus macropterus']], [], false)
        .length,
      'Euonymus macropterus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euonymus miyakei']], [], false).length,
      'Euonymus miyakei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus oxyphyllus']], [], false)
        .length,
      'Euonymus oxyphyllus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euonymus sachalinensis']], [], false)
        .length,
      'Euonymus sachalinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euonymus tanakae']], [], false).length,
      'Euonymus tanakae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euonymus thunbergianus']], [], false)
        .length,
      'Euonymus thunbergianus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Euonymus tingens']], [], false).length,
      'Euonymus tingens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euonymus verrucosus']], [], false)
        .length,
      'Euonymus verrucosus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Eupatorium cannabinum']], [], false)
        .length,
      'Eupatorium cannabinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eupatorium capillifolium']], [], false)
        .length,
      'Eupatorium capillifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eupatorium chinense']], [], false)
        .length,
      'Eupatorium chinense'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Eupatorium compositifolium']],
        [],
        false
      ).length,
      'Eupatorium compositifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eupatorium hyssopifolium']], [], false)
        .length,
      'Eupatorium hyssopifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eupatorium japonicum']], [], false)
        .length,
      'Eupatorium japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eupatorium lindleyanum']], [], false)
        .length,
      'Eupatorium lindleyanum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eupatorium maculatum']], [], false)
        .length,
      'Eupatorium maculatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eupatorium perfoliatum']], [], false)
        .length,
      'Eupatorium perfoliatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Eupatorium purpureum']], [], false)
        .length,
      'Eupatorium purpureum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Euphorbia antisyphilitica']], [], false)
        .length,
      'Euphorbia antisyphilitica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Euphorbia corollata']], [], false)
        .length,
      'Euphorbia corollata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia drummondii']], [], false)
        .length,
      'Euphorbia drummondii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia helioscopia']], [], false)
        .length,
      'Euphorbia helioscopia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia hirta']], [], false).length,
      'Euphorbia hirta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia humifusa']], [], false)
        .length,
      'Euphorbia humifusa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euphorbia ipecacuanhae']], [], false)
        .length,
      'Euphorbia ipecacuanhae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia lathyris']], [], false)
        .length,
      'Euphorbia lathyris'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Euphorbia marginata']], [], false)
        .length,
      'Euphorbia marginata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia pekinensis']], [], false)
        .length,
      'Euphorbia pekinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia serpyllifolia']], [], false)
        .length,
      'Euphorbia serpyllifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia sieboldiana']], [], false)
        .length,
      'Euphorbia sieboldiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euphorbia tetragona']], [], false)
        .length,
      'Euphorbia tetragona'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Euphorbia thomsoniana']], [], false)
        .length,
      'Euphorbia thomsoniana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euphrasia officinalis']], [], false)
        .length,
      'Euphrasia officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eupomatia laurina']], [], false).length,
      'Eupomatia laurina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euptelea pleiosperma']], [], false)
        .length,
      'Euptelea pleiosperma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euptelea polyandra']], [], false)
        .length,
      'Euptelea polyandra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eurya acuminata']], [], false).length,
      'Eurya acuminata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eurya chinensis']], [], false).length,
      'Eurya chinensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Eurya japonica']], [], false).length,
      'Eurya japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Eurya symplocina']], [], false).length,
      'Eurya symplocina'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Euryale ferox']], [], false).length,
      'Euryale ferox'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Euscaphis japonica']], [], false)
        .length,
      'Euscaphis japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Eustrephus latifolius']], [], false)
        .length,
      'Eustrephus latifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus aphyllus']], [], false)
        .length,
      'Exocarpus aphyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus bidwillii']], [], false)
        .length,
      'Exocarpus bidwillii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus cupressiformis']], [], false)
        .length,
      'Exocarpus cupressiformis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus latifolius']], [], false)
        .length,
      'Exocarpus latifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus nanus']], [], false).length,
      'Exocarpus nanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Exocarpus odoratus']], [], false)
        .length,
      'Exocarpus odoratus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Exocarpus sparteus']], [], false)
        .length,
      'Exocarpus sparteus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Exocarpus strictus']], [], false)
        .length,
      'Exocarpus strictus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Exocarpus syrticola']], [], false)
        .length,
      'Exocarpus syrticola'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Fabiana imbricata']], [], false).length,
      'Fabiana imbricata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fagopyrum dibotrys']], [], false)
        .length,
      'Fagopyrum dibotrys'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Fagopyrum esculentum']], [], false)
        .length,
      'Fagopyrum esculentum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fagopyrum tataricum']], [], false)
        .length,
      'Fagopyrum tataricum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fagus crenata']], [], false).length,
      'Fagus crenata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fagus grandifolia']], [], false).length,
      'Fagus grandifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fagus japonica']], [], false).length,
      'Fagus japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fagus longipetiolata']], [], false)
        .length,
      'Fagus longipetiolata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fagus lucida']], [], false).length,
      'Fagus lucida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fagus orientalis']], [], false).length,
      'Fagus orientalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fagus sylvatica']], [], false).length,
      'Fagus sylvatica'
    );
    assert.equal(
      2820,
      filterAndSort(crops, [nameToCrop['Fallopia japonica']], [], false).length,
      'Fallopia japonica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Fallugia paradoxa']], [], false).length,
      'Fallugia paradoxa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Farfugium japonicum']], [], false)
        .length,
      'Farfugium japonicum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fargesia nitida']], [], false).length,
      'Fargesia nitida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fedia cornucopiae']], [], false).length,
      'Fedia cornucopiae'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ferula assa-foetida']], [], false)
        .length,
      'Ferula assa-foetida'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ferula caspica']], [], false).length,
      'Ferula caspica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ferula communis']], [], false).length,
      'Ferula communis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ferula conocaula']], [], false).length,
      'Ferula conocaula'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ferula foetida']], [], false).length,
      'Ferula foetida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula gummosa']], [], false).length,
      'Ferula gummosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula karelinii']], [], false).length,
      'Ferula karelinii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula longifolia']], [], false).length,
      'Ferula longifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula marmarica']], [], false).length,
      'Ferula marmarica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ferula moschata']], [], false).length,
      'Ferula moschata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ferula narthex']], [], false).length,
      'Ferula narthex'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula persica']], [], false).length,
      'Ferula persica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula schair']], [], false).length,
      'Ferula schair'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ferula szowitziana']], [], false)
        .length,
      'Ferula szowitziana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ferula tingitana']], [], false).length,
      'Ferula tingitana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Festuca conferta']], [], false).length,
      'Festuca conferta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Festuca ovina']], [], false).length,
      'Festuca ovina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Fibigia clypeata']], [], false).length,
      'Fibigia clypeata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ficus carica']], [], false).length,
      'Ficus carica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ficus coronata']], [], false).length,
      'Ficus coronata'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Ficus macrophylla']], [], false).length,
      'Ficus macrophylla'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ficus palmata']], [], false).length,
      'Ficus palmata'
    );
    assert.equal(
      6960,
      filterAndSort(crops, [nameToCrop['Filipendula kamtschatica']], [], false)
        .length,
      'Filipendula kamtschatica'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Filipendula multijuga']], [], false)
        .length,
      'Filipendula multijuga'
    );
    assert.equal(
      6492,
      filterAndSort(crops, [nameToCrop['Filipendula rubra']], [], false).length,
      'Filipendula rubra'
    );
    assert.equal(
      6492,
      filterAndSort(crops, [nameToCrop['Filipendula ulmaria']], [], false)
        .length,
      'Filipendula ulmaria'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Filipendula vestita']], [], false)
        .length,
      'Filipendula vestita'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Filipendula vulgaris']], [], false)
        .length,
      'Filipendula vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Fimbristylis sub-bispicata']],
        [],
        false
      ).length,
      'Fimbristylis sub-bispicata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Firmiana simplex']], [], false).length,
      'Firmiana simplex'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Fitzroya cupressoides']], [], false)
        .length,
      'Fitzroya cupressoides'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Foeniculum vulgare']], [], false)
        .length,
      'Foeniculum vulgare'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Foeniculum vulgare azoricum']],
        [],
        false
      ).length,
      'Foeniculum vulgare azoricum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Foeniculum vulgare dulce']], [], false)
        .length,
      'Foeniculum vulgare dulce'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Fontanesia phillyreoides fortunei']],
        [],
        false
      ).length,
      'Fontanesia phillyreoides fortunei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Forestiera acuminata']], [], false)
        .length,
      'Forestiera acuminata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Forestiera neomexicana']], [], false)
        .length,
      'Forestiera neomexicana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Forsythia suspensa']], [], false)
        .length,
      'Forsythia suspensa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Forsythia viridissima']], [], false)
        .length,
      'Forsythia viridissima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Forsythia x intermedia']], [], false)
        .length,
      'Forsythia x intermedia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Fortunella japonica']], [], false)
        .length,
      'Fortunella japonica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Fortunella margarita']], [], false)
        .length,
      'Fortunella margarita'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria bracteata']], [], false)
        .length,
      'Fragaria bracteata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria californica']], [], false)
        .length,
      'Fragaria californica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fragaria chiloensis']], [], false)
        .length,
      'Fragaria chiloensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria daltoniana']], [], false)
        .length,
      'Fragaria daltoniana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria iinumae']], [], false).length,
      'Fragaria iinumae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria moschata']], [], false).length,
      'Fragaria moschata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria nilgerrensis']], [], false)
        .length,
      'Fragaria nilgerrensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria nipponica']], [], false)
        .length,
      'Fragaria nipponica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria nubicola']], [], false).length,
      'Fragaria nubicola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria orientalis']], [], false)
        .length,
      'Fragaria orientalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria ovalis']], [], false).length,
      'Fragaria ovalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fragaria vesca']], [], false).length,
      'Fragaria vesca'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop["Fragaria vesca 'Semperflorens'"]],
        [],
        false
      ).length,
      "Fragaria vesca 'Semperflorens'"
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Fragaria virginiana']], [], false)
        .length,
      'Fragaria virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fragaria viridis']], [], false).length,
      'Fragaria viridis'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Fragaria x ananassa']], [], false)
        .length,
      'Fragaria x ananassa'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Frasera caroliniensis']], [], false)
        .length,
      'Frasera caroliniensis'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Frasera speciosa']], [], false).length,
      'Frasera speciosa'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Fraxinus americana']], [], false)
        .length,
      'Fraxinus americana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus angustifolia']], [], false)
        .length,
      'Fraxinus angustifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fraxinus bungeana']], [], false).length,
      'Fraxinus bungeana'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Fraxinus chinensis rhynchophylla']],
        [],
        false
      ).length,
      'Fraxinus chinensis rhynchophylla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fraxinus excelsior']], [], false)
        .length,
      'Fraxinus excelsior'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Fraxinus floribunda']], [], false)
        .length,
      'Fraxinus floribunda'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus hookeri']], [], false).length,
      'Fraxinus hookeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus latifolia']], [], false)
        .length,
      'Fraxinus latifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus longicuspis']], [], false)
        .length,
      'Fraxinus longicuspis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus nigra']], [], false).length,
      'Fraxinus nigra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus ornus']], [], false).length,
      'Fraxinus ornus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fraxinus pennsylvanica']], [], false)
        .length,
      'Fraxinus pennsylvanica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fraxinus quadrangulata']], [], false)
        .length,
      'Fraxinus quadrangulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus sieboldiana']], [], false)
        .length,
      'Fraxinus sieboldiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus texensis']], [], false).length,
      'Fraxinus texensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Fraxinus velutina']], [], false).length,
      'Fraxinus velutina'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Fraxinus xanthoxyloides']], [], false)
        .length,
      'Fraxinus xanthoxyloides'
    );
    assert.equal(
      7203,
      filterAndSort(
        crops,
        [nameToCrop['Fremontodendron californicum']],
        [],
        false
      ).length,
      'Fremontodendron californicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fritillaria affinis']], [], false)
        .length,
      'Fritillaria affinis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fritillaria atropurpurea']], [], false)
        .length,
      'Fritillaria atropurpurea'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Fritillaria camschatcensis']],
        [],
        false
      ).length,
      'Fritillaria camschatcensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fritillaria cirrhosa']], [], false)
        .length,
      'Fritillaria cirrhosa'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Fritillaria imperialis']], [], false)
        .length,
      'Fritillaria imperialis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fritillaria meleagris']], [], false)
        .length,
      'Fritillaria meleagris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Fritillaria pallidiflora']], [], false)
        .length,
      'Fritillaria pallidiflora'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Fritillaria pudica']], [], false)
        .length,
      'Fritillaria pudica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Fritillaria roylei']], [], false)
        .length,
      'Fritillaria roylei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fritillaria sewerzowii']], [], false)
        .length,
      'Fritillaria sewerzowii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Fritillaria thunbergii']], [], false)
        .length,
      'Fritillaria thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fritillaria verticillata']], [], false)
        .length,
      'Fritillaria verticillata'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Fuchsia alpestris']], [], false).length,
      'Fuchsia alpestris'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Fuchsia boliviana']], [], false).length,
      'Fuchsia boliviana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia coccinea']], [], false).length,
      'Fuchsia coccinea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia colensoi']], [], false).length,
      'Fuchsia colensoi'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Fuchsia corymbiflora']], [], false)
        .length,
      'Fuchsia corymbiflora'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Fuchsia denticulata']], [], false)
        .length,
      'Fuchsia denticulata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia excorticata']], [], false)
        .length,
      'Fuchsia excorticata'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Fuchsia fulgens']], [], false).length,
      'Fuchsia fulgens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia hemsleyana']], [], false)
        .length,
      'Fuchsia hemsleyana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fuchsia magellanica']], [], false)
        .length,
      'Fuchsia magellanica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia microphylla']], [], false)
        .length,
      'Fuchsia microphylla'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Fuchsia paniculata']], [], false)
        .length,
      'Fuchsia paniculata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia procumbens']], [], false)
        .length,
      'Fuchsia procumbens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Fuchsia  species']], [], false).length,
      'Fuchsia  species'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Fuchsia splendens']], [], false).length,
      'Fuchsia splendens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Fumaria officinalis']], [], false)
        .length,
      'Fumaria officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gagea lutea']], [], false).length,
      'Gagea lutea'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Gaillardia pinnatifida']], [], false)
        .length,
      'Gaillardia pinnatifida'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Galactites tomentosa']], [], false)
        .length,
      'Galactites tomentosa'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Galanthus nivalis']], [], false).length,
      'Galanthus nivalis'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Galax urceolata']], [], false).length,
      'Galax urceolata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Galega officinalis']], [], false)
        .length,
      'Galega officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galeopsis bifida']], [], false).length,
      'Galeopsis bifida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galeopsis ladanum']], [], false).length,
      'Galeopsis ladanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galeopsis segetum']], [], false).length,
      'Galeopsis segetum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galeopsis speciosa']], [], false)
        .length,
      'Galeopsis speciosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galeopsis tetrahit']], [], false)
        .length,
      'Galeopsis tetrahit'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galinsoga parviflora']], [], false)
        .length,
      'Galinsoga parviflora'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Galium aparine']], [], false).length,
      'Galium aparine'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Galium boreale']], [], false).length,
      'Galium boreale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galium gracile']], [], false).length,
      'Galium gracile'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Galium mollugo']], [], false).length,
      'Galium mollugo'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Galium odoratum']], [], false).length,
      'Galium odoratum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galium spurium']], [], false).length,
      'Galium spurium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galium tinctorium']], [], false).length,
      'Galium tinctorium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Galium triflorum']], [], false).length,
      'Galium triflorum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Galium verum']], [], false).length,
      'Galium verum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Garrya elliptica']], [], false).length,
      'Garrya elliptica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Garrya fremontii']], [], false).length,
      'Garrya fremontii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gastrodia cunninghamii']], [], false)
        .length,
      'Gastrodia cunninghamii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gastrodia elata']], [], false).length,
      'Gastrodia elata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gastrodia sesamoides']], [], false)
        .length,
      'Gastrodia sesamoides'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria adenothrix']], [], false)
        .length,
      'Gaultheria adenothrix'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria antipoda']], [], false)
        .length,
      'Gaultheria antipoda'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria appressa']], [], false)
        .length,
      'Gaultheria appressa'
    );
    assert.equal(
      6641,
      filterAndSort(crops, [nameToCrop['Gaultheria cumingiana']], [], false)
        .length,
      'Gaultheria cumingiana'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria depressa']], [], false)
        .length,
      'Gaultheria depressa'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria fragrantissima']], [], false)
        .length,
      'Gaultheria fragrantissima'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaultheria griffithianum']], [], false)
        .length,
      'Gaultheria griffithianum'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria hispida']], [], false)
        .length,
      'Gaultheria hispida'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria hispidula']], [], false)
        .length,
      'Gaultheria hispidula'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria humifusa']], [], false)
        .length,
      'Gaultheria humifusa'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria insana']], [], false).length,
      'Gaultheria insana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria japonica']], [], false)
        .length,
      'Gaultheria japonica'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Gaultheria macrostigma']], [], false)
        .length,
      'Gaultheria macrostigma'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaultheria mucronata']], [], false)
        .length,
      'Gaultheria mucronata'
    );
    assert.equal(
      6876,
      filterAndSort(crops, [nameToCrop['Gaultheria myrsinoides']], [], false)
        .length,
      'Gaultheria myrsinoides'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Gaultheria nummularioides']], [], false)
        .length,
      'Gaultheria nummularioides'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria ovatifolia']], [], false)
        .length,
      'Gaultheria ovatifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria procumbens']], [], false)
        .length,
      'Gaultheria procumbens'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaultheria pumila']], [], false).length,
      'Gaultheria pumila'
    );
    assert.equal(
      7057,
      filterAndSort(
        crops,
        [nameToCrop['Gaultheria pumila leucocarpa']],
        [],
        false
      ).length,
      'Gaultheria pumila leucocarpa'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Gaultheria pyroliifolia']], [], false)
        .length,
      'Gaultheria pyroliifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Gaultheria pyroloides']], [], false)
        .length,
      'Gaultheria pyroloides'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Gaultheria rigida']], [], false).length,
      'Gaultheria rigida'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Gaultheria sclelophylla']], [], false)
        .length,
      'Gaultheria sclelophylla'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Gaultheria shallon']], [], false)
        .length,
      'Gaultheria shallon'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Gaultheria trichophylla']], [], false)
        .length,
      'Gaultheria trichophylla'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Gaultheria x wisleyensis']], [], false)
        .length,
      'Gaultheria x wisleyensis'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaylussacia baccata']], [], false)
        .length,
      'Gaylussacia baccata'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaylussacia brachycera']], [], false)
        .length,
      'Gaylussacia brachycera'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaylussacia dumosa']], [], false)
        .length,
      'Gaylussacia dumosa'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaylussacia frondosa']], [], false)
        .length,
      'Gaylussacia frondosa'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Gaylussacia ursina']], [], false)
        .length,
      'Gaylussacia ursina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geijera parviflora']], [], false)
        .length,
      'Geijera parviflora'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Geitonoplesium cymosum']], [], false)
        .length,
      'Geitonoplesium cymosum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Gelsemium sempervirens']], [], false)
        .length,
      'Gelsemium sempervirens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Genista germanica']], [], false).length,
      'Genista germanica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Genista hispanica']], [], false).length,
      'Genista hispanica'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Genista tinctoria']], [], false).length,
      'Genista tinctoria'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Gentiana acaulis']], [], false).length,
      'Gentiana acaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana andrewsii']], [], false)
        .length,
      'Gentiana andrewsii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Gentiana crassicaulis']], [], false)
        .length,
      'Gentiana crassicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana cruciata']], [], false).length,
      'Gentiana cruciata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana dahurica']], [], false).length,
      'Gentiana dahurica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana decumbens']], [], false)
        .length,
      'Gentiana decumbens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana kurroo']], [], false).length,
      'Gentiana kurroo'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana lutea']], [], false).length,
      'Gentiana lutea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana macrophylla']], [], false)
        .length,
      'Gentiana macrophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana manshurica']], [], false)
        .length,
      'Gentiana manshurica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana pannonica']], [], false)
        .length,
      'Gentiana pannonica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Gentiana pneumonanthe']], [], false)
        .length,
      'Gentiana pneumonanthe'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana puberulenta']], [], false)
        .length,
      'Gentiana puberulenta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana punctata']], [], false).length,
      'Gentiana punctata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Gentiana purpurea']], [], false).length,
      'Gentiana purpurea'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Gentiana saponaria']], [], false)
        .length,
      'Gentiana saponaria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana scabra']], [], false).length,
      'Gentiana scabra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana scabra buergeri']], [], false)
        .length,
      'Gentiana scabra buergeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Gentiana straminea']], [], false)
        .length,
      'Gentiana straminea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentiana thunbergii']], [], false)
        .length,
      'Gentiana thunbergii'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Gentiana triflora']], [], false).length,
      'Gentiana triflora'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Gentiana tubiflora']], [], false)
        .length,
      'Gentiana tubiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gentianella amarella']], [], false)
        .length,
      'Gentianella amarella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gentianella diemensis']], [], false)
        .length,
      'Gentianella diemensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gentianella quinquefolia']], [], false)
        .length,
      'Gentianella quinquefolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geocaulon lividum']], [], false).length,
      'Geocaulon lividum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium bicknellii']], [], false)
        .length,
      'Geranium bicknellii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium dissectum']], [], false)
        .length,
      'Geranium dissectum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Geranium erianthum']], [], false)
        .length,
      'Geranium erianthum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Geranium incanum']], [], false).length,
      'Geranium incanum'
    );
    assert.equal(
      6400,
      filterAndSort(crops, [nameToCrop['Geranium lucidum']], [], false).length,
      'Geranium lucidum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Geranium macrorrhizum']], [], false)
        .length,
      'Geranium macrorrhizum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Geranium maculatum']], [], false)
        .length,
      'Geranium maculatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium molle']], [], false).length,
      'Geranium molle'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium nepalense']], [], false)
        .length,
      'Geranium nepalense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium ocellatum']], [], false)
        .length,
      'Geranium ocellatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium pilosum']], [], false).length,
      'Geranium pilosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium potentilloides']], [], false)
        .length,
      'Geranium potentilloides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Geranium pratense']], [], false).length,
      'Geranium pratense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium pusillum']], [], false).length,
      'Geranium pusillum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Geranium robertianum']], [], false)
        .length,
      'Geranium robertianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium rotundifolium']], [], false)
        .length,
      'Geranium rotundifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium sibiricum']], [], false)
        .length,
      'Geranium sibiricum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium solanderi']], [], false)
        .length,
      'Geranium solanderi'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Geranium sylvaticum']], [], false)
        .length,
      'Geranium sylvaticum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium thunbergii']], [], false)
        .length,
      'Geranium thunbergii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Geranium tuberosum']], [], false)
        .length,
      'Geranium tuberosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium viscosissimum']], [], false)
        .length,
      'Geranium viscosissimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium wallichianum']], [], false)
        .length,
      'Geranium wallichianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Geranium wilfordii']], [], false)
        .length,
      'Geranium wilfordii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gerbera lanuginosa']], [], false)
        .length,
      'Gerbera lanuginosa'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Geum aleppicum']], [], false).length,
      'Geum aleppicum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Geum canadense']], [], false).length,
      'Geum canadense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Geum japonicum']], [], false).length,
      'Geum japonicum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Geum pentapetalum']], [], false).length,
      'Geum pentapetalum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Geum rivale']], [], false).length,
      'Geum rivale'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Geum triflorum']], [], false).length,
      'Geum triflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Geum urbanum']], [], false).length,
      'Geum urbanum'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Gevuina avellana']], [], false).length,
      'Gevuina avellana'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Gillenia stipulata']], [], false)
        .length,
      'Gillenia stipulata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Gillenia trifoliata']], [], false)
        .length,
      'Gillenia trifoliata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gingidia harveyana']], [], false)
        .length,
      'Gingidia harveyana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ginkgo biloba']], [], false).length,
      'Ginkgo biloba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Girardiana diversifolia']], [], false)
        .length,
      'Girardiana diversifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Gladiolus cruentus']], [], false)
        .length,
      'Gladiolus cruentus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gladiolus dalenii']], [], false).length,
      'Gladiolus dalenii'
    );
    assert.equal(
      7037,
      filterAndSort(
        crops,
        [nameToCrop['Gladiolus permeabilis edulis']],
        [],
        false
      ).length,
      'Gladiolus permeabilis edulis'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Gladiolus quartinianus']], [], false)
        .length,
      'Gladiolus quartinianus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gladiolus spicatus']], [], false)
        .length,
      'Gladiolus spicatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gladiolus unguiculatus']], [], false)
        .length,
      'Gladiolus unguiculatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gladiolus zambesiacus']], [], false)
        .length,
      'Gladiolus zambesiacus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Glaucium flavum']], [], false).length,
      'Glaucium flavum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glaux maritima']], [], false).length,
      'Glaux maritima'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Glechoma hederacea']], [], false)
        .length,
      'Glechoma hederacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gleditsia aquatica']], [], false)
        .length,
      'Gleditsia aquatica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Gleditsia caspica']], [], false).length,
      'Gleditsia caspica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Gleditsia japonica']], [], false)
        .length,
      'Gleditsia japonica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Gleditsia koraiensis']], [], false)
        .length,
      'Gleditsia koraiensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Gleditsia macracantha']], [], false)
        .length,
      'Gleditsia macracantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gleditsia sinensis']], [], false)
        .length,
      'Gleditsia sinensis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Gleditsia triacanthos']], [], false)
        .length,
      'Gleditsia triacanthos'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glehnia littoralis']], [], false)
        .length,
      'Glehnia littoralis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Globularia vulgaris']], [], false)
        .length,
      'Globularia vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glochidion eriocarpum']], [], false)
        .length,
      'Glochidion eriocarpum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glochidion puberum']], [], false)
        .length,
      'Glochidion puberum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria acutiflora']], [], false)
        .length,
      'Glyceria acutiflora'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria borealis']], [], false).length,
      'Glyceria borealis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria fluitans']], [], false).length,
      'Glyceria fluitans'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria occidentalis']], [], false)
        .length,
      'Glyceria occidentalis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria plicata']], [], false).length,
      'Glyceria plicata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria septentrionalis']], [], false)
        .length,
      'Glyceria septentrionalis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyceria striata']], [], false).length,
      'Glyceria striata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Glycine max']], [], false).length,
      'Glycine max'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Glycine soja']], [], false).length,
      'Glycine soja'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glycine tabacina']], [], false).length,
      'Glycine tabacina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza aspera']], [], false)
        .length,
      'Glycyrrhiza aspera'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza echinata']], [], false)
        .length,
      'Glycyrrhiza echinata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza glabra']], [], false)
        .length,
      'Glycyrrhiza glabra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza lepidota']], [], false)
        .length,
      'Glycyrrhiza lepidota'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza malensis']], [], false)
        .length,
      'Glycyrrhiza malensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Glycyrrhiza uralensis']], [], false)
        .length,
      'Glycyrrhiza uralensis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Glyptostrobus pensilis']], [], false)
        .length,
      'Glyptostrobus pensilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium affine']], [], false).length,
      'Gnaphalium affine'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium hypoleucum']], [], false)
        .length,
      'Gnaphalium hypoleucum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium indicum']], [], false)
        .length,
      'Gnaphalium indicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium japonicum']], [], false)
        .length,
      'Gnaphalium japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium keriense']], [], false)
        .length,
      'Gnaphalium keriense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium luteoalbum']], [], false)
        .length,
      'Gnaphalium luteoalbum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gnaphalium uliginosum']], [], false)
        .length,
      'Gnaphalium uliginosum'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Goodenia ovata']], [], false).length,
      'Goodenia ovata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Goodenia varia']], [], false).length,
      'Goodenia varia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Goodyera oblongifolia']], [], false)
        .length,
      'Goodyera oblongifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Goodyera pubescens']], [], false)
        .length,
      'Goodyera pubescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Goodyera repens']], [], false).length,
      'Goodyera repens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gratiola officinalis']], [], false)
        .length,
      'Gratiola officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gratiola pedunculata']], [], false)
        .length,
      'Gratiola pedunculata'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Greigia sphacelata']], [], false)
        .length,
      'Greigia sphacelata'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Grevillea robusta']], [], false).length,
      'Grevillea robusta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Grewia biloba parviflora']], [], false)
        .length,
      'Grewia biloba parviflora'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Grewia oppositifolia']], [], false)
        .length,
      'Grewia oppositifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Grindelia camporum']], [], false)
        .length,
      'Grindelia camporum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Grindelia humilis']], [], false).length,
      'Grindelia humilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Grindelia lanceolata']], [], false)
        .length,
      'Grindelia lanceolata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Grindelia robusta']], [], false).length,
      'Grindelia robusta'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Grindelia squarrosa']], [], false)
        .length,
      'Grindelia squarrosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Griselinia littoralis']], [], false)
        .length,
      'Griselinia littoralis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Guizotia abyssinica']], [], false)
        .length,
      'Guizotia abyssinica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gundelia tournefortii']], [], false)
        .length,
      'Gundelia tournefortii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gunnera magellanica']], [], false)
        .length,
      'Gunnera magellanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gunnera perpensa']], [], false).length,
      'Gunnera perpensa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gunnera tinctoria']], [], false).length,
      'Gunnera tinctoria'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Gutierrezia sarothrae']], [], false)
        .length,
      'Gutierrezia sarothrae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gymnadenia conopsea']], [], false)
        .length,
      'Gymnadenia conopsea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Gymnocladus chinensis']], [], false)
        .length,
      'Gymnocladus chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gymnocladus dioica']], [], false)
        .length,
      'Gymnocladus dioica'
    );
    assert.equal(
      6958,
      filterAndSort(crops, [nameToCrop['Gynandriris sisyrinchium']], [], false)
        .length,
      'Gynandriris sisyrinchium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Gynatrix pulchella']], [], false)
        .length,
      'Gynatrix pulchella'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Gynostemma pentaphyllum']], [], false)
        .length,
      'Gynostemma pentaphyllum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Gynura segetum']], [], false).length,
      'Gynura segetum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila arrostii']], [], false)
        .length,
      'Gypsophila arrostii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila davurica']], [], false)
        .length,
      'Gypsophila davurica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila licentiana']], [], false)
        .length,
      'Gypsophila licentiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila oldhamiana']], [], false)
        .length,
      'Gypsophila oldhamiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila paniculata']], [], false)
        .length,
      'Gypsophila paniculata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Gypsophila struthium']], [], false)
        .length,
      'Gypsophila struthium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Habenaria intermedia']], [], false)
        .length,
      'Habenaria intermedia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Habenaria sparsiflora']], [], false)
        .length,
      'Habenaria sparsiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hackelia uncinatum']], [], false)
        .length,
      'Hackelia uncinatum'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Hakea sericea']], [], false).length,
      'Hakea sericea'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Hakea suaveolens']], [], false).length,
      'Hakea suaveolens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hakea suberea']], [], false).length,
      'Hakea suberea'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Halenia elliptica']], [], false).length,
      'Halenia elliptica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Halerpestes sarmentosa']], [], false)
        .length,
      'Halerpestes sarmentosa'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Halesia carolina']], [], false).length,
      'Halesia carolina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Halimione portulacoides']], [], false)
        .length,
      'Halimione portulacoides'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Halimodendron halodendron']], [], false)
        .length,
      'Halimodendron halodendron'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Haloxylon ammodendron']], [], false)
        .length,
      'Haloxylon ammodendron'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Haloxylon persicum']], [], false)
        .length,
      'Haloxylon persicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hamamelis virginiana']], [], false)
        .length,
      'Hamamelis virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Haplopappus nuttallii']], [], false)
        .length,
      'Haplopappus nuttallii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Haplopappus spinulosus']], [], false)
        .length,
      'Haplopappus spinulosus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Hardenbergia violacea']], [], false)
        .length,
      'Hardenbergia violacea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop["Hebe 'Great Orme'"]], [], false).length,
      "Hebe 'Great Orme'"
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hebe brachysiphon']], [], false).length,
      'Hebe brachysiphon'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Hebe dieffenbachii']], [], false)
        .length,
      'Hebe dieffenbachii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hebe rakaiensis']], [], false).length,
      'Hebe rakaiensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hebe salicifolia']], [], false).length,
      'Hebe salicifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hebe speciosa']], [], false).length,
      'Hebe speciosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hebe x franciscana']], [], false)
        .length,
      'Hebe x franciscana'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Hedeoma pulegioides']], [], false)
        .length,
      'Hedeoma pulegioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hedera helix']], [], false).length,
      'Hedera helix'
    );
    assert.equal(
      7206,
      filterAndSort(crops, [nameToCrop['Hedera nepalensis']], [], false).length,
      'Hedera nepalensis'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Hedychium coronarium']], [], false)
        .length,
      'Hedychium coronarium'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Hedychium gracile']], [], false).length,
      'Hedychium gracile'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Hedychium spicatum']], [], false)
        .length,
      'Hedychium spicatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hedysarum alpinum']], [], false).length,
      'Hedysarum alpinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hedysarum arcticum']], [], false)
        .length,
      'Hedysarum arcticum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Hedysarum boreale']], [], false).length,
      'Hedysarum boreale'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Hedysarum boreale mackenzii']],
        [],
        false
      ).length,
      'Hedysarum boreale mackenzii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hedysarum hedysaroides']], [], false)
        .length,
      'Hedysarum hedysaroides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hedysarum occidentale']], [], false)
        .length,
      'Hedysarum occidentale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hedysarum sachalinense']], [], false)
        .length,
      'Hedysarum sachalinense'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Hedysarum vicioides']], [], false)
        .length,
      'Hedysarum vicioides'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Heimia myrtifolia']], [], false).length,
      'Heimia myrtifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Heimia salicifolia']], [], false)
        .length,
      'Heimia salicifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Heldreichia rotundifolia']], [], false)
        .length,
      'Heldreichia rotundifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Helenium amarum']], [], false).length,
      'Helenium amarum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Helenium autumnale']], [], false)
        .length,
      'Helenium autumnale'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Helenium hoopesii']], [], false).length,
      'Helenium hoopesii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Helenium puberulum']], [], false)
        .length,
      'Helenium puberulum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Helianthemum canadense']], [], false)
        .length,
      'Helianthemum canadense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Helianthemum nummularium']], [], false)
        .length,
      'Helianthemum nummularium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus annuus']], [], false).length,
      'Helianthus annuus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus doronicoides']], [], false)
        .length,
      'Helianthus doronicoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus giganteus']], [], false)
        .length,
      'Helianthus giganteus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus laetiflorus']], [], false)
        .length,
      'Helianthus laetiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Helianthus lenticularis']], [], false)
        .length,
      'Helianthus lenticularis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus maximilianii']], [], false)
        .length,
      'Helianthus maximilianii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus petiolaris']], [], false)
        .length,
      'Helianthus petiolaris'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus strumosus']], [], false)
        .length,
      'Helianthus strumosus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helianthus tuberosus']], [], false)
        .length,
      'Helianthus tuberosus'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Helichrysum apiculatum']], [], false)
        .length,
      'Helichrysum apiculatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Helichrysum arenarium']], [], false)
        .length,
      'Helichrysum arenarium'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Helichrysum italicum']], [], false)
        .length,
      'Helichrysum italicum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Helichrysum orientale']], [], false)
        .length,
      'Helichrysum orientale'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Helichrysum stoechas']], [], false)
        .length,
      'Helichrysum stoechas'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Heliotropium arborescens']], [], false)
        .length,
      'Heliotropium arborescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Heliotropium ellipticum']], [], false)
        .length,
      'Heliotropium ellipticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Helleborus foetidus']], [], false)
        .length,
      'Helleborus foetidus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Helleborus niger']], [], false).length,
      'Helleborus niger'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Helleborus viridis']], [], false)
        .length,
      'Helleborus viridis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Helwingia chinensis']], [], false)
        .length,
      'Helwingia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Helwingia himalaica']], [], false)
        .length,
      'Helwingia himalaica'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Helwingia japonica']], [], false)
        .length,
      'Helwingia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Helwingia liukiuensis']], [], false)
        .length,
      'Helwingia liukiuensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis altissima']], [], false)
        .length,
      'Hemerocallis altissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis aurantiaca']], [], false)
        .length,
      'Hemerocallis aurantiaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis bulbiferum']], [], false)
        .length,
      'Hemerocallis bulbiferum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis citrina']], [], false)
        .length,
      'Hemerocallis citrina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis coreana']], [], false)
        .length,
      'Hemerocallis coreana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis darrowiana']], [], false)
        .length,
      'Hemerocallis darrowiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis dumortieri']], [], false)
        .length,
      'Hemerocallis dumortieri'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis exaltata']], [], false)
        .length,
      'Hemerocallis exaltata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis forrestii']], [], false)
        .length,
      'Hemerocallis forrestii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis fulva']], [], false)
        .length,
      'Hemerocallis fulva'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Hemerocallis fulva longituba']],
        [],
        false
      ).length,
      'Hemerocallis fulva longituba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis graminea']], [], false)
        .length,
      'Hemerocallis graminea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis hakunensis']], [], false)
        .length,
      'Hemerocallis hakunensis'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Hemerocallis lilioasphodelus']],
        [],
        false
      ).length,
      'Hemerocallis lilioasphodelus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis littorea']], [], false)
        .length,
      'Hemerocallis littorea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis micrantha']], [], false)
        .length,
      'Hemerocallis micrantha'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Hemerocallis middendorffii']],
        [],
        false
      ).length,
      'Hemerocallis middendorffii'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Hemerocallis middendorffii esculenta']],
        [],
        false
      ).length,
      'Hemerocallis middendorffii esculenta'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis minor']], [], false)
        .length,
      'Hemerocallis minor'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis multiflora']], [], false)
        .length,
      'Hemerocallis multiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis pedicellata']], [], false)
        .length,
      'Hemerocallis pedicellata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis plicata']], [], false)
        .length,
      'Hemerocallis plicata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemerocallis  species']], [], false)
        .length,
      'Hemerocallis  species'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis thunbergii']], [], false)
        .length,
      'Hemerocallis thunbergii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hemerocallis yezoensis']], [], false)
        .length,
      'Hemerocallis yezoensis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Hemiphragma heterophyllum']], [], false)
        .length,
      'Hemiphragma heterophyllum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Hemiptelea davidii']], [], false)
        .length,
      'Hemiptelea davidii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemizonia fascicuata']], [], false)
        .length,
      'Hemizonia fascicuata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hemizonia luzulifolia']], [], false)
        .length,
      'Hemizonia luzulifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hepatica acutiloba']], [], false)
        .length,
      'Hepatica acutiloba'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hepatica americana']], [], false)
        .length,
      'Hepatica americana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hepatica nobilis']], [], false).length,
      'Hepatica nobilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heracleum lallii']], [], false).length,
      'Heracleum lallii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heracleum moellendorfii']], [], false)
        .length,
      'Heracleum moellendorfii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heracleum pubescens']], [], false)
        .length,
      'Heracleum pubescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Heracleum sphondylium']], [], false)
        .length,
      'Heracleum sphondylium'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Heracleum sphondylium montanum']],
        [],
        false
      ).length,
      'Heracleum sphondylium montanum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Heracleum sphondylium sibiricum']],
        [],
        false
      ).length,
      'Heracleum sphondylium sibiricum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heracleum tuberosum']], [], false)
        .length,
      'Heracleum tuberosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heracleum wallichii']], [], false)
        .length,
      'Heracleum wallichii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Herniaria glabra']], [], false).length,
      'Herniaria glabra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Herniaria hirsuta']], [], false).length,
      'Herniaria hirsuta'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Herpetospermum pedunculosum']],
        [],
        false
      ).length,
      'Herpetospermum pedunculosum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Hesperaloe funifera']], [], false)
        .length,
      'Hesperaloe funifera'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Hesperaloe nocturna']], [], false)
        .length,
      'Hesperaloe nocturna'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Hesperantha baurii']], [], false)
        .length,
      'Hesperantha baurii'
    );
    assert.equal(
      6958,
      filterAndSort(crops, [nameToCrop['Hesperis matronalis']], [], false)
        .length,
      'Hesperis matronalis'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Hesperocallis undulata']], [], false)
        .length,
      'Hesperocallis undulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Heteropappus hispidus']], [], false)
        .length,
      'Heteropappus hispidus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Heuchera americana']], [], false)
        .length,
      'Heuchera americana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Heuchera cylindrica']], [], false)
        .length,
      'Heuchera cylindrica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Heuchera diversifolia']], [], false)
        .length,
      'Heuchera diversifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Heuchera glabra']], [], false).length,
      'Heuchera glabra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Heuchera micrantha']], [], false)
        .length,
      'Heuchera micrantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Heuchera sanguinea']], [], false)
        .length,
      'Heuchera sanguinea'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Heuchera versicolor']], [], false)
        .length,
      'Heuchera versicolor'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus acetosella']], [], false)
        .length,
      'Hibiscus acetosella'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus cannabinus']], [], false)
        .length,
      'Hibiscus cannabinus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus diversifolius']], [], false)
        .length,
      'Hibiscus diversifolius'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus heterophyllus']], [], false)
        .length,
      'Hibiscus heterophyllus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hibiscus moscheutos']], [], false)
        .length,
      'Hibiscus moscheutos'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Hibiscus mutabilis']], [], false)
        .length,
      'Hibiscus mutabilis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Hibiscus rosa-sinensis']], [], false)
        .length,
      'Hibiscus rosa-sinensis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus sabdariffa']], [], false)
        .length,
      'Hibiscus sabdariffa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hibiscus sinosyriacus']], [], false)
        .length,
      'Hibiscus sinosyriacus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hibiscus syriacus']], [], false).length,
      'Hibiscus syriacus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Hibiscus trionum']], [], false).length,
      'Hibiscus trionum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hieracium albertinum']], [], false)
        .length,
      'Hieracium albertinum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Hieracium umbellatum']], [], false)
        .length,
      'Hieracium umbellatum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Hieracium venosum']], [], false).length,
      'Hieracium venosum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hierochloe odorata']], [], false)
        .length,
      'Hierochloe odorata'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Hilaria jamesii']], [], false).length,
      'Hilaria jamesii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Himalayacalamus asper']], [], false)
        .length,
      'Himalayacalamus asper'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Himalayacalamus brevinodus']],
        [],
        false
      ).length,
      'Himalayacalamus brevinodus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Himalayacalamus cupreus']], [], false)
        .length,
      'Himalayacalamus cupreus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Himalayacalamus falconeri']], [], false)
        .length,
      'Himalayacalamus falconeri'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Himalayacalamus fimbriatus']],
        [],
        false
      ).length,
      'Himalayacalamus fimbriatus'
    );
    assert.equal(
      7205,
      filterAndSort(
        crops,
        [nameToCrop['Himalayacalamus hookerianus']],
        [],
        false
      ).length,
      'Himalayacalamus hookerianus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hippophae goniocarpa']], [], false)
        .length,
      'Hippophae goniocarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hippophae gyantsensis']], [], false)
        .length,
      'Hippophae gyantsensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hippophae neurocarpa']], [], false)
        .length,
      'Hippophae neurocarpa'
    );
    assert.equal(
      7124,
      filterAndSort(crops, [nameToCrop['Hippophae rhamnoides']], [], false)
        .length,
      'Hippophae rhamnoides'
    );
    assert.equal(
      7124,
      filterAndSort(
        crops,
        [nameToCrop['Hippophae rhamnoides turkestanica']],
        [],
        false
      ).length,
      'Hippophae rhamnoides turkestanica'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Hippophae salicifolia']], [], false)
        .length,
      'Hippophae salicifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hippophae sinensis']], [], false)
        .length,
      'Hippophae sinensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Hippophae tibetana']], [], false)
        .length,
      'Hippophae tibetana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Hippuris vulgaris']], [], false).length,
      'Hippuris vulgaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hirschfeldia incana']], [], false)
        .length,
      'Hirschfeldia incana'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Hoffmannseggia densiflora']], [], false)
        .length,
      'Hoffmannseggia densiflora'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Hoheria populnea']], [], false).length,
      'Hoheria populnea'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Hoheria sexstylosa']], [], false)
        .length,
      'Hoheria sexstylosa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Holboellia angustifolia']], [], false)
        .length,
      'Holboellia angustifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Holboellia coriacea']], [], false)
        .length,
      'Holboellia coriacea'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Holboellia grandiflora']], [], false)
        .length,
      'Holboellia grandiflora'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Holboellia latifolia']], [], false)
        .length,
      'Holboellia latifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Holodiscus discolor']], [], false)
        .length,
      'Holodiscus discolor'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Holodiscus dumosus']], [], false)
        .length,
      'Holodiscus dumosus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hololeion krameri']], [], false).length,
      'Hololeion krameri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hololeion maximowiczii']], [], false)
        .length,
      'Hololeion maximowiczii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Homoranthus flavescens']], [], false)
        .length,
      'Homoranthus flavescens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Honckenya peploides']], [], false)
        .length,
      'Honckenya peploides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum bulbosum']], [], false).length,
      'Hordeum bulbosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum deficiens']], [], false).length,
      'Hordeum deficiens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hordeum distichon']], [], false).length,
      'Hordeum distichon'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum hexastichon']], [], false)
        .length,
      'Hordeum hexastichon'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum intermedium']], [], false)
        .length,
      'Hordeum intermedium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum jubatum']], [], false).length,
      'Hordeum jubatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum murinum']], [], false).length,
      'Hordeum murinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum trifurcatum']], [], false)
        .length,
      'Hordeum trifurcatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hordeum vulgare']], [], false).length,
      'Hordeum vulgare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hordeum zeocriton']], [], false).length,
      'Hordeum zeocriton'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta clausa']], [], false).length,
      'Hosta clausa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hosta clavata']], [], false).length,
      'Hosta clavata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta crispula']], [], false).length,
      'Hosta crispula'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hosta longipes']], [], false).length,
      'Hosta longipes'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta longissima']], [], false).length,
      'Hosta longissima'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta montana']], [], false).length,
      'Hosta montana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hosta nigrescens']], [], false).length,
      'Hosta nigrescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta plantaginae']], [], false).length,
      'Hosta plantaginae'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta rectifolia']], [], false).length,
      'Hosta rectifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta sieboldiana']], [], false).length,
      'Hosta sieboldiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta sieboldii']], [], false).length,
      'Hosta sieboldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hosta  species']], [], false).length,
      'Hosta  species'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hosta tardiva']], [], false).length,
      'Hosta tardiva'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta undulata']], [], false).length,
      'Hosta undulata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hosta ventricosa']], [], false).length,
      'Hosta ventricosa'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Hottonia palustris']], [], false)
        .length,
      'Hottonia palustris'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Houttuynia cordata']], [], false)
        .length,
      'Houttuynia cordata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hovenia dulcis']], [], false).length,
      'Hovenia dulcis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Humulus japonicus']], [], false).length,
      'Humulus japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Humulus lupulus']], [], false).length,
      'Humulus lupulus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hyacinthoides nonscripta']], [], false)
        .length,
      'Hyacinthoides nonscripta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hyacinthus orientalis']], [], false)
        .length,
      'Hyacinthus orientalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hydrangea anomala']], [], false).length,
      'Hydrangea anomala'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Hydrangea arborescens']], [], false)
        .length,
      'Hydrangea arborescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hydrangea aspera']], [], false).length,
      'Hydrangea aspera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hydrangea hirta']], [], false).length,
      'Hydrangea hirta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hydrangea macrophylla']], [], false)
        .length,
      'Hydrangea macrophylla'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Hydrangea paniculata']], [], false)
        .length,
      'Hydrangea paniculata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hydrangea serrata']], [], false).length,
      'Hydrangea serrata'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Hydrangea serrata amagiana']],
        [],
        false
      ).length,
      'Hydrangea serrata amagiana'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Hydrangea serrata thunbergii']],
        [],
        false
      ).length,
      'Hydrangea serrata thunbergii'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Hydrastis canadensis']], [], false)
        .length,
      'Hydrastis canadensis'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Hydrilla verticillata']], [], false)
        .length,
      'Hydrilla verticillata'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Hydrocotyle sibthorpioides']],
        [],
        false
      ).length,
      'Hydrocotyle sibthorpioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hydrocotyle vulgaris']], [], false)
        .length,
      'Hydrocotyle vulgaris'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hydrophyllum canadense']], [], false)
        .length,
      'Hydrophyllum canadense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hydrophyllum capitatum']], [], false)
        .length,
      'Hydrophyllum capitatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hydrophyllum occidentale']], [], false)
        .length,
      'Hydrophyllum occidentale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hydrophyllum tenuipes']], [], false)
        .length,
      'Hydrophyllum tenuipes'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hydrophyllum virginianum']], [], false)
        .length,
      'Hydrophyllum virginianum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Hymenanthera dentata']], [], false)
        .length,
      'Hymenanthera dentata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hymenopappus lugens']], [], false)
        .length,
      'Hymenopappus lugens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hymenoxys richardsonii']], [], false)
        .length,
      'Hymenoxys richardsonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hyoscyamus albus']], [], false).length,
      'Hyoscyamus albus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Hyoscyamus aureus']], [], false).length,
      'Hyoscyamus aureus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hyoscyamus niger']], [], false).length,
      'Hyoscyamus niger'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Hypericum androsaemum']], [], false)
        .length,
      'Hypericum androsaemum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Hypericum ascyron']], [], false).length,
      'Hypericum ascyron'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum attenuatum']], [], false)
        .length,
      'Hypericum attenuatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum bellum']], [], false).length,
      'Hypericum bellum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Hypericum calycinum']], [], false)
        .length,
      'Hypericum calycinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum erectum']], [], false).length,
      'Hypericum erectum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Hypericum forrestii']], [], false)
        .length,
      'Hypericum forrestii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum hypericoides']], [], false)
        .length,
      'Hypericum hypericoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum japonicum']], [], false)
        .length,
      'Hypericum japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum kamtschaticum']], [], false)
        .length,
      'Hypericum kamtschaticum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Hypericum monogynum']], [], false)
        .length,
      'Hypericum monogynum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypericum patulum']], [], false).length,
      'Hypericum patulum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Hypericum perforatum']], [], false)
        .length,
      'Hypericum perforatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Hypericum sampsonii']], [], false)
        .length,
      'Hypericum sampsonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hypochoeris apargioides']], [], false)
        .length,
      'Hypochoeris apargioides'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Hypochoeris glabra']], [], false)
        .length,
      'Hypochoeris glabra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypochoeris incana']], [], false)
        .length,
      'Hypochoeris incana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Hypochoeris maculata']], [], false)
        .length,
      'Hypochoeris maculata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Hypochoeris radicata']], [], false)
        .length,
      'Hypochoeris radicata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hypochoeris scorzonerae']], [], false)
        .length,
      'Hypochoeris scorzonerae'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Hypoxis hygrometrica']], [], false)
        .length,
      'Hypoxis hygrometrica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Hypoxis pratensis']], [], false).length,
      'Hypoxis pratensis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Hyssopus officinalis']], [], false)
        .length,
      'Hyssopus officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Iberis amara']], [], false).length,
      'Iberis amara'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Iberis umbellata']], [], false).length,
      'Iberis umbellata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Idesia polycarpa']], [], false).length,
      'Idesia polycarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex aculeolata']], [], false).length,
      'Ilex aculeolata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Ilex aquifolium']], [], false).length,
      'Ilex aquifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex asprolla']], [], false).length,
      'Ilex asprolla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex cassine']], [], false).length,
      'Ilex cassine'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex chapaensis']], [], false).length,
      'Ilex chapaensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex coriacea']], [], false).length,
      'Ilex coriacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex cornuta']], [], false).length,
      'Ilex cornuta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex crenata']], [], false).length,
      'Ilex crenata'
    );
    assert.equal(
      6962,
      filterAndSort(crops, [nameToCrop['Ilex glabra']], [], false).length,
      'Ilex glabra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex integra']], [], false).length,
      'Ilex integra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex latifolia']], [], false).length,
      'Ilex latifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex macropoda']], [], false).length,
      'Ilex macropoda'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ilex opaca']], [], false).length,
      'Ilex opaca'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ilex pedunculosa']], [], false).length,
      'Ilex pedunculosa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ilex pubescens']], [], false).length,
      'Ilex pubescens'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ilex purpurea']], [], false).length,
      'Ilex purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex rotunda']], [], false).length,
      'Ilex rotunda'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Ilex verticillata']], [], false).length,
      'Ilex verticillata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex vomitoria']], [], false).length,
      'Ilex vomitoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex x altaclerensis']], [], false)
        .length,
      'Ilex x altaclerensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ilex yunnanensis']], [], false).length,
      'Ilex yunnanensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Illicium anisatum']], [], false).length,
      'Illicium anisatum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Illicium floridanum']], [], false)
        .length,
      'Illicium floridanum'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Illicium verum']], [], false).length,
      'Illicium verum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens aurella']], [], false).length,
      'Impatiens aurella'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens balsamina']], [], false)
        .length,
      'Impatiens balsamina'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Impatiens capensis']], [], false)
        .length,
      'Impatiens capensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens ecalcarata']], [], false)
        .length,
      'Impatiens ecalcarata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens edgeworthii']], [], false)
        .length,
      'Impatiens edgeworthii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens glandulifera']], [], false)
        .length,
      'Impatiens glandulifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens noli-tangere']], [], false)
        .length,
      'Impatiens noli-tangere'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens occidentalis']], [], false)
        .length,
      'Impatiens occidentalis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Impatiens pallida']], [], false).length,
      'Impatiens pallida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens parviflora']], [], false)
        .length,
      'Impatiens parviflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Impatiens sulcata']], [], false).length,
      'Impatiens sulcata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens textori']], [], false).length,
      'Impatiens textori'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Impatiens tingens']], [], false).length,
      'Impatiens tingens'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Imperata cylindrica']], [], false)
        .length,
      'Imperata cylindrica'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Incarvillea delavayi']], [], false)
        .length,
      'Incarvillea delavayi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Incarvillea sinensis']], [], false)
        .length,
      'Incarvillea sinensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Indigofera cassioides']], [], false)
        .length,
      'Indigofera cassioides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Indigofera decora']], [], false).length,
      'Indigofera decora'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Indigofera hebepetala']], [], false)
        .length,
      'Indigofera hebepetala'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Indigofera heterantha']], [], false)
        .length,
      'Indigofera heterantha'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Indigofera kirilowii']], [], false)
        .length,
      'Indigofera kirilowii'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Indigofera pseudotinctoria']],
        [],
        false
      ).length,
      'Indigofera pseudotinctoria'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Indocalamus latifolius']], [], false)
        .length,
      'Indocalamus latifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Inula britannica']], [], false).length,
      'Inula britannica'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Inula britannica chinensis']],
        [],
        false
      ).length,
      'Inula britannica chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Inula cappa']], [], false).length,
      'Inula cappa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Inula conyza']], [], false).length,
      'Inula conyza'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Inula crithmoides']], [], false).length,
      'Inula crithmoides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Inula helenium']], [], false).length,
      'Inula helenium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Inula racemosa']], [], false).length,
      'Inula racemosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Inula royleana']], [], false).length,
      'Inula royleana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Ipomoea alba']], [], false).length,
      'Ipomoea alba'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Ipomoea batatas']], [], false).length,
      'Ipomoea batatas'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ipomoea jalapa']], [], false).length,
      'Ipomoea jalapa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ipomoea leptophylla']], [], false)
        .length,
      'Ipomoea leptophylla'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ipomoea nil']], [], false).length,
      'Ipomoea nil'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ipomoea pandurata']], [], false).length,
      'Ipomoea pandurata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ipomoea purpurea']], [], false).length,
      'Ipomoea purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ipomoea sagittata']], [], false).length,
      'Ipomoea sagittata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ipomoea tricolor']], [], false).length,
      'Ipomoea tricolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ipomopsis aggregata']], [], false)
        .length,
      'Ipomopsis aggregata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ipomopsis congesta']], [], false)
        .length,
      'Ipomopsis congesta'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Iris cristata']], [], false).length,
      'Iris cristata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Iris decora']], [], false).length,
      'Iris decora'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Iris douglasiana']], [], false).length,
      'Iris douglasiana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Iris ensata']], [], false).length,
      'Iris ensata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Iris filifolia']], [], false).length,
      'Iris filifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Iris foetidissima']], [], false).length,
      'Iris foetidissima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Iris germanica']], [], false).length,
      'Iris germanica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Iris germanica florentina']], [], false)
        .length,
      'Iris germanica florentina'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Iris japonica']], [], false).length,
      'Iris japonica'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Iris kemaonensis']], [], false).length,
      'Iris kemaonensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Iris macrosiphon']], [], false).length,
      'Iris macrosiphon'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Iris missouriensis']], [], false)
        .length,
      'Iris missouriensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Iris pallida']], [], false).length,
      'Iris pallida'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Iris pseudacorus']], [], false).length,
      'Iris pseudacorus'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Iris purdyi']], [], false).length,
      'Iris purdyi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Iris sanguinea']], [], false).length,
      'Iris sanguinea'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Iris setosa']], [], false).length,
      'Iris setosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Iris sibirica']], [], false).length,
      'Iris sibirica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Iris tectorum']], [], false).length,
      'Iris tectorum'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Iris tenax']], [], false).length,
      'Iris tenax'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Iris versicolor']], [], false).length,
      'Iris versicolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Isatis glauca']], [], false).length,
      'Isatis glauca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Isatis japonica']], [], false).length,
      'Isatis japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Isatis lusitanica']], [], false).length,
      'Isatis lusitanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Isatis tinctoria']], [], false).length,
      'Isatis tinctoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Isodon inflexus']], [], false).length,
      'Isodon inflexus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Isodon japonicus']], [], false).length,
      'Isodon japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Isodon longitubus']], [], false).length,
      'Isodon longitubus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Isodon rugosus']], [], false).length,
      'Isodon rugosus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Isopogon ceratophyllus']], [], false)
        .length,
      'Isopogon ceratophyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Itea japonica']], [], false).length,
      'Itea japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Iva axillaris']], [], false).length,
      'Iva axillaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Iva xanthifolia']], [], false).length,
      'Iva xanthifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ixeris chinensis']], [], false).length,
      'Ixeris chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris dentata']], [], false).length,
      'Ixeris dentata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris japonica']], [], false).length,
      'Ixeris japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris lanceolata']], [], false).length,
      'Ixeris lanceolata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ixeris polycephala']], [], false)
        .length,
      'Ixeris polycephala'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris repens']], [], false).length,
      'Ixeris repens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris sonchfolia']], [], false).length,
      'Ixeris sonchfolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ixeris stolonifera']], [], false)
        .length,
      'Ixeris stolonifera'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Jasminum humile']], [], false).length,
      'Jasminum humile'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Jasminum nudiflorum']], [], false)
        .length,
      'Jasminum nudiflorum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Jasminum odoratissimum']], [], false)
        .length,
      'Jasminum odoratissimum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Jasminum officinale']], [], false)
        .length,
      'Jasminum officinale'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Jeffersonia diphylla']], [], false)
        .length,
      'Jeffersonia diphylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Jeffersonia dubia']], [], false).length,
      'Jeffersonia dubia'
    );
    assert.equal(
      7072,
      filterAndSort(crops, [nameToCrop['Jovibarba sobolifera']], [], false)
        .length,
      'Jovibarba sobolifera'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Jubaea chilensis']], [], false).length,
      'Jubaea chilensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans ailanthifolia']], [], false)
        .length,
      'Juglans ailanthifolia'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Juglans ailanthifolia cordiformis']],
        [],
        false
      ).length,
      'Juglans ailanthifolia cordiformis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Juglans californica']], [], false)
        .length,
      'Juglans californica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans cathayensis']], [], false)
        .length,
      'Juglans cathayensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans cinerea']], [], false).length,
      'Juglans cinerea'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Juglans hindsii']], [], false).length,
      'Juglans hindsii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans intermedia']], [], false)
        .length,
      'Juglans intermedia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Juglans major']], [], false).length,
      'Juglans major'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans mandschurica']], [], false)
        .length,
      'Juglans mandschurica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Juglans microcarpa']], [], false)
        .length,
      'Juglans microcarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans nigra']], [], false).length,
      'Juglans nigra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans regia']], [], false).length,
      'Juglans regia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans regia fallax']], [], false)
        .length,
      'Juglans regia fallax'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans regia kamaonia']], [], false)
        .length,
      'Juglans regia kamaonia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juglans sinensis']], [], false).length,
      'Juglans sinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juglans x bisbyi']], [], false).length,
      'Juglans x bisbyi'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Juncus acutus']], [], false).length,
      'Juncus acutus'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Juncus balticus']], [], false).length,
      'Juncus balticus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Juncus conglomeratus']], [], false)
        .length,
      'Juncus conglomeratus'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Juncus dudleyi']], [], false).length,
      'Juncus dudleyi'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Juncus effusus']], [], false).length,
      'Juncus effusus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Juncus inflexus']], [], false).length,
      'Juncus inflexus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Juncus procerus']], [], false).length,
      'Juncus procerus'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Juncus tenuis']], [], false).length,
      'Juncus tenuis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Juniperus ashei']], [], false).length,
      'Juniperus ashei'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Juniperus californica']], [], false)
        .length,
      'Juniperus californica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Juniperus chinensis']], [], false)
        .length,
      'Juniperus chinensis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Juniperus communis']], [], false)
        .length,
      'Juniperus communis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Juniperus communis nana']], [], false)
        .length,
      'Juniperus communis nana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus conferta']], [], false)
        .length,
      'Juniperus conferta'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Juniperus deppeana']], [], false)
        .length,
      'Juniperus deppeana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Juniperus drupacea']], [], false)
        .length,
      'Juniperus drupacea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Juniperus excelsa']], [], false).length,
      'Juniperus excelsa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus horizontalis']], [], false)
        .length,
      'Juniperus horizontalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus monosperma']], [], false)
        .length,
      'Juniperus monosperma'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus occidentalis']], [], false)
        .length,
      'Juniperus occidentalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus osteosperma']], [], false)
        .length,
      'Juniperus osteosperma'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Juniperus oxycedrus']], [], false)
        .length,
      'Juniperus oxycedrus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus recurva']], [], false).length,
      'Juniperus recurva'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus rigida']], [], false).length,
      'Juniperus rigida'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Juniperus sabina']], [], false).length,
      'Juniperus sabina'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Juniperus scopulorum']], [], false)
        .length,
      'Juniperus scopulorum'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Juniperus silicicola']], [], false)
        .length,
      'Juniperus silicicola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus squamata']], [], false)
        .length,
      'Juniperus squamata'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Juniperus tetragona']], [], false)
        .length,
      'Juniperus tetragona'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Juniperus virginiana']], [], false)
        .length,
      'Juniperus virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Jurinea dolomiaea']], [], false).length,
      'Jurinea dolomiaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Jussieva repens']], [], false).length,
      'Jussieva repens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Justicia gendarussa']], [], false)
        .length,
      'Justicia gendarussa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Justicia procumbens']], [], false)
        .length,
      'Justicia procumbens'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Kadsura coccinea']], [], false).length,
      'Kadsura coccinea'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Kadsura heteroclita']], [], false)
        .length,
      'Kadsura heteroclita'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Kadsura japonica']], [], false).length,
      'Kadsura japonica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Kadsura longepedunculata']], [], false)
        .length,
      'Kadsura longepedunculata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Kadsura oblongifolia']], [], false)
        .length,
      'Kadsura oblongifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Kalimeris incisa']], [], false).length,
      'Kalimeris incisa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Kalimeris laureana']], [], false)
        .length,
      'Kalimeris laureana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Kalimeris pinnatifida']], [], false)
        .length,
      'Kalimeris pinnatifida'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Kalmia angustifolia']], [], false)
        .length,
      'Kalmia angustifolia'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Kalmia latifolia']], [], false).length,
      'Kalmia latifolia'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Kalmia polifolia']], [], false).length,
      'Kalmia polifolia'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Kalopanax sciadophylloides']],
        [],
        false
      ).length,
      'Kalopanax sciadophylloides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Kalopanax septemlobus']], [], false)
        .length,
      'Kalopanax septemlobus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Kerria japonica']], [], false).length,
      'Kerria japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Keteleeria davidiana']], [], false)
        .length,
      'Keteleeria davidiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kickxia elatine']], [], false).length,
      'Kickxia elatine'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Kinugasa japonica']], [], false).length,
      'Kinugasa japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kirkophytum lyallii']], [], false)
        .length,
      'Kirkophytum lyallii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Knautia arvensis']], [], false).length,
      'Knautia arvensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Knightia excelsa']], [], false).length,
      'Knightia excelsa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Kniphofia uvaria']], [], false).length,
      'Kniphofia uvaria'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Koeleria macrantha']], [], false)
        .length,
      'Koeleria macrantha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Koelreuteria paniculata']], [], false)
        .length,
      'Koelreuteria paniculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kosteletzkya pentacarpos']], [], false)
        .length,
      'Kosteletzkya pentacarpos'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kuhnia eupatorioides']], [], false)
        .length,
      'Kuhnia eupatorioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kummerowia stipulacea']], [], false)
        .length,
      'Kummerowia stipulacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kummerowia striata']], [], false)
        .length,
      'Kummerowia striata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kunzea muelleri']], [], false).length,
      'Kunzea muelleri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Kunzea pomifera']], [], false).length,
      'Kunzea pomifera'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Lablab purpureus']], [], false).length,
      'Lablab purpureus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Laburnum alpinum']], [], false).length,
      'Laburnum alpinum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Laburnum anagyroides']], [], false)
        .length,
      'Laburnum anagyroides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lachnanthes carolina']], [], false)
        .length,
      'Lachnanthes carolina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lactuca biennis']], [], false).length,
      'Lactuca biennis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca canadensis']], [], false)
        .length,
      'Lactuca canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca capensis']], [], false).length,
      'Lactuca capensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca debilis']], [], false).length,
      'Lactuca debilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca formosana']], [], false).length,
      'Lactuca formosana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca indica']], [], false).length,
      'Lactuca indica'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Lactuca indica dracoglossa']],
        [],
        false
      ).length,
      'Lactuca indica dracoglossa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca indica laciniata']], [], false)
        .length,
      'Lactuca indica laciniata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca ludoviciana']], [], false)
        .length,
      'Lactuca ludoviciana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca perennis']], [], false).length,
      'Lactuca perennis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca pulchella']], [], false).length,
      'Lactuca pulchella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca quercina']], [], false).length,
      'Lactuca quercina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca raddeana']], [], false).length,
      'Lactuca raddeana'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Lactuca sativa']], [], false).length,
      'Lactuca sativa'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Lactuca sativa angustana']], [], false)
        .length,
      'Lactuca sativa angustana'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Lactuca sativa capitata']], [], false)
        .length,
      'Lactuca sativa capitata'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Lactuca sativa crispa']], [], false)
        .length,
      'Lactuca sativa crispa'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Lactuca sativa longifolia']], [], false)
        .length,
      'Lactuca sativa longifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca serriola']], [], false).length,
      'Lactuca serriola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca sibirica']], [], false).length,
      'Lactuca sibirica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca triangulata']], [], false)
        .length,
      'Lactuca triangulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lactuca virosa']], [], false).length,
      'Lactuca virosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lagarostrobus colensoi']], [], false)
        .length,
      'Lagarostrobus colensoi'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lagarostrobus franklinii']], [], false)
        .length,
      'Lagarostrobus franklinii'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Lagenaria siceraria']], [], false)
        .length,
      'Lagenaria siceraria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lagerstroemia indica']], [], false)
        .length,
      'Lagerstroemia indica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lagochilus inebrians']], [], false)
        .length,
      'Lagochilus inebrians'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lagoecia cuminoides']], [], false)
        .length,
      'Lagoecia cuminoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lallemantia iberica']], [], false)
        .length,
      'Lallemantia iberica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lamium album']], [], false).length,
      'Lamium album'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lamium amplexicaule']], [], false)
        .length,
      'Lamium amplexicaule'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lamium galeobdolon']], [], false)
        .length,
      'Lamium galeobdolon'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lamium purpureum']], [], false).length,
      'Lamium purpureum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lancea tibetica']], [], false).length,
      'Lancea tibetica'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Lapageria rosea']], [], false).length,
      'Lapageria rosea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laportea bulbifera']], [], false)
        .length,
      'Laportea bulbifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laportea canadensis']], [], false)
        .length,
      'Laportea canadensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laportea macrostachya']], [], false)
        .length,
      'Laportea macrostachya'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Lapsana apogonoides']], [], false)
        .length,
      'Lapsana apogonoides'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Lapsana communis']], [], false).length,
      'Lapsana communis'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Lapsana humilis']], [], false).length,
      'Lapsana humilis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Lardizabala biternata']], [], false)
        .length,
      'Lardizabala biternata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laretia acaulis']], [], false).length,
      'Laretia acaulis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Larix decidua']], [], false).length,
      'Larix decidua'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Larix gmelinii']], [], false).length,
      'Larix gmelinii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Larix kaempferi']], [], false).length,
      'Larix kaempferi'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Larix laricina']], [], false).length,
      'Larix laricina'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Larix lyallii']], [], false).length,
      'Larix lyallii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Larix occidentalis']], [], false)
        .length,
      'Larix occidentalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Larix potaninii']], [], false).length,
      'Larix potaninii'
    );
    assert.equal(
      6009,
      filterAndSort(crops, [nameToCrop['Larix sibirica']], [], false).length,
      'Larix sibirica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Larix x marschlinsii']], [], false)
        .length,
      'Larix x marschlinsii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Larrea tridentata']], [], false).length,
      'Larrea tridentata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laser trilobum']], [], false).length,
      'Laser trilobum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laserpitium latifolium']], [], false)
        .length,
      'Laserpitium latifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laserpitium prutenicum']], [], false)
        .length,
      'Laserpitium prutenicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Laserpitium siler']], [], false).length,
      'Laserpitium siler'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lasthenia glabrata']], [], false)
        .length,
      'Lasthenia glabrata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus alatus']], [], false).length,
      'Lathyrus alatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lathyrus aphaca']], [], false).length,
      'Lathyrus aphaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus cicera']], [], false).length,
      'Lathyrus cicera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus davidii']], [], false).length,
      'Lathyrus davidii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lathyrus japonicus']], [], false)
        .length,
      'Lathyrus japonicus'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Lathyrus japonicus maritimus']],
        [],
        false
      ).length,
      'Lathyrus japonicus maritimus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus latifolius']], [], false)
        .length,
      'Lathyrus latifolius'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Lathyrus nervosus']], [], false).length,
      'Lathyrus nervosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lathyrus ochroleucas']], [], false)
        .length,
      'Lathyrus ochroleucas'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lathyrus ochrus']], [], false).length,
      'Lathyrus ochrus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lathyrus odoratus']], [], false).length,
      'Lathyrus odoratus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Lathyrus ornatus']], [], false).length,
      'Lathyrus ornatus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lathyrus palustris']], [], false)
        .length,
      'Lathyrus palustris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus polymorphus']], [], false)
        .length,
      'Lathyrus polymorphus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lathyrus pratensis']], [], false)
        .length,
      'Lathyrus pratensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus quinquenervius']], [], false)
        .length,
      'Lathyrus quinquenervius'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Lathyrus sativus']], [], false).length,
      'Lathyrus sativus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lathyrus tuberosus']], [], false)
        .length,
      'Lathyrus tuberosus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Laurelia novae-zealandiae']], [], false)
        .length,
      'Laurelia novae-zealandiae'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Laurelia sempervirens']], [], false)
        .length,
      'Laurelia sempervirens'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Laurus nobilis']], [], false).length,
      'Laurus nobilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lavandula angustifolia']], [], false)
        .length,
      'Lavandula angustifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Lavandula dentata']], [], false).length,
      'Lavandula dentata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lavandula latifolia']], [], false)
        .length,
      'Lavandula latifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Lavandula stoechas']], [], false)
        .length,
      'Lavandula stoechas'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lavandula x intermedia']], [], false)
        .length,
      'Lavandula x intermedia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lavatera arborea']], [], false).length,
      'Lavatera arborea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lavatera cachemiriana']], [], false)
        .length,
      'Lavatera cachemiriana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lavatera plebeia']], [], false).length,
      'Lavatera plebeia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lavatera species']], [], false).length,
      'Lavatera species'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lavatera thuringiaca']], [], false)
        .length,
      'Lavatera thuringiaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lavatera trimestris']], [], false)
        .length,
      'Lavatera trimestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Layia glandulosa']], [], false).length,
      'Layia glandulosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Layia platyglossa']], [], false).length,
      'Layia platyglossa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ledebouriella seseloides']], [], false)
        .length,
      'Ledebouriella seseloides'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Ledum columbianum']], [], false).length,
      'Ledum columbianum'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Ledum glandulosum']], [], false).length,
      'Ledum glandulosum'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Ledum groenlandicum']], [], false)
        .length,
      'Ledum groenlandicum'
    );
    assert.equal(
      6490,
      filterAndSort(crops, [nameToCrop['Ledum palustre']], [], false).length,
      'Ledum palustre'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Legousia pentagonia']], [], false)
        .length,
      'Legousia pentagonia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Legousia speculum-veneris']], [], false)
        .length,
      'Legousia speculum-veneris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Leibnitzia anandria']], [], false)
        .length,
      'Leibnitzia anandria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leichhardtia leptophylla']], [], false)
        .length,
      'Leichhardtia leptophylla'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Leitneria floridana']], [], false)
        .length,
      'Leitneria floridana'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Lemna minor']], [], false).length,
      'Lemna minor'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Lemna trisulca']], [], false).length,
      'Lemna trisulca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lens culinaris']], [], false).length,
      'Lens culinaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lens ervoides']], [], false).length,
      'Lens ervoides'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Leontice leontopetalum']], [], false)
        .length,
      'Leontice leontopetalum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Leontodon hispidus']], [], false)
        .length,
      'Leontodon hispidus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Leontopodium alpinum']], [], false)
        .length,
      'Leontopodium alpinum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Leontopodium discolor']], [], false)
        .length,
      'Leontopodium discolor'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Leonurus cardiaca']], [], false).length,
      'Leonurus cardiaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leonurus japonicus']], [], false)
        .length,
      'Leonurus japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leonurus macranthus']], [], false)
        .length,
      'Leonurus macranthus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leonurus sibiricus']], [], false)
        .length,
      'Leonurus sibiricus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium apetalum']], [], false).length,
      'Lepidium apetalum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium campestre']], [], false)
        .length,
      'Lepidium campestre'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium chilense']], [], false).length,
      'Lepidium chilense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium densiflorum']], [], false)
        .length,
      'Lepidium densiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium diffusum']], [], false).length,
      'Lepidium diffusum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium fremontii']], [], false)
        .length,
      'Lepidium fremontii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium graminifolium']], [], false)
        .length,
      'Lepidium graminifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium hyssopifolium']], [], false)
        .length,
      'Lepidium hyssopifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium iberis']], [], false).length,
      'Lepidium iberis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium incisum']], [], false).length,
      'Lepidium incisum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium intermedium']], [], false)
        .length,
      'Lepidium intermedium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium latifolium']], [], false)
        .length,
      'Lepidium latifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium meyenii']], [], false).length,
      'Lepidium meyenii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium nitidum']], [], false).length,
      'Lepidium nitidum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium oleraceum']], [], false)
        .length,
      'Lepidium oleraceum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium perfoliatum']], [], false)
        .length,
      'Lepidium perfoliatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium rotundum']], [], false).length,
      'Lepidium rotundum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium ruderale']], [], false).length,
      'Lepidium ruderale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium sativum']], [], false).length,
      'Lepidium sativum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidium virginicum']], [], false)
        .length,
      'Lepidium virginicum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Lepidogrammitis drymoglossoides']],
        [],
        false
      ).length,
      'Lepidogrammitis drymoglossoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lepidosperma gladiatum']], [], false)
        .length,
      'Lepidosperma gladiatum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lepidothamnus intermedius']], [], false)
        .length,
      'Lepidothamnus intermedius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leptocarpus similis']], [], false)
        .length,
      'Leptocarpus similis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leptomeria acida']], [], false).length,
      'Leptomeria acida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leptomeria aphylla']], [], false)
        .length,
      'Leptomeria aphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leptomeria drupacea']], [], false)
        .length,
      'Leptomeria drupacea'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Leptospermum ericoides']], [], false)
        .length,
      'Leptospermum ericoides'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Leptospermum laevigatum']], [], false)
        .length,
      'Leptospermum laevigatum'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Leptospermum lanigerum']], [], false)
        .length,
      'Leptospermum lanigerum'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Leptospermum liversidgei']], [], false)
        .length,
      'Leptospermum liversidgei'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Leptospermum petersonii']], [], false)
        .length,
      'Leptospermum petersonii'
    );
    assert.equal(
      7195,
      filterAndSort(
        crops,
        [nameToCrop['Leptospermum polygalifolium']],
        [],
        false
      ).length,
      'Leptospermum polygalifolium'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Leptospermum scoparium']], [], false)
        .length,
      'Leptospermum scoparium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lespedeza bicolor']], [], false).length,
      'Lespedeza bicolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza buergeri']], [], false)
        .length,
      'Lespedeza buergeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lespedeza capitata']], [], false)
        .length,
      'Lespedeza capitata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza cuneata']], [], false).length,
      'Lespedeza cuneata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza cyrtobotrya']], [], false)
        .length,
      'Lespedeza cyrtobotrya'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza floribunda']], [], false)
        .length,
      'Lespedeza floribunda'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza formosa']], [], false).length,
      'Lespedeza formosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lespedeza juncea']], [], false).length,
      'Lespedeza juncea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lespedeza maximowiczii']], [], false)
        .length,
      'Lespedeza maximowiczii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza pilosa']], [], false).length,
      'Lespedeza pilosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lespedeza tomentosa']], [], false)
        .length,
      'Lespedeza tomentosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lesquerella fendleri']], [], false)
        .length,
      'Lesquerella fendleri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lesquerella intermedia']], [], false)
        .length,
      'Lesquerella intermedia'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Leucanthemum maximum']], [], false)
        .length,
      'Leucanthemum maximum'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Leucanthemum vulgare']], [], false)
        .length,
      'Leucanthemum vulgare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leucas cephalotes']], [], false).length,
      'Leucas cephalotes'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leucas lanata']], [], false).length,
      'Leucas lanata'
    );
    assert.equal(
      6401,
      filterAndSort(crops, [nameToCrop['Leucocrinum montanum']], [], false)
        .length,
      'Leucocrinum montanum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Leucojum aestivum']], [], false).length,
      'Leucojum aestivum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Leucojum vernum']], [], false).length,
      'Leucojum vernum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Leucopogon lanceolatus']], [], false)
        .length,
      'Leucopogon lanceolatus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Leucopogon leptospermoides']],
        [],
        false
      ).length,
      'Leucopogon leptospermoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leucopogon montanus']], [], false)
        .length,
      'Leucopogon montanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leucopogon suaveolens']], [], false)
        .length,
      'Leucopogon suaveolens'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Leucothoe axillaris']], [], false)
        .length,
      'Leucothoe axillaris'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Leucothoe grayana']], [], false).length,
      'Leucothoe grayana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Leuzea rhapontica']], [], false).length,
      'Leuzea rhapontica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Levisticum officinale']], [], false)
        .length,
      'Levisticum officinale'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lewisia brachycalyx']], [], false)
        .length,
      'Lewisia brachycalyx'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lewisia columbiana']], [], false)
        .length,
      'Lewisia columbiana'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Lewisia pygmaea']], [], false).length,
      'Lewisia pygmaea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lewisia rediviva']], [], false).length,
      'Lewisia rediviva'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Leycesteria formosa']], [], false)
        .length,
      'Leycesteria formosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Leymus arenarius']], [], false).length,
      'Leymus arenarius'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Leymus condensatus']], [], false)
        .length,
      'Leymus condensatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Leymus racemosus']], [], false).length,
      'Leymus racemosus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Leymus triticoides']], [], false)
        .length,
      'Leymus triticoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Liatris chapmanii']], [], false).length,
      'Liatris chapmanii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Liatris punctata']], [], false).length,
      'Liatris punctata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Liatris scariosa']], [], false).length,
      'Liatris scariosa'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Liatris spicata']], [], false).length,
      'Liatris spicata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Liatris squarrosa']], [], false).length,
      'Liatris squarrosa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Libocedrus bidwillii']], [], false)
        .length,
      'Libocedrus bidwillii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Libocedrus plumosa']], [], false)
        .length,
      'Libocedrus plumosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Libocedrus uvifera']], [], false)
        .length,
      'Libocedrus uvifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligularia amplexicaulis']], [], false)
        .length,
      'Ligularia amplexicaulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligularia hiberniflorum']], [], false)
        .length,
      'Ligularia hiberniflorum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ligularia hodgsonii']], [], false)
        .length,
      'Ligularia hodgsonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligularia intermedia']], [], false)
        .length,
      'Ligularia intermedia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ligularia japonica']], [], false)
        .length,
      'Ligularia japonica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Ligularia sibirica']], [], false)
        .length,
      'Ligularia sibirica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum brachylobum']], [], false)
        .length,
      'Ligusticum brachylobum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligusticum canadense']], [], false)
        .length,
      'Ligusticum canadense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligusticum filicinum']], [], false)
        .length,
      'Ligusticum filicinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum hultenii']], [], false)
        .length,
      'Ligusticum hultenii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum jeholense']], [], false)
        .length,
      'Ligusticum jeholense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum monnieri']], [], false)
        .length,
      'Ligusticum monnieri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum mutellina']], [], false)
        .length,
      'Ligusticum mutellina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum porteri']], [], false)
        .length,
      'Ligusticum porteri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ligusticum scoticum']], [], false)
        .length,
      'Ligusticum scoticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum sinense']], [], false)
        .length,
      'Ligusticum sinense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ligusticum wallichii']], [], false)
        .length,
      'Ligusticum wallichii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum delavayanum']], [], false)
        .length,
      'Ligustrum delavayanum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum indicum']], [], false).length,
      'Ligustrum indicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum japonicum']], [], false)
        .length,
      'Ligustrum japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum lucidum']], [], false).length,
      'Ligustrum lucidum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Ligustrum obtusifolium']], [], false)
        .length,
      'Ligustrum obtusifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum ovalifolium']], [], false)
        .length,
      'Ligustrum ovalifolium'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Ligustrum sinense']], [], false).length,
      'Ligustrum sinense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ligustrum vulgare']], [], false).length,
      'Ligustrum vulgare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lilaea subulata']], [], false).length,
      'Lilaea subulata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium amabile']], [], false).length,
      'Lilium amabile'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium auratum']], [], false).length,
      'Lilium auratum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium brownii']], [], false).length,
      'Lilium brownii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lilium bulbiferum']], [], false).length,
      'Lilium bulbiferum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lilium callosum']], [], false).length,
      'Lilium callosum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium canadense']], [], false).length,
      'Lilium canadense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium canadense editorum']], [], false)
        .length,
      'Lilium canadense editorum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium canadense flavum']], [], false)
        .length,
      'Lilium canadense flavum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lilium candidum']], [], false).length,
      'Lilium candidum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lilium cernuum']], [], false).length,
      'Lilium cernuum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium columbianum']], [], false)
        .length,
      'Lilium columbianum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium concolor']], [], false).length,
      'Lilium concolor'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium dauricum']], [], false).length,
      'Lilium dauricum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium davidii']], [], false).length,
      'Lilium davidii'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium distichum']], [], false).length,
      'Lilium distichum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium formosanum']], [], false).length,
      'Lilium formosanum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium formosanum pricei']], [], false)
        .length,
      'Lilium formosanum pricei'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium hansonii']], [], false).length,
      'Lilium hansonii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium henryi']], [], false).length,
      'Lilium henryi'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium japonicum']], [], false).length,
      'Lilium japonicum'
    );
    assert.equal(
      7212,
      filterAndSort(
        crops,
        [nameToCrop['Lilium japonicum platyfolium']],
        [],
        false
      ).length,
      'Lilium japonicum platyfolium'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium kelleyanum']], [], false).length,
      'Lilium kelleyanum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium lancifolium']], [], false)
        .length,
      'Lilium lancifolium'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium leichtlinii']], [], false)
        .length,
      'Lilium leichtlinii'
    );
    assert.equal(
      7212,
      filterAndSort(
        crops,
        [nameToCrop['Lilium leichtlinii maximowiczii']],
        [],
        false
      ).length,
      'Lilium leichtlinii maximowiczii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium longiflorum']], [], false)
        .length,
      'Lilium longiflorum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium maculatum']], [], false).length,
      'Lilium maculatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium martagon']], [], false).length,
      'Lilium martagon'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium medeoloides']], [], false)
        .length,
      'Lilium medeoloides'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium monanthum']], [], false).length,
      'Lilium monanthum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium nanum']], [], false).length,
      'Lilium nanum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium nepalense']], [], false).length,
      'Lilium nepalense'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium nobilissimum']], [], false)
        .length,
      'Lilium nobilissimum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium pardalinum']], [], false).length,
      'Lilium pardalinum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium philadelphicum']], [], false)
        .length,
      'Lilium philadelphicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lilium pomponium']], [], false).length,
      'Lilium pomponium'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lilium pumilum']], [], false).length,
      'Lilium pumilum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium rubellum']], [], false).length,
      'Lilium rubellum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium sargentiae']], [], false).length,
      'Lilium sargentiae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lilium  species']], [], false).length,
      'Lilium  species'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium speciosum']], [], false).length,
      'Lilium speciosum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Lilium superbum']], [], false).length,
      'Lilium superbum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lilium tsingtauense']], [], false)
        .length,
      'Lilium tsingtauense'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Lilium wallichianum']], [], false)
        .length,
      'Lilium wallichianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Limnanthes alba']], [], false).length,
      'Limnanthes alba'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Limnanthes douglasii']], [], false)
        .length,
      'Limnanthes douglasii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Limonium carolinianum']], [], false)
        .length,
      'Limonium carolinianum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Limonium ornatum']], [], false).length,
      'Limonium ornatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Limonium tetragonum']], [], false)
        .length,
      'Limonium tetragonum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Limonium thouinii']], [], false).length,
      'Limonium thouinii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Limonium vulgare']], [], false).length,
      'Limonium vulgare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linaria canadensis']], [], false)
        .length,
      'Linaria canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linaria vulgaris']], [], false).length,
      'Linaria vulgaris'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lindera assamica']], [], false).length,
      'Lindera assamica'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Lindera benzoin']], [], false).length,
      'Lindera benzoin'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lindera glauca']], [], false).length,
      'Lindera glauca'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Lindera megaphylla']], [], false)
        .length,
      'Lindera megaphylla'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lindera obtusiloba']], [], false)
        .length,
      'Lindera obtusiloba'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Lindera praecox']], [], false).length,
      'Lindera praecox'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lindera pulcherrima']], [], false)
        .length,
      'Lindera pulcherrima'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lindera strychnifolia']], [], false)
        .length,
      'Lindera strychnifolia'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Lindera umbellata']], [], false).length,
      'Lindera umbellata'
    );
    assert.equal(
      6490,
      filterAndSort(crops, [nameToCrop['Linnaea borealis']], [], false).length,
      'Linnaea borealis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum bienne']], [], false).length,
      'Linum bienne'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum catharticum']], [], false).length,
      'Linum catharticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum crepitans']], [], false).length,
      'Linum crepitans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum humile']], [], false).length,
      'Linum humile'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum marginale']], [], false).length,
      'Linum marginale'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Linum monogynum']], [], false).length,
      'Linum monogynum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Linum perenne']], [], false).length,
      'Linum perenne'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Linum strictum']], [], false).length,
      'Linum strictum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Linum usitatissimum']], [], false)
        .length,
      'Linum usitatissimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Liparis japonica']], [], false).length,
      'Liparis japonica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Liquidambar formosana']], [], false)
        .length,
      'Liquidambar formosana'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Liquidambar orientalis']], [], false)
        .length,
      'Liquidambar orientalis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Liquidambar styraciflua']], [], false)
        .length,
      'Liquidambar styraciflua'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Liriodendron tulipifera']], [], false)
        .length,
      'Liriodendron tulipifera'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Liriope graminifolia']], [], false)
        .length,
      'Liriope graminifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Liriope minor']], [], false).length,
      'Liriope minor'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Liriope muscari']], [], false).length,
      'Liriope muscari'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Liriope spicata']], [], false).length,
      'Liriope spicata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lissanthe sapida']], [], false).length,
      'Lissanthe sapida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lissanthe strigosa']], [], false)
        .length,
      'Lissanthe strigosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lithocarpus corneus']], [], false)
        .length,
      'Lithocarpus corneus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lithocarpus densiflorus']], [], false)
        .length,
      'Lithocarpus densiflorus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lithocarpus edulis']], [], false)
        .length,
      'Lithocarpus edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lithocarpus glaber']], [], false)
        .length,
      'Lithocarpus glaber'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Lithocarpus pachyphylla']], [], false)
        .length,
      'Lithocarpus pachyphylla'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Lithospermum canescens']], [], false)
        .length,
      'Lithospermum canescens'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lithospermum caroliniense']], [], false)
        .length,
      'Lithospermum caroliniense'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Lithospermum erythrorhizon']],
        [],
        false
      ).length,
      'Lithospermum erythrorhizon'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Lithospermum incisum']], [], false)
        .length,
      'Lithospermum incisum'
    );
    assert.equal(
      6957,
      filterAndSort(crops, [nameToCrop['Lithospermum multiflorum']], [], false)
        .length,
      'Lithospermum multiflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lithospermum officinale']], [], false)
        .length,
      'Lithospermum officinale'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lithospermum ruderale']], [], false)
        .length,
      'Lithospermum ruderale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Litsea citrata']], [], false).length,
      'Litsea citrata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Litsea cubeba']], [], false).length,
      'Litsea cubeba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Litsea umbrosa']], [], false).length,
      'Litsea umbrosa'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Livistona australis']], [], false)
        .length,
      'Livistona australis'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Lobelia cardinalis']], [], false)
        .length,
      'Lobelia cardinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lobelia dortmanna']], [], false).length,
      'Lobelia dortmanna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lobelia inflata']], [], false).length,
      'Lobelia inflata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lobelia radicans']], [], false).length,
      'Lobelia radicans'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lobelia sessilifolia']], [], false)
        .length,
      'Lobelia sessilifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lobelia siphilitica']], [], false)
        .length,
      'Lobelia siphilitica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lobelia spicata']], [], false).length,
      'Lobelia spicata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Lobelia tupa']], [], false).length,
      'Lobelia tupa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lobularia maritima']], [], false)
        .length,
      'Lobularia maritima'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lolium multiflorum']], [], false)
        .length,
      'Lolium multiflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lolium perenne']], [], false).length,
      'Lolium perenne'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lolium temulentum']], [], false).length,
      'Lolium temulentum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lomandra longifolia']], [], false)
        .length,
      'Lomandra longifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium ambiguum']], [], false).length,
      'Lomatium ambiguum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium canbyi']], [], false).length,
      'Lomatium canbyi'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lomatium cous']], [], false).length,
      'Lomatium cous'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium dissectum']], [], false)
        .length,
      'Lomatium dissectum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium eurycarpum']], [], false)
        .length,
      'Lomatium eurycarpum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium farinosum']], [], false)
        .length,
      'Lomatium farinosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium foeniculaceum']], [], false)
        .length,
      'Lomatium foeniculaceum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium gayeri']], [], false).length,
      'Lomatium gayeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium gormanii']], [], false).length,
      'Lomatium gormanii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium grayi']], [], false).length,
      'Lomatium grayi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium macrocarpum']], [], false)
        .length,
      'Lomatium macrocarpum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium nudicaule']], [], false)
        .length,
      'Lomatium nudicaule'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium triternatum']], [], false)
        .length,
      'Lomatium triternatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lomatium utriculatum']], [], false)
        .length,
      'Lomatium utriculatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lonicera affinis']], [], false).length,
      'Lonicera affinis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera angustifolia']], [], false)
        .length,
      'Lonicera angustifolia'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Lonicera caerulea']], [], false).length,
      'Lonicera caerulea'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Lonicera canadensis']], [], false)
        .length,
      'Lonicera canadensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera caprifolium']], [], false)
        .length,
      'Lonicera caprifolium'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Lonicera chrysantha']], [], false)
        .length,
      'Lonicera chrysantha'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera ciliosa']], [], false).length,
      'Lonicera ciliosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lonicera gracilipes']], [], false)
        .length,
      'Lonicera gracilipes'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Lonicera gracilipes glabra']],
        [],
        false
      ).length,
      'Lonicera gracilipes glabra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera henryi']], [], false).length,
      'Lonicera henryi'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera involucrata']], [], false)
        .length,
      'Lonicera involucrata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera japonica']], [], false).length,
      'Lonicera japonica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Lonicera morrowii']], [], false).length,
      'Lonicera morrowii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lonicera nitida']], [], false).length,
      'Lonicera nitida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lonicera periclymenum']], [], false)
        .length,
      'Lonicera periclymenum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera pileata']], [], false).length,
      'Lonicera pileata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera quinquelocularis']], [], false)
        .length,
      'Lonicera quinquelocularis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Lonicera sempervirens']], [], false)
        .length,
      'Lonicera sempervirens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lonicera utahensis']], [], false)
        .length,
      'Lonicera utahensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lonicera venulosa']], [], false).length,
      'Lonicera venulosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lonicera villosa']], [], false).length,
      'Lonicera villosa'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Lonicera villosa solonis']], [], false)
        .length,
      'Lonicera villosa solonis'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Lophomyrtus bullata']], [], false)
        .length,
      'Lophomyrtus bullata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Lophomyrtus x ralphii']], [], false)
        .length,
      'Lophomyrtus x ralphii'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Loropetalum chinense']], [], false)
        .length,
      'Loropetalum chinense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lotus corniculatus']], [], false)
        .length,
      'Lotus corniculatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lotus edulis']], [], false).length,
      'Lotus edulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lotus halophilus']], [], false).length,
      'Lotus halophilus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lotus tetragonolobus']], [], false)
        .length,
      'Lotus tetragonolobus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lotus uliginosus']], [], false).length,
      'Lotus uliginosus'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Ludwigia palustris']], [], false)
        .length,
      'Ludwigia palustris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Luma apiculata']], [], false).length,
      'Luma apiculata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Lunaria annua']], [], false).length,
      'Lunaria annua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lupinus albus']], [], false).length,
      'Lupinus albus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lupinus albus graecus']], [], false)
        .length,
      'Lupinus albus graecus'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lupinus angustifolius']], [], false)
        .length,
      'Lupinus angustifolius'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Lupinus arboreus']], [], false).length,
      'Lupinus arboreus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lupinus hirsutus']], [], false).length,
      'Lupinus hirsutus'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Lupinus littoralis']], [], false)
        .length,
      'Lupinus littoralis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Lupinus luteus']], [], false).length,
      'Lupinus luteus'
    );
    assert.equal(
      7031,
      filterAndSort(crops, [nameToCrop['Lupinus mutabilis']], [], false).length,
      'Lupinus mutabilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lupinus nootkatensis']], [], false)
        .length,
      'Lupinus nootkatensis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Lupinus perennis']], [], false).length,
      'Lupinus perennis'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Lupinus polyphyllus']], [], false)
        .length,
      'Lupinus polyphyllus'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Lupinus tauris']], [], false).length,
      'Lupinus tauris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lupinus termis']], [], false).length,
      'Lupinus termis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Luzula capitata']], [], false).length,
      'Luzula capitata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lychnis flos-cuculi']], [], false)
        .length,
      'Lychnis flos-cuculi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lychnis fulgens']], [], false).length,
      'Lychnis fulgens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Lycium afrum']], [], false).length,
      'Lycium afrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium andersonii']], [], false).length,
      'Lycium andersonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium arabicum']], [], false).length,
      'Lycium arabicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium australe']], [], false).length,
      'Lycium australe'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium barbarum']], [], false).length,
      'Lycium barbarum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium berlandieri']], [], false)
        .length,
      'Lycium berlandieri'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Lycium carolinianum']], [], false)
        .length,
      'Lycium carolinianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium chinense']], [], false).length,
      'Lycium chinense'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Lycium europaeum']], [], false).length,
      'Lycium europaeum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium fremontii']], [], false).length,
      'Lycium fremontii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium pallidum']], [], false).length,
      'Lycium pallidum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Lycium ruthenicum']], [], false).length,
      'Lycium ruthenicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium schweinfurthii']], [], false)
        .length,
      'Lycium schweinfurthii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycium torreyi']], [], false).length,
      'Lycium torreyi'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Lycopersicon peruvianum']], [], false)
        .length,
      'Lycopersicon peruvianum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Lycopodium annotinum']], [], false)
        .length,
      'Lycopodium annotinum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lycopodium campanulatum']], [], false)
        .length,
      'Lycopodium campanulatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycopodium clavatum']], [], false)
        .length,
      'Lycopodium clavatum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lycopodium complanatum']], [], false)
        .length,
      'Lycopodium complanatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lycopodium lucidulum']], [], false)
        .length,
      'Lycopodium lucidulum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lycopodium obscurum']], [], false)
        .length,
      'Lycopodium obscurum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Lycopodium selago']], [], false).length,
      'Lycopodium selago'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycopodium serratum']], [], false)
        .length,
      'Lycopodium serratum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lycopus americanus']], [], false)
        .length,
      'Lycopus americanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lycopus amplectens']], [], false)
        .length,
      'Lycopus amplectens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lycopus asper']], [], false).length,
      'Lycopus asper'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lycopus europaeus']], [], false).length,
      'Lycopus europaeus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lycopus lucidus']], [], false).length,
      'Lycopus lucidus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lycopus maackianus']], [], false)
        .length,
      'Lycopus maackianus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lycopus uniflorus']], [], false).length,
      'Lycopus uniflorus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lycopus virginicus']], [], false)
        .length,
      'Lycopus virginicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycoris aurea']], [], false).length,
      'Lycoris aurea'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Lycoris radiata']], [], false).length,
      'Lycoris radiata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lycoris sanguinea']], [], false).length,
      'Lycoris sanguinea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Lycoris squamigera']], [], false)
        .length,
      'Lycoris squamigera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lygeum spartum']], [], false).length,
      'Lygeum spartum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lygodesmia grandiflora']], [], false)
        .length,
      'Lygodesmia grandiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Lygodesmia juncea']], [], false).length,
      'Lygodesmia juncea'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Lyonia ovalifolia']], [], false).length,
      'Lyonia ovalifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lyonsia straminea']], [], false).length,
      'Lyonsia straminea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysichiton americanus']], [], false)
        .length,
      'Lysichiton americanus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysichiton camtschatcense']], [], false)
        .length,
      'Lysichiton camtschatcense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lysimachia barystachys']], [], false)
        .length,
      'Lysimachia barystachys'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia christiniae']], [], false)
        .length,
      'Lysimachia christiniae'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Lysimachia clethroides']], [], false)
        .length,
      'Lysimachia clethroides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia eleutheroides']], [], false)
        .length,
      'Lysimachia eleutheroides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia foenum-graecum']], [], false)
        .length,
      'Lysimachia foenum-graecum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysimachia fortunei']], [], false)
        .length,
      'Lysimachia fortunei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia nemorum']], [], false)
        .length,
      'Lysimachia nemorum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysimachia nummularia']], [], false)
        .length,
      'Lysimachia nummularia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysimachia paridiformis']], [], false)
        .length,
      'Lysimachia paridiformis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia quadrifolia']], [], false)
        .length,
      'Lysimachia quadrifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Lysimachia sikokiana']], [], false)
        .length,
      'Lysimachia sikokiana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Lysimachia vulgaris']], [], false)
        .length,
      'Lysimachia vulgaris'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Lythrum portula']], [], false).length,
      'Lythrum portula'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Lythrum salicaria']], [], false).length,
      'Lythrum salicaria'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Maackia amurensis']], [], false).length,
      'Maackia amurensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Macadamia integrifolia']], [], false)
        .length,
      'Macadamia integrifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Macadamia tetraphylla']], [], false)
        .length,
      'Macadamia tetraphylla'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Macleaya cordata']], [], false).length,
      'Macleaya cordata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Maclura pomifera']], [], false).length,
      'Maclura pomifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Macromeria viridiflora']], [], false)
        .length,
      'Macromeria viridiflora'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Macrotomia perennis']], [], false)
        .length,
      'Macrotomia perennis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Madia densifolia']], [], false).length,
      'Madia densifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Madia dissitiflora']], [], false)
        .length,
      'Madia dissitiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Madia elegans']], [], false).length,
      'Madia elegans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Madia glomerata']], [], false).length,
      'Madia glomerata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Madia sativa']], [], false).length,
      'Madia sativa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Magnolia acuminata']], [], false)
        .length,
      'Magnolia acuminata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Magnolia campbellii']], [], false)
        .length,
      'Magnolia campbellii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Magnolia denudata']], [], false).length,
      'Magnolia denudata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Magnolia grandiflora']], [], false)
        .length,
      'Magnolia grandiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Magnolia hypoleuca']], [], false)
        .length,
      'Magnolia hypoleuca'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Magnolia kobus']], [], false).length,
      'Magnolia kobus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Magnolia liliiflora']], [], false)
        .length,
      'Magnolia liliiflora'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Magnolia macrophylla']], [], false)
        .length,
      'Magnolia macrophylla'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Magnolia officinalis']], [], false)
        .length,
      'Magnolia officinalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Magnolia stellata']], [], false).length,
      'Magnolia stellata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Magnolia virginiana']], [], false)
        .length,
      'Magnolia virginiana'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Mahoberberis aquisargentii']],
        [],
        false
      ).length,
      'Mahoberberis aquisargentii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mahonia aquifolium']], [], false)
        .length,
      'Mahonia aquifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia bealei']], [], false).length,
      'Mahonia bealei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia confusa']], [], false).length,
      'Mahonia confusa'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Mahonia flavida']], [], false).length,
      'Mahonia flavida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia fortunei']], [], false).length,
      'Mahonia fortunei'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mahonia fremontii']], [], false).length,
      'Mahonia fremontii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia ganpinensis']], [], false)
        .length,
      'Mahonia ganpinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia gracilipes']], [], false)
        .length,
      'Mahonia gracilipes'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mahonia gracilis']], [], false).length,
      'Mahonia gracilis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mahonia haematocarpa']], [], false)
        .length,
      'Mahonia haematocarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia japonica']], [], false).length,
      'Mahonia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia lomariifolia']], [], false)
        .length,
      'Mahonia lomariifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia napaulensis']], [], false)
        .length,
      'Mahonia napaulensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia nervosa']], [], false).length,
      'Mahonia nervosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mahonia nevinii']], [], false).length,
      'Mahonia nevinii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia pinnata']], [], false).length,
      'Mahonia pinnata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Mahonia pumila']], [], false).length,
      'Mahonia pumila'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia repens']], [], false).length,
      'Mahonia repens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mahonia swaseyi']], [], false).length,
      'Mahonia swaseyi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mahonia trifoliolata']], [], false)
        .length,
      'Mahonia trifoliolata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mahonia x media']], [], false).length,
      'Mahonia x media'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Maianthemum canadense']], [], false)
        .length,
      'Maianthemum canadense'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Maianthemum dilatatum']], [], false)
        .length,
      'Maianthemum dilatatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus angustifolia']], [], false)
        .length,
      'Malus angustifolia'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Malus baccata']], [], false).length,
      'Malus baccata'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Malus baccata mandschurica']],
        [],
        false
      ).length,
      'Malus baccata mandschurica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus bracteata']], [], false).length,
      'Malus bracteata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus brevipes']], [], false).length,
      'Malus brevipes'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus coronaria']], [], false).length,
      'Malus coronaria'
    );
    assert.equal(
      7119,
      filterAndSort(crops, [nameToCrop['Malus domestica']], [], false).length,
      'Malus domestica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus florentina']], [], false).length,
      'Malus florentina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus floribunda']], [], false).length,
      'Malus floribunda'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus fusca']], [], false).length,
      'Malus fusca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus glabrata']], [], false).length,
      'Malus glabrata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus glaucescens']], [], false).length,
      'Malus glaucescens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus halliana']], [], false).length,
      'Malus halliana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus halliana spontanea']], [], false)
        .length,
      'Malus halliana spontanea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus hupehensis']], [], false).length,
      'Malus hupehensis'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Malus ioensis']], [], false).length,
      'Malus ioensis'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Malus ioensis palmeri']], [], false)
        .length,
      'Malus ioensis palmeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus kansuensis']], [], false).length,
      'Malus kansuensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus lancifolia']], [], false).length,
      'Malus lancifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus praecox']], [], false).length,
      'Malus praecox'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus prattii']], [], false).length,
      'Malus prattii'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Malus prunifolia']], [], false).length,
      'Malus prunifolia'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus prunifolia rinkii']], [], false)
        .length,
      'Malus prunifolia rinkii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus pumila']], [], false).length,
      'Malus pumila'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus pumila nervosa']], [], false)
        .length,
      'Malus pumila nervosa'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus pumila paradisiaca']], [], false)
        .length,
      'Malus pumila paradisiaca'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus sargentii']], [], false).length,
      'Malus sargentii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus sieversii']], [], false).length,
      'Malus sieversii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus sikkimensis']], [], false).length,
      'Malus sikkimensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus spectabilis']], [], false).length,
      'Malus spectabilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus sylvestris']], [], false).length,
      'Malus sylvestris'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus toringo']], [], false).length,
      'Malus toringo'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus toringoides']], [], false).length,
      'Malus toringoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus transitoria']], [], false).length,
      'Malus transitoria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus trilobata']], [], false).length,
      'Malus trilobata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus tschonoskii']], [], false).length,
      'Malus tschonoskii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus x adstringens']], [], false)
        .length,
      'Malus x adstringens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus x astracanica']], [], false)
        .length,
      'Malus x astracanica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus x micromalus']], [], false)
        .length,
      'Malus x micromalus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malus x robusta']], [], false).length,
      'Malus x robusta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malus x soulardii']], [], false).length,
      'Malus x soulardii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malus yunnanensis']], [], false).length,
      'Malus yunnanensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malva alcea']], [], false).length,
      'Malva alcea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malva excisa']], [], false).length,
      'Malva excisa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva meluca']], [], false).length,
      'Malva meluca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva mohileviensis']], [], false)
        .length,
      'Malva mohileviensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Malva moschata']], [], false).length,
      'Malva moschata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malva neglecta']], [], false).length,
      'Malva neglecta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva nicaeensis']], [], false).length,
      'Malva nicaeensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva parviflora']], [], false).length,
      'Malva parviflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva pusilla']], [], false).length,
      'Malva pusilla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Malva sylvestris']], [], false).length,
      'Malva sylvestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Malva verticillata']], [], false)
        .length,
      'Malva verticillata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Malvastrum lateritium']], [], false)
        .length,
      'Malvastrum lateritium'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Mandragora officinarum']], [], false)
        .length,
      'Mandragora officinarum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Marah fabaceus']], [], false).length,
      'Marah fabaceus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Marah macrocarpus']], [], false).length,
      'Marah macrocarpus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Margyricarpus pinnatus']], [], false)
        .length,
      'Margyricarpus pinnatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Marrubium vulgare']], [], false).length,
      'Marrubium vulgare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Marsdenia roylei']], [], false).length,
      'Marsdenia roylei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Marsdenia tenacissima']], [], false)
        .length,
      'Marsdenia tenacissima'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Marsilea drummondii']], [], false)
        .length,
      'Marsilea drummondii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Marsilea mutica']], [], false).length,
      'Marsilea mutica'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Marsilea quadrifolia']], [], false)
        .length,
      'Marsilea quadrifolia'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Marsippospermum grandiflorum']],
        [],
        false
      ).length,
      'Marsippospermum grandiflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Matricaria matricarioides']], [], false)
        .length,
      'Matricaria matricarioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Matricaria recutita']], [], false)
        .length,
      'Matricaria recutita'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Matteuccia orientalis']], [], false)
        .length,
      'Matteuccia orientalis'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Matteuccia pensylvanica']], [], false)
        .length,
      'Matteuccia pensylvanica'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Matteuccia struthiopteris']], [], false)
        .length,
      'Matteuccia struthiopteris'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Matthiola incana']], [], false).length,
      'Matthiola incana'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Maytenus boaria']], [], false).length,
      'Maytenus boaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mazus miquelii']], [], false).length,
      'Mazus miquelii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mazus pumilus']], [], false).length,
      'Mazus pumilus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mazus stachydifolius']], [], false)
        .length,
      'Mazus stachydifolius'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Meconopsis aculeata']], [], false)
        .length,
      'Meconopsis aculeata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Meconopsis grandis']], [], false)
        .length,
      'Meconopsis grandis'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Meconopsis napaulensis']], [], false)
        .length,
      'Meconopsis napaulensis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Medeola virginiana']], [], false)
        .length,
      'Medeola virginiana'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Medicago arborea']], [], false).length,
      'Medicago arborea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Medicago lupulina']], [], false).length,
      'Medicago lupulina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Medicago polymorpha']], [], false)
        .length,
      'Medicago polymorpha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Medicago sativa']], [], false).length,
      'Medicago sativa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Meehania urticifolia']], [], false)
        .length,
      'Meehania urticifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Megacarpaea delavayi']], [], false)
        .length,
      'Megacarpaea delavayi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Megacarpaea gigantea']], [], false)
        .length,
      'Megacarpaea gigantea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Megacarpaea megalocarpa']], [], false)
        .length,
      'Megacarpaea megalocarpa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Megacarpaea polyandra']], [], false)
        .length,
      'Megacarpaea polyandra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Megacodon stylophorus']], [], false)
        .length,
      'Megacodon stylophorus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Melaleuca alternifolia']], [], false)
        .length,
      'Melaleuca alternifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Melaleuca bracteata']], [], false)
        .length,
      'Melaleuca bracteata'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Melaleuca hypericifolia']], [], false)
        .length,
      'Melaleuca hypericifolia'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Melaleuca linariifolia']], [], false)
        .length,
      'Melaleuca linariifolia'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Melaleuca thymifolia']], [], false)
        .length,
      'Melaleuca thymifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Melaleuca uncinata']], [], false)
        .length,
      'Melaleuca uncinata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Melanthium virginicum']], [], false)
        .length,
      'Melanthium virginicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Melastoma dodecandrum']], [], false)
        .length,
      'Melastoma dodecandrum'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Melia azederach']], [], false).length,
      'Melia azederach'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Melianthus major']], [], false).length,
      'Melianthus major'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Melianthus minor']], [], false).length,
      'Melianthus minor'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Melichrus procumbens']], [], false)
        .length,
      'Melichrus procumbens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Melichrus urceolatus']], [], false)
        .length,
      'Melichrus urceolatus'
    );
    assert.equal(
      6641,
      filterAndSort(crops, [nameToCrop['Melicope ternata']], [], false).length,
      'Melicope ternata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Melicytus ramiflorus']], [], false)
        .length,
      'Melicytus ramiflorus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus albus']], [], false).length,
      'Melilotus albus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus altissimus']], [], false)
        .length,
      'Melilotus altissimus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus elegans']], [], false).length,
      'Melilotus elegans'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus indicus']], [], false).length,
      'Melilotus indicus'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Melilotus officinalis']], [], false)
        .length,
      'Melilotus officinalis'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus suaveolens']], [], false)
        .length,
      'Melilotus suaveolens'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Melilotus wolgicus']], [], false)
        .length,
      'Melilotus wolgicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Melissa officinalis']], [], false)
        .length,
      'Melissa officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Melittis melissophyllum']], [], false)
        .length,
      'Melittis melissophyllum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Menispermum canadense']], [], false)
        .length,
      'Menispermum canadense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Menispermum davuricum']], [], false)
        .length,
      'Menispermum davuricum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Mentha aquatica']], [], false).length,
      'Mentha aquatica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mentha arvensis']], [], false).length,
      'Mentha arvensis'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Mentha arvensis piperascens']],
        [],
        false
      ).length,
      'Mentha arvensis piperascens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mentha arvensis villosa']], [], false)
        .length,
      'Mentha arvensis villosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha asiatica']], [], false).length,
      'Mentha asiatica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha australis']], [], false).length,
      'Mentha australis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha cervina']], [], false).length,
      'Mentha cervina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha cunninghamia']], [], false)
        .length,
      'Mentha cunninghamia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha diemenica']], [], false).length,
      'Mentha diemenica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha longifolia']], [], false).length,
      'Mentha longifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha pulegium']], [], false).length,
      'Mentha pulegium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha requienii']], [], false).length,
      'Mentha requienii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha satureioides']], [], false)
        .length,
      'Mentha satureioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha  species']], [], false).length,
      'Mentha  species'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Mentha spicata']], [], false).length,
      'Mentha spicata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mentha suaveolens']], [], false).length,
      'Mentha suaveolens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha x gracilis']], [], false).length,
      'Mentha x gracilis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Mentha x piperita citrata']], [], false)
        .length,
      'Mentha x piperita citrata'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Mentha x piperita officinalis']],
        [],
        false
      ).length,
      'Mentha x piperita officinalis'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Mentha x piperita vulgaris']],
        [],
        false
      ).length,
      'Mentha x piperita vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mentha x smithiana']], [], false)
        .length,
      'Mentha x smithiana'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Mentha x villosa alopecuroides']],
        [],
        false
      ).length,
      'Mentha x villosa alopecuroides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mentzelia albicaulis']], [], false)
        .length,
      'Mentzelia albicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mentzelia multiflora']], [], false)
        .length,
      'Mentzelia multiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mentzelia pumila']], [], false).length,
      'Mentzelia pumila'
    );
    assert.equal(
      190,
      filterAndSort(crops, [nameToCrop['Menyanthes trifoliata']], [], false)
        .length,
      'Menyanthes trifoliata'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Menziesia ferruginea']], [], false)
        .length,
      'Menziesia ferruginea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mercurialis annua']], [], false).length,
      'Mercurialis annua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mercurialis leiocarpa']], [], false)
        .length,
      'Mercurialis leiocarpa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mercurialis perennis']], [], false)
        .length,
      'Mercurialis perennis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mertensia bella']], [], false).length,
      'Mertensia bella'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mertensia ciliata']], [], false).length,
      'Mertensia ciliata'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Mertensia longiflora']], [], false)
        .length,
      'Mertensia longiflora'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Mertensia maritima']], [], false)
        .length,
      'Mertensia maritima'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Mertensia oblongifolia']], [], false)
        .length,
      'Mertensia oblongifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Mertensia paniculata']], [], false)
        .length,
      'Mertensia paniculata'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Mesembryanthemum crystallinum']],
        [],
        false
      ).length,
      'Mesembryanthemum crystallinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mespilus germanica']], [], false)
        .length,
      'Mespilus germanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Metaplexis japonica']], [], false)
        .length,
      'Metaplexis japonica'
    );
    assert.equal(
      192,
      filterAndSort(
        crops,
        [nameToCrop['Metasequoia glyptostroboides']],
        [],
        false
      ).length,
      'Metasequoia glyptostroboides'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Metrosideros excelsa']], [], false)
        .length,
      'Metrosideros excelsa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Metrosideros robusta']], [], false)
        .length,
      'Metrosideros robusta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Metrosideros umbellata']], [], false)
        .length,
      'Metrosideros umbellata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Meum athamanticum']], [], false).length,
      'Meum athamanticum'
    );
    assert.equal(
      6880,
      filterAndSort(crops, [nameToCrop['Michelia figo']], [], false).length,
      'Michelia figo'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Microcachrys tetragona']], [], false)
        .length,
      'Microcachrys tetragona'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Micromeria biflora']], [], false)
        .length,
      'Micromeria biflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Micromeria chamissonis']], [], false)
        .length,
      'Micromeria chamissonis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Micromeria juliana']], [], false)
        .length,
      'Micromeria juliana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Microseris nutans']], [], false).length,
      'Microseris nutans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Microseris procera']], [], false)
        .length,
      'Microseris procera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Microseris scapigera']], [], false)
        .length,
      'Microseris scapigera'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Microtis unifolia']], [], false).length,
      'Microtis unifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Milium effusum']], [], false).length,
      'Milium effusum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Millettia dielsiana']], [], false)
        .length,
      'Millettia dielsiana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Millettia reticulata']], [], false)
        .length,
      'Millettia reticulata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Mimulus geyeri']], [], false).length,
      'Mimulus geyeri'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Mimulus guttatus']], [], false).length,
      'Mimulus guttatus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Mimulus lewisii']], [], false).length,
      'Mimulus lewisii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mimulus luteus']], [], false).length,
      'Mimulus luteus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mimulus moschatus']], [], false).length,
      'Mimulus moschatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mirabilis expansa']], [], false).length,
      'Mirabilis expansa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mirabilis jalapa']], [], false).length,
      'Mirabilis jalapa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mirabilis multiflora']], [], false)
        .length,
      'Mirabilis multiflora'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Mirabilis nyctaginea']], [], false)
        .length,
      'Mirabilis nyctaginea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Miscanthus floridulus']], [], false)
        .length,
      'Miscanthus floridulus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Miscanthus sacchariflorus']], [], false)
        .length,
      'Miscanthus sacchariflorus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Miscanthus sinensis']], [], false)
        .length,
      'Miscanthus sinensis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Misodendrum brachystachyum']],
        [],
        false
      ).length,
      'Misodendrum brachystachyum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Misodendrum linearifolium']], [], false)
        .length,
      'Misodendrum linearifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Misodendrum punctulatum']], [], false)
        .length,
      'Misodendrum punctulatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Misodendrum quadriflorum']], [], false)
        .length,
      'Misodendrum quadriflorum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Mitchella repens']], [], false).length,
      'Mitchella repens'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Mitchella undulata']], [], false)
        .length,
      'Mitchella undulata'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Mitella diphylla']], [], false).length,
      'Mitella diphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mollugo verticillata']], [], false)
        .length,
      'Mollugo verticillata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Momorialis hirta']], [], false).length,
      'Momorialis hirta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Monarda citriodora']], [], false)
        .length,
      'Monarda citriodora'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Monarda clinopodia']], [], false)
        .length,
      'Monarda clinopodia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Monarda didyma']], [], false).length,
      'Monarda didyma'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Monarda fistulosa']], [], false).length,
      'Monarda fistulosa'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Monarda menthifolia']], [], false)
        .length,
      'Monarda menthifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Monarda pectinata']], [], false).length,
      'Monarda pectinata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Monarda punctata']], [], false).length,
      'Monarda punctata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Monardella lanceolata']], [], false)
        .length,
      'Monardella lanceolata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Monardella odoratissima']], [], false)
        .length,
      'Monardella odoratissima'
    );
    assert.equal(
      7202,
      filterAndSort(
        crops,
        [nameToCrop['Monardella odoratissima parvifolia']],
        [],
        false
      ).length,
      'Monardella odoratissima parvifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Monardella villosa']], [], false)
        .length,
      'Monardella villosa'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Moneses uniflora']], [], false).length,
      'Moneses uniflora'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Monizia edulis']], [], false).length,
      'Monizia edulis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Monolepis nuttalliana']], [], false)
        .length,
      'Monolepis nuttalliana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Monotoca elliptica']], [], false)
        .length,
      'Monotoca elliptica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Monotoca scoparia']], [], false).length,
      'Monotoca scoparia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Monotropa uniflora']], [], false)
        .length,
      'Monotropa uniflora'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Montia fontana']], [], false).length,
      'Montia fontana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Montia spathulata']], [], false).length,
      'Montia spathulata'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Moraea fugax']], [], false).length,
      'Moraea fugax'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morina coulteriana']], [], false)
        .length,
      'Morina coulteriana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morina longifolia']], [], false).length,
      'Morina longifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus alba']], [], false).length,
      'Morus alba'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Morus alba multicaulis']], [], false)
        .length,
      'Morus alba multicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus australis']], [], false).length,
      'Morus australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus bombycis']], [], false).length,
      'Morus bombycis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus cathayana']], [], false).length,
      'Morus cathayana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Morus macroura']], [], false).length,
      'Morus macroura'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus microphylla']], [], false).length,
      'Morus microphylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Morus mongolica']], [], false).length,
      'Morus mongolica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Morus nigra']], [], false).length,
      'Morus nigra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Morus rubra']], [], false).length,
      'Morus rubra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus serrata']], [], false).length,
      'Morus serrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus  species']], [], false).length,
      'Morus  species'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Morus tiliaefolia']], [], false).length,
      'Morus tiliaefolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mosla chinensis']], [], false).length,
      'Mosla chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mosla dianthera']], [], false).length,
      'Mosla dianthera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Mosla scabra']], [], false).length,
      'Mosla scabra'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia adpressa']], [], false)
        .length,
      'Muehlenbeckia adpressa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia astonii']], [], false)
        .length,
      'Muehlenbeckia astonii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia australis']], [], false)
        .length,
      'Muehlenbeckia australis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia axillaris']], [], false)
        .length,
      'Muehlenbeckia axillaris'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Abelia triflora']], [], false).length,
      'Abelia triflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia chilensis']], [], false)
        .length,
      'Muehlenbeckia chilensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Muehlenbeckia complexa']], [], false)
        .length,
      'Muehlenbeckia complexa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Muhlenbergia pungens']], [], false)
        .length,
      'Muhlenbergia pungens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Abelmoschus esculentus']], [], false)
        .length,
      'Abelmoschus esculentus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Musa acuminata']], [], false).length,
      'Musa acuminata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Musa basjoo']], [], false).length,
      'Musa basjoo'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Muscari botryoides']], [], false)
        .length,
      'Muscari botryoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Muscari comosum']], [], false).length,
      'Muscari comosum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Muscari neglectum']], [], false).length,
      'Muscari neglectum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Musineon divaricatum']], [], false)
        .length,
      'Musineon divaricatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Mycelis muralis']], [], false).length,
      'Mycelis muralis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Myoporum debile']], [], false).length,
      'Myoporum debile'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myoporum deserti']], [], false).length,
      'Myoporum deserti'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Myoporum ellipticum']], [], false)
        .length,
      'Myoporum ellipticum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Myoporum insulare']], [], false).length,
      'Myoporum insulare'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Myoporum laetum']], [], false).length,
      'Myoporum laetum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myoporum montanum']], [], false).length,
      'Myoporum montanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myoporum platycarpum']], [], false)
        .length,
      'Myoporum platycarpum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Myoporum tetrandrum']], [], false)
        .length,
      'Myoporum tetrandrum'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Myosotis alpestris']], [], false)
        .length,
      'Myosotis alpestris'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Myosotis scorpioides']], [], false)
        .length,
      'Myosotis scorpioides'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Myosoton aquaticum']], [], false)
        .length,
      'Myosoton aquaticum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Myriactis nepalensis']], [], false)
        .length,
      'Myriactis nepalensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Myrica californica']], [], false)
        .length,
      'Myrica californica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Myrica cerifera']], [], false).length,
      'Myrica cerifera'
    );
    assert.equal(
      6009,
      filterAndSort(crops, [nameToCrop['Myrica gale']], [], false).length,
      'Myrica gale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myrica heterophylla']], [], false)
        .length,
      'Myrica heterophylla'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Myrica nagi']], [], false).length,
      'Myrica nagi'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Myrica pensylvanica']], [], false)
        .length,
      'Myrica pensylvanica'
    );
    assert.equal(
      6638,
      filterAndSort(crops, [nameToCrop['Myrica rubra']], [], false).length,
      'Myrica rubra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myricaria elegans']], [], false).length,
      'Myricaria elegans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myricaria germanica']], [], false)
        .length,
      'Myricaria germanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myricaria squamosa']], [], false)
        .length,
      'Myricaria squamosa'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Myriophyllum spicatum']], [], false)
        .length,
      'Myriophyllum spicatum'
    );
    assert.equal(
      191,
      filterAndSort(
        crops,
        [nameToCrop['Myriophyllum verticillatum']],
        [],
        false
      ).length,
      'Myriophyllum verticillatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Myrrhis odorata']], [], false).length,
      'Myrrhis odorata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Myrsine africana']], [], false).length,
      'Myrsine africana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Myrsine semiserrata']], [], false)
        .length,
      'Myrsine semiserrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Myrteola nummularia']], [], false)
        .length,
      'Myrteola nummularia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Myrtus communis']], [], false).length,
      'Myrtus communis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Nabalus albus']], [], false).length,
      'Nabalus albus'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Nabalus serpentarius']], [], false)
        .length,
      'Nabalus serpentarius'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Nageia nagi']], [], false).length,
      'Nageia nagi'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Najas flexilis']], [], false).length,
      'Najas flexilis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Najas graminea']], [], false).length,
      'Najas graminea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Najas marina']], [], false).length,
      'Najas marina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nandina domestica']], [], false).length,
      'Nandina domestica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Nannorrhops ritchiana']], [], false)
        .length,
      'Nannorrhops ritchiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Narcissus jonquilla']], [], false)
        .length,
      'Narcissus jonquilla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Narcissus poeticus']], [], false)
        .length,
      'Narcissus poeticus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Narcissus pseudonarcissus']], [], false)
        .length,
      'Narcissus pseudonarcissus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Narcissus tazetta']], [], false).length,
      'Narcissus tazetta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Nardostachys grandiflora']], [], false)
        .length,
      'Nardostachys grandiflora'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nasturtium microphyllum']], [], false)
        .length,
      'Nasturtium microphyllum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nasturtium officinale']], [], false)
        .length,
      'Nasturtium officinale'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nasturtium x sterile']], [], false)
        .length,
      'Nasturtium x sterile'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Navarretia squarrosa']], [], false)
        .length,
      'Navarretia squarrosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Neillia thyrsiflora']], [], false)
        .length,
      'Neillia thyrsiflora'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nelumbo lutea']], [], false).length,
      'Nelumbo lutea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nelumbo nucifera']], [], false).length,
      'Nelumbo nucifera'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Nemopanthus mucronatus']], [], false)
        .length,
      'Nemopanthus mucronatus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Neolitsea sericea']], [], false).length,
      'Neolitsea sericea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Neomyrtus pedunculata']], [], false)
        .length,
      'Neomyrtus pedunculata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Nepeta Cataria']], [], false).length,
      'Nepeta Cataria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Nepeta raphanorrhiza']], [], false)
        .length,
      'Nepeta raphanorrhiza'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Nepeta tenuifolia']], [], false).length,
      'Nepeta tenuifolia'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Nepeta tenuifolia japonica']],
        [],
        false
      ).length,
      'Nepeta tenuifolia japonica'
    );
    assert.equal(
      7119,
      filterAndSort(crops, [nameToCrop['Nerium oleander']], [], false).length,
      'Nerium oleander'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Nertera balfouriana']], [], false)
        .length,
      'Nertera balfouriana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Nertera ciliata']], [], false).length,
      'Nertera ciliata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Nertera cunninghamii']], [], false)
        .length,
      'Nertera cunninghamii'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Nertera granadensis']], [], false)
        .length,
      'Nertera granadensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Nicandra physaloides']], [], false)
        .length,
      'Nicandra physaloides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nicotiana alata']], [], false).length,
      'Nicotiana alata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Nicotiana glauca']], [], false).length,
      'Nicotiana glauca'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Nicotiana rustica']], [], false).length,
      'Nicotiana rustica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Nicotiana tabacum']], [], false).length,
      'Nicotiana tabacum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nigella arvensis']], [], false).length,
      'Nigella arvensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nigella damascena']], [], false).length,
      'Nigella damascena'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nigella orientalis']], [], false)
        .length,
      'Nigella orientalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nigella sativa']], [], false).length,
      'Nigella sativa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Nitraria schoberi']], [], false).length,
      'Nitraria schoberi'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Nothofagus betuloides']], [], false)
        .length,
      'Nothofagus betuloides'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Nothofagus cunninghamii']], [], false)
        .length,
      'Nothofagus cunninghamii'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Nothofagus fusca']], [], false).length,
      'Nothofagus fusca'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Nothofagus menziesii']], [], false)
        .length,
      'Nothofagus menziesii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Nothofagus obliqua']], [], false)
        .length,
      'Nothofagus obliqua'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Nothofagus procera']], [], false)
        .length,
      'Nothofagus procera'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Nothofagus pumilio']], [], false)
        .length,
      'Nothofagus pumilio'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Nothofagus solanderi']], [], false)
        .length,
      'Nothofagus solanderi'
    );
    assert.equal(
      7195,
      filterAndSort(
        crops,
        [nameToCrop['Nothofagus solanderi cliffortioides']],
        [],
        false
      ).length,
      'Nothofagus solanderi cliffortioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Nothoscordum gracile']], [], false)
        .length,
      'Nothoscordum gracile'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Nuphar advena']], [], false).length,
      'Nuphar advena'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nuphar japonicum']], [], false).length,
      'Nuphar japonicum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nuphar lutea']], [], false).length,
      'Nuphar lutea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nuphar polysepala']], [], false).length,
      'Nuphar polysepala'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nuphar pumila']], [], false).length,
      'Nuphar pumila'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nymphaea alba']], [], false).length,
      'Nymphaea alba'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nymphaea candida']], [], false).length,
      'Nymphaea candida'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Nymphaea odorata']], [], false).length,
      'Nymphaea odorata'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Nymphaea tetragona']], [], false)
        .length,
      'Nymphaea tetragona'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Nymphaea tuberosa']], [], false).length,
      'Nymphaea tuberosa'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Nymphoides peltata']], [], false)
        .length,
      'Nymphoides peltata'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Nyssa aquatica']], [], false).length,
      'Nyssa aquatica'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Nyssa ogeche']], [], false).length,
      'Nyssa ogeche'
    );
    assert.equal(
      6960,
      filterAndSort(crops, [nameToCrop['Nyssa sylvatica']], [], false).length,
      'Nyssa sylvatica'
    );
    assert.equal(
      6642,
      filterAndSort(crops, [nameToCrop['Ocimum basilicum']], [], false).length,
      'Ocimum basilicum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Ocimum minimum']], [], false).length,
      'Ocimum minimum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oemleria cerasiformis']], [], false)
        .length,
      'Oemleria cerasiformis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Oenanthe aquatica']], [], false).length,
      'Oenanthe aquatica'
    );
    assert.equal(
      170,
      filterAndSort(crops, [nameToCrop['Oenanthe javanica']], [], false).length,
      'Oenanthe javanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Oenanthe peucidanifolia']], [], false)
        .length,
      'Oenanthe peucidanifolia'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Oenanthe pimpinelloides']], [], false)
        .length,
      'Oenanthe pimpinelloides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Oenanthe sarmentosa']], [], false)
        .length,
      'Oenanthe sarmentosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Oenothera albicaulis']], [], false)
        .length,
      'Oenothera albicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oenothera biennis']], [], false).length,
      'Oenothera biennis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oenothera brevipes']], [], false)
        .length,
      'Oenothera brevipes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oenothera elata hookeri']], [], false)
        .length,
      'Oenothera elata hookeri'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Oenothera glazioviana']], [], false)
        .length,
      'Oenothera glazioviana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oenothera lamarckiana']], [], false)
        .length,
      'Oenothera lamarckiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Oenothera odorata']], [], false).length,
      'Oenothera odorata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Oldenlandia diffusa']], [], false)
        .length,
      'Oldenlandia diffusa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Olea europaea']], [], false).length,
      'Olea europaea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Olearia avicenniifolia']], [], false)
        .length,
      'Olearia avicenniifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Olearia ilicifolia']], [], false)
        .length,
      'Olearia ilicifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Olearia macrodonta']], [], false)
        .length,
      'Olearia macrodonta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Olearia paniculata']], [], false)
        .length,
      'Olearia paniculata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Olearia solandri']], [], false).length,
      'Olearia solandri'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Olearia traversii']], [], false).length,
      'Olearia traversii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Olearia virgata']], [], false).length,
      'Olearia virgata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Olearia x haastii']], [], false).length,
      'Olearia x haastii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Olneya tesota']], [], false).length,
      'Olneya tesota'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Onobrychis viciifolia']], [], false)
        .length,
      'Onobrychis viciifolia'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Onoclea sensibilis']], [], false)
        .length,
      'Onoclea sensibilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ononis repens']], [], false).length,
      'Ononis repens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ononis spinosa']], [], false).length,
      'Ononis spinosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Onopordum acanthium']], [], false)
        .length,
      'Onopordum acanthium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Onopordum illyricum']], [], false)
        .length,
      'Onopordum illyricum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Onosma bracteatum']], [], false).length,
      'Onosma bracteatum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Onosma echioides']], [], false).length,
      'Onosma echioides'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Onosma frutescens']], [], false).length,
      'Onosma frutescens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Onosma hispidum']], [], false).length,
      'Onosma hispidum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ophioglossum vulgatum']], [], false)
        .length,
      'Ophioglossum vulgatum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ophiopogon japonicus']], [], false)
        .length,
      'Ophiopogon japonicus'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Ophrys apifera']], [], false).length,
      'Ophrys apifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys araneola']], [], false).length,
      'Ophrys araneola'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys bertolonii']], [], false).length,
      'Ophrys bertolonii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ophrys bombyliflora']], [], false)
        .length,
      'Ophrys bombyliflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys fusca']], [], false).length,
      'Ophrys fusca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys holoserica']], [], false).length,
      'Ophrys holoserica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys insectifera']], [], false)
        .length,
      'Ophrys insectifera'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ophrys iricolor']], [], false).length,
      'Ophrys iricolor'
    );
    assert.equal(
      7041,
      filterAndSort(crops, [nameToCrop['Ophrys lutea']], [], false).length,
      'Ophrys lutea'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ophrys scolopax']], [], false).length,
      'Ophrys scolopax'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ophrys sphegodes']], [], false).length,
      'Ophrys sphegodes'
    );
    assert.equal(
      7041,
      filterAndSort(crops, [nameToCrop['Ophrys tenthredinifera']], [], false)
        .length,
      'Ophrys tenthredinifera'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ophrys vernixia']], [], false).length,
      'Ophrys vernixia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Oplopanax horridus']], [], false)
        .length,
      'Oplopanax horridus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Oplopanax japonicus']], [], false)
        .length,
      'Oplopanax japonicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Opopanax chironium']], [], false)
        .length,
      'Opopanax chironium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Opuntia compressa']], [], false).length,
      'Opuntia compressa'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia erinacea']], [], false).length,
      'Opuntia erinacea'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia ficus-indica']], [], false)
        .length,
      'Opuntia ficus-indica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Opuntia fragilis']], [], false).length,
      'Opuntia fragilis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Opuntia howeyi']], [], false).length,
      'Opuntia howeyi'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia imbricata']], [], false).length,
      'Opuntia imbricata'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia littoralis']], [], false)
        .length,
      'Opuntia littoralis'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia macrorhiza']], [], false)
        .length,
      'Opuntia macrorhiza'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Opuntia microdasys']], [], false)
        .length,
      'Opuntia microdasys'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Opuntia phaeacantha']], [], false)
        .length,
      'Opuntia phaeacantha'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Opuntia polyacantha']], [], false)
        .length,
      'Opuntia polyacantha'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Opuntia ramosissima']], [], false)
        .length,
      'Opuntia ramosissima'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orchis coriophora']], [], false).length,
      'Orchis coriophora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Orchis italica']], [], false).length,
      'Orchis italica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orchis laxiflora']], [], false).length,
      'Orchis laxiflora'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orchis mascula']], [], false).length,
      'Orchis mascula'
    );
    assert.equal(
      6403,
      filterAndSort(crops, [nameToCrop['Orchis militaris']], [], false).length,
      'Orchis militaris'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orchis morio']], [], false).length,
      'Orchis morio'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orchis ustulata']], [], false).length,
      'Orchis ustulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oreomyrrhis hookeri']], [], false)
        .length,
      'Oreomyrrhis hookeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum compactum']], [], false)
        .length,
      'Origanum compactum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum dictamnus']], [], false)
        .length,
      'Origanum dictamnus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum glandulosum']], [], false)
        .length,
      'Origanum glandulosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum isthmicum']], [], false)
        .length,
      'Origanum isthmicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum majorana']], [], false).length,
      'Origanum majorana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Origanum onites']], [], false).length,
      'Origanum onites'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Origanum syriacum']], [], false).length,
      'Origanum syriacum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum virens']], [], false).length,
      'Origanum virens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Origanum vulgare']], [], false).length,
      'Origanum vulgare'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Origanum vulgare hirtum']], [], false)
        .length,
      'Origanum vulgare hirtum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Origanum x hybridum']], [], false)
        .length,
      'Origanum x hybridum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Origanum x majoricum']], [], false)
        .length,
      'Origanum x majoricum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Orixa japonica']], [], false).length,
      'Orixa japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ornithogalum narbonense']], [], false)
        .length,
      'Ornithogalum narbonense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ornithogalum pyrenaicum']], [], false)
        .length,
      'Ornithogalum pyrenaicum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ornithogalum umbellatum']], [], false)
        .length,
      'Ornithogalum umbellatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ornithopus sativus']], [], false)
        .length,
      'Ornithopus sativus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche ammophyla']], [], false)
        .length,
      'Orobanche ammophyla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche californica']], [], false)
        .length,
      'Orobanche californica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche cernua']], [], false).length,
      'Orobanche cernua'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche fasciculata']], [], false)
        .length,
      'Orobanche fasciculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Orobanche grayana']], [], false).length,
      'Orobanche grayana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche ludoviciana']], [], false)
        .length,
      'Orobanche ludoviciana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Orobanche minor']], [], false).length,
      'Orobanche minor'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Orobanche pinorum']], [], false).length,
      'Orobanche pinorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orobanche tuberosa']], [], false)
        .length,
      'Orobanche tuberosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Orobanche uniflora']], [], false)
        .length,
      'Orobanche uniflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orogenia linearifolia']], [], false)
        .length,
      'Orogenia linearifolia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Orontium aquaticum']], [], false)
        .length,
      'Orontium aquaticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orostachys japonica']], [], false)
        .length,
      'Orostachys japonica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Orthilia secunda']], [], false).length,
      'Orthilia secunda'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Orychophragmus violaceus']], [], false)
        .length,
      'Orychophragmus violaceus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oryzopsis asperifolia']], [], false)
        .length,
      'Oryzopsis asperifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Osbeckia chinensis']], [], false)
        .length,
      'Osbeckia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmanthus americana']], [], false)
        .length,
      'Osmanthus americana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmanthus decorus']], [], false).length,
      'Osmanthus decorus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmanthus delavayi']], [], false)
        .length,
      'Osmanthus delavayi'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Osmanthus fragrans']], [], false)
        .length,
      'Osmanthus fragrans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmanthus heterophyllus']], [], false)
        .length,
      'Osmanthus heterophyllus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmanthus x burkwoodii']], [], false)
        .length,
      'Osmanthus x burkwoodii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza aristata']], [], false)
        .length,
      'Osmorhiza aristata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza chilensis']], [], false)
        .length,
      'Osmorhiza chilensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza claytonii']], [], false)
        .length,
      'Osmorhiza claytonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza longistylis']], [], false)
        .length,
      'Osmorhiza longistylis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza obtusa']], [], false).length,
      'Osmorhiza obtusa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmorhiza occidentalis']], [], false)
        .length,
      'Osmorhiza occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmunda asiatica']], [], false).length,
      'Osmunda asiatica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Osmunda cinnamomea']], [], false)
        .length,
      'Osmunda cinnamomea'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Osmunda claytoniana']], [], false)
        .length,
      'Osmunda claytoniana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Osmunda japonica']], [], false).length,
      'Osmunda japonica'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Osmunda regalis']], [], false).length,
      'Osmunda regalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Osteomeles obtusifolia']], [], false)
        .length,
      'Osteomeles obtusifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Osteomeles schwerinae']], [], false)
        .length,
      'Osteomeles schwerinae'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Osteomeles subrotunda']], [], false)
        .length,
      'Osteomeles subrotunda'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ostrya carpinifolia']], [], false)
        .length,
      'Ostrya carpinifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ostrya virginiana']], [], false).length,
      'Ostrya virginiana'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Oxalis acetosella']], [], false).length,
      'Oxalis acetosella'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Oxalis adenophylla']], [], false)
        .length,
      'Oxalis adenophylla'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Oxalis articulata']], [], false).length,
      'Oxalis articulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis barrelieri']], [], false).length,
      'Oxalis barrelieri'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Oxalis bifida']], [], false).length,
      'Oxalis bifida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Oxalis corniculata']], [], false)
        .length,
      'Oxalis corniculata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Oxalis corymbosa']], [], false).length,
      'Oxalis corymbosa'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Oxalis deppei']], [], false).length,
      'Oxalis deppei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis enneaphylla']], [], false)
        .length,
      'Oxalis enneaphylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis europaea']], [], false).length,
      'Oxalis europaea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Oxalis exilis']], [], false).length,
      'Oxalis exilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis frutescens']], [], false).length,
      'Oxalis frutescens'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Oxalis lasiandra']], [], false).length,
      'Oxalis lasiandra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis magellanica']], [], false)
        .length,
      'Oxalis magellanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis montana']], [], false).length,
      'Oxalis montana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis oregana']], [], false).length,
      'Oxalis oregana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Oxalis pes-caprae']], [], false).length,
      'Oxalis pes-caprae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis stricta']], [], false).length,
      'Oxalis stricta'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Oxalis tetraphylla']], [], false)
        .length,
      'Oxalis tetraphylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis triangularis']], [], false)
        .length,
      'Oxalis triangularis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Oxalis tuberosa']], [], false).length,
      'Oxalis tuberosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Oxalis violacea']], [], false).length,
      'Oxalis violacea'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Oxydendrum arboreum']], [], false)
        .length,
      'Oxydendrum arboreum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Oxyria digyna']], [], false).length,
      'Oxyria digyna'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Oxytropis lambertii']], [], false)
        .length,
      'Oxytropis lambertii'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Pachyphragma macrophylla']], [], false)
        .length,
      'Pachyphragma macrophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pachyrhizus ahipa']], [], false).length,
      'Pachyrhizus ahipa'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Pachyrhizus tuberosus']], [], false)
        .length,
      'Pachyrhizus tuberosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pachysandra terminalis']], [], false)
        .length,
      'Pachysandra terminalis'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Packera aurea']], [], false).length,
      'Packera aurea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Paederia scandens']], [], false).length,
      'Paederia scandens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Paeonia anomala']], [], false).length,
      'Paeonia anomala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia brownii']], [], false).length,
      'Paeonia brownii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Paeonia caucasica']], [], false).length,
      'Paeonia caucasica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia delavayi']], [], false).length,
      'Paeonia delavayi'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Paeonia emodi']], [], false).length,
      'Paeonia emodi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia hybrida']], [], false).length,
      'Paeonia hybrida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia japonica']], [], false).length,
      'Paeonia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia lactiflora']], [], false)
        .length,
      'Paeonia lactiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia lutea']], [], false).length,
      'Paeonia lutea'
    );
    assert.equal(
      7206,
      filterAndSort(crops, [nameToCrop['Paeonia mascula']], [], false).length,
      'Paeonia mascula'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia obovata']], [], false).length,
      'Paeonia obovata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Paeonia officinalis']], [], false)
        .length,
      'Paeonia officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia ostii']], [], false).length,
      'Paeonia ostii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia potaninii']], [], false).length,
      'Paeonia potaninii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia suffruticosa']], [], false)
        .length,
      'Paeonia suffruticosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paeonia szechuanica']], [], false)
        .length,
      'Paeonia szechuanica'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Paeonia veitchii']], [], false).length,
      'Paeonia veitchii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paliuris ramosissimus']], [], false)
        .length,
      'Paliuris ramosissimus'
    );
    assert.equal(
      7206,
      filterAndSort(crops, [nameToCrop['Paliuris spina-christi']], [], false)
        .length,
      'Paliuris spina-christi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Panax ginseng']], [], false).length,
      'Panax ginseng'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Panax japonicus']], [], false).length,
      'Panax japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Panax pseudoginseng']], [], false)
        .length,
      'Panax pseudoginseng'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Panax pseudoginseng notoginseng']],
        [],
        false
      ).length,
      'Panax pseudoginseng notoginseng'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Panax quinquefolius']], [], false)
        .length,
      'Panax quinquefolius'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Panax trifolius']], [], false).length,
      'Panax trifolius'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Pancratium maritimum']], [], false)
        .length,
      'Pancratium maritimum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum antidotale']], [], false)
        .length,
      'Panicum antidotale'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Panicum capillare']], [], false).length,
      'Panicum capillare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum decompositum']], [], false)
        .length,
      'Panicum decompositum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum milliaceum']], [], false)
        .length,
      'Panicum milliaceum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum obtusum']], [], false).length,
      'Panicum obtusum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum sonorum']], [], false).length,
      'Panicum sonorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Panicum urvilleanum']], [], false)
        .length,
      'Panicum urvilleanum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Papaver argemone']], [], false).length,
      'Papaver argemone'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Papaver dubium']], [], false).length,
      'Papaver dubium'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Papaver nudicaule']], [], false).length,
      'Papaver nudicaule'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Papaver orientale']], [], false).length,
      'Papaver orientale'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Papaver rhoeas']], [], false).length,
      'Papaver rhoeas'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Papaver somniferum']], [], false)
        .length,
      'Papaver somniferum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Parajubaea cocoides']], [], false)
        .length,
      'Parajubaea cocoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Parietaria judaica']], [], false)
        .length,
      'Parietaria judaica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Parietaria officinalis']], [], false)
        .length,
      'Parietaria officinalis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Paris polyphylla']], [], false).length,
      'Paris polyphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Paris quadrifolia']], [], false).length,
      'Paris quadrifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Parnassia cabulica']], [], false)
        .length,
      'Parnassia cabulica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Parnassia palustris']], [], false)
        .length,
      'Parnassia palustris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Paronychia argentea']], [], false)
        .length,
      'Paronychia argentea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Paronychia capitata']], [], false)
        .length,
      'Paronychia capitata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Paronychia jamesii']], [], false)
        .length,
      'Paronychia jamesii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Parosella lanata']], [], false).length,
      'Parosella lanata'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Parrotiopsis jacquemontiana']],
        [],
        false
      ).length,
      'Parrotiopsis jacquemontiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Parryella filifolia']], [], false)
        .length,
      'Parryella filifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Parthenium argentatum']], [], false)
        .length,
      'Parthenium argentatum'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Parthenium integrifolium']], [], false)
        .length,
      'Parthenium integrifolium'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Parthenocissus himalayana']], [], false)
        .length,
      'Parthenocissus himalayana'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Parthenocissus quinquefolia']],
        [],
        false
      ).length,
      'Parthenocissus quinquefolia'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Parthenocissus tricuspidata']],
        [],
        false
      ).length,
      'Parthenocissus tricuspidata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Passiflora actinia']], [], false)
        .length,
      'Passiflora actinia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Passiflora caerulea']], [], false)
        .length,
      'Passiflora caerulea'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Passiflora edulis']], [], false).length,
      'Passiflora edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Passiflora herbertiana']], [], false)
        .length,
      'Passiflora herbertiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Passiflora incarnata']], [], false)
        .length,
      'Passiflora incarnata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Passiflora membranacea']], [], false)
        .length,
      'Passiflora membranacea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Passiflora mollisima']], [], false)
        .length,
      'Passiflora mollisima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Passiflora  species']], [], false)
        .length,
      'Passiflora  species'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Passiflora tetrandra']], [], false)
        .length,
      'Passiflora tetrandra'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Passiflora umbilicata']], [], false)
        .length,
      'Passiflora umbilicata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Passiflora x colvillii']], [], false)
        .length,
      'Passiflora x colvillii'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Passiflora x exoniensis']], [], false)
        .length,
      'Passiflora x exoniensis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Pastinaca sativa']], [], false).length,
      'Pastinaca sativa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Patrinia scabiosifolia']], [], false)
        .length,
      'Patrinia scabiosifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Patrinia triloba']], [], false).length,
      'Patrinia triloba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Patrinia villosa']], [], false).length,
      'Patrinia villosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Paulownia tomentosa']], [], false)
        .length,
      'Paulownia tomentosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pectis angustifolia']], [], false)
        .length,
      'Pectis angustifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pectis papposa']], [], false).length,
      'Pectis papposa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pedicularis arctica']], [], false)
        .length,
      'Pedicularis arctica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pedicularis bicornuta']], [], false)
        .length,
      'Pedicularis bicornuta'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Pedicularis canadensis']], [], false)
        .length,
      'Pedicularis canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis gloriosa']], [], false)
        .length,
      'Pedicularis gloriosa'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Pedicularis hirsuta']], [], false)
        .length,
      'Pedicularis hirsuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis kanei']], [], false).length,
      'Pedicularis kanei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis lanceolata']], [], false)
        .length,
      'Pedicularis lanceolata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis langsdorffii']], [], false)
        .length,
      'Pedicularis langsdorffii'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Pedicularis longiflora tubiformis']],
        [],
        false
      ).length,
      'Pedicularis longiflora tubiformis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pedicularis oliveriana']], [], false)
        .length,
      'Pedicularis oliveriana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pedicularis pyramidata']], [], false)
        .length,
      'Pedicularis pyramidata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis resupinata']], [], false)
        .length,
      'Pedicularis resupinata'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Pedicularis sceptrum carolinum']],
        [],
        false
      ).length,
      'Pedicularis sceptrum carolinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pedicularis sudetica']], [], false)
        .length,
      'Pedicularis sudetica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Peganum harmala']], [], false).length,
      'Peganum harmala'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pelargonium acetosum']], [], false)
        .length,
      'Pelargonium acetosum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium australe']], [], false)
        .length,
      'Pelargonium australe'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pelargonium bowkeri']], [], false)
        .length,
      'Pelargonium bowkeri'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium capitatum']], [], false)
        .length,
      'Pelargonium capitatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium crispum']], [], false)
        .length,
      'Pelargonium crispum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium exstipulatum']], [], false)
        .length,
      'Pelargonium exstipulatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium fragrans']], [], false)
        .length,
      'Pelargonium fragrans'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium fulgidum']], [], false)
        .length,
      'Pelargonium fulgidum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium glutinosum']], [], false)
        .length,
      'Pelargonium glutinosum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium graveolens']], [], false)
        .length,
      'Pelargonium graveolens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium incrassatum']], [], false)
        .length,
      'Pelargonium incrassatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium odoratissimum']], [], false)
        .length,
      'Pelargonium odoratissimum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium peltatum']], [], false)
        .length,
      'Pelargonium peltatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium quercifolium']], [], false)
        .length,
      'Pelargonium quercifolium'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium radens']], [], false)
        .length,
      'Pelargonium radens'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium tomentosum']], [], false)
        .length,
      'Pelargonium tomentosum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium triste']], [], false)
        .length,
      'Pelargonium triste'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium vitifolium']], [], false)
        .length,
      'Pelargonium vitifolium'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pelargonium zonale']], [], false)
        .length,
      'Pelargonium zonale'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Peltandra sagittifolia']], [], false)
        .length,
      'Peltandra sagittifolia'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Peltandra virginica']], [], false)
        .length,
      'Peltandra virginica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peltaria alliacea']], [], false).length,
      'Peltaria alliacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peltaria turkmena']], [], false).length,
      'Peltaria turkmena'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pennisetum alopecuroides']], [], false)
        .length,
      'Pennisetum alopecuroides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pennisetum cereale']], [], false)
        .length,
      'Pennisetum cereale'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pennisetum glaucum']], [], false)
        .length,
      'Pennisetum glaucum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Penstemon acuminatus']], [], false)
        .length,
      'Penstemon acuminatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Penstemon confertus']], [], false)
        .length,
      'Penstemon confertus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Penstemon grandiflorus']], [], false)
        .length,
      'Penstemon grandiflorus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Penstemon procerus']], [], false)
        .length,
      'Penstemon procerus'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Pentachondra pumila']], [], false)
        .length,
      'Pentachondra pumila'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pentaglottis sempervirens']], [], false)
        .length,
      'Pentaglottis sempervirens'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Penthorum sedoides']], [], false)
        .length,
      'Penthorum sedoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peracarpa carnosa']], [], false).length,
      'Peracarpa carnosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Peraphyllum ramosissimum']], [], false)
        .length,
      'Peraphyllum ramosissimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pericome caudata']], [], false).length,
      'Pericome caudata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Perideridia gairdneri']], [], false)
        .length,
      'Perideridia gairdneri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Perideridia oregana']], [], false)
        .length,
      'Perideridia oregana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Perilla frutescens']], [], false)
        .length,
      'Perilla frutescens'
    );
    assert.equal(
      7202,
      filterAndSort(
        crops,
        [nameToCrop['Perilla frutescens nankinensis']],
        [],
        false
      ).length,
      'Perilla frutescens nankinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Periploca graeca']], [], false).length,
      'Periploca graeca'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Perovskia atriplicifolia']], [], false)
        .length,
      'Perovskia atriplicifolia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Persea borbonia']], [], false).length,
      'Persea borbonia'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Persea duthiei']], [], false).length,
      'Persea duthiei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Persea edulis']], [], false).length,
      'Persea edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Persea gammieana']], [], false).length,
      'Persea gammieana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Persea villosa']], [], false).length,
      'Persea villosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia acerosa']], [], false).length,
      'Persoonia acerosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia arborea']], [], false).length,
      'Persoonia arborea'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Persoonia chamaepeuce']], [], false)
        .length,
      'Persoonia chamaepeuce'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia curvifolia']], [], false)
        .length,
      'Persoonia curvifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia fastigiata']], [], false)
        .length,
      'Persoonia fastigiata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia gunnii']], [], false).length,
      'Persoonia gunnii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia juniperina']], [], false)
        .length,
      'Persoonia juniperina'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Persoonia levis']], [], false).length,
      'Persoonia levis'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Persoonia linearis']], [], false)
        .length,
      'Persoonia linearis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia mollis']], [], false).length,
      'Persoonia mollis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia oxycocceoides']], [], false)
        .length,
      'Persoonia oxycocceoides'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Persoonia pinifolia']], [], false)
        .length,
      'Persoonia pinifolia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia rigida']], [], false).length,
      'Persoonia rigida'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Persoonia subvelutina']], [], false)
        .length,
      'Persoonia subvelutina'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Petasites albus']], [], false).length,
      'Petasites albus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Petasites frigidus']], [], false)
        .length,
      'Petasites frigidus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Petasites hybridus']], [], false)
        .length,
      'Petasites hybridus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Petasites hyperboreus']], [], false)
        .length,
      'Petasites hyperboreus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Petasites japonicus']], [], false)
        .length,
      'Petasites japonicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Petasites palmatus']], [], false)
        .length,
      'Petasites palmatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Petasites saggitatus']], [], false)
        .length,
      'Petasites saggitatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Petasites speciosa']], [], false)
        .length,
      'Petasites speciosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Petasites vitifolius']], [], false)
        .length,
      'Petasites vitifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peteria scoparia']], [], false).length,
      'Peteria scoparia'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Petroselinum crispum']], [], false)
        .length,
      'Petroselinum crispum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Petroselinum crispum tuberosum']],
        [],
        false
      ).length,
      'Petroselinum crispum tuberosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Petroselinum segetum']], [], false)
        .length,
      'Petroselinum segetum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum cervaria']], [], false)
        .length,
      'Peucedanum cervaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum japonicum']], [], false)
        .length,
      'Peucedanum japonicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum multivittatum']], [], false)
        .length,
      'Peucedanum multivittatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum officinale']], [], false)
        .length,
      'Peucedanum officinale'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Peucedanum oreoselinum']], [], false)
        .length,
      'Peucedanum oreoselinum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Peucedanum ostruthium']], [], false)
        .length,
      'Peucedanum ostruthium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum palustre']], [], false)
        .length,
      'Peucedanum palustre'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum praeruptorum']], [], false)
        .length,
      'Peucedanum praeruptorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Peucedanum terebinthaceum']], [], false)
        .length,
      'Peucedanum terebinthaceum'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Peumus boldus']], [], false).length,
      'Peumus boldus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phacelia ramosissima']], [], false)
        .length,
      'Phacelia ramosissima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Phacelia tanacetifolia']], [], false)
        .length,
      'Phacelia tanacetifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Phalaris arundinacea']], [], false)
        .length,
      'Phalaris arundinacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phalaris canariensis']], [], false)
        .length,
      'Phalaris canariensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phalaris minor']], [], false).length,
      'Phalaris minor'
    );
    assert.equal(
      6504,
      filterAndSort(crops, [nameToCrop['Phaseolus coccineus']], [], false)
        .length,
      'Phaseolus coccineus'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Phaseolus lunatus']], [], false).length,
      'Phaseolus lunatus'
    );
    assert.equal(
      6500,
      filterAndSort(crops, [nameToCrop['Phaseolus vulgaris']], [], false)
        .length,
      'Phaseolus vulgaris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Phellodendron amurense']], [], false)
        .length,
      'Phellodendron amurense'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Phellodendron amurense sachalinense']],
        [],
        false
      ).length,
      'Phellodendron amurense sachalinense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Phellodendron chinense']], [], false)
        .length,
      'Phellodendron chinense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Phellodendron lavallei']], [], false)
        .length,
      'Phellodendron lavallei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Philadelphus coronarius']], [], false)
        .length,
      'Philadelphus coronarius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Philadelphus delavayi']], [], false)
        .length,
      'Philadelphus delavayi'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Philadelphus lewisii']], [], false)
        .length,
      'Philadelphus lewisii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Philadelphus microphyllus']], [], false)
        .length,
      'Philadelphus microphyllus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Philadelphus pubescens']], [], false)
        .length,
      'Philadelphus pubescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Philadelphus purpurascens']], [], false)
        .length,
      'Philadelphus purpurascens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Philadelphus x virginalis']], [], false)
        .length,
      'Philadelphus x virginalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phillyrea latifolia']], [], false)
        .length,
      'Phillyrea latifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Phleum pratense']], [], false).length,
      'Phleum pratense'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Phlomis fruticosa']], [], false).length,
      'Phlomis fruticosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Phlomis lychnitis']], [], false).length,
      'Phlomis lychnitis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Phlomis russeliana']], [], false)
        .length,
      'Phlomis russeliana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Phlomis samia']], [], false).length,
      'Phlomis samia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Phlomis tuberosa']], [], false).length,
      'Phlomis tuberosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Phlomis umbrosa']], [], false).length,
      'Phlomis umbrosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Phlox paniculata']], [], false).length,
      'Phlox paniculata'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Phoenix reclinata']], [], false).length,
      'Phoenix reclinata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Phoenix sylvestris']], [], false)
        .length,
      'Phoenix sylvestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phoradendron leucarpum']], [], false)
        .length,
      'Phoradendron leucarpum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phormium cookianum']], [], false)
        .length,
      'Phormium cookianum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phormium tenax']], [], false).length,
      'Phormium tenax'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Photinia arbutifolia']], [], false)
        .length,
      'Photinia arbutifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Photinia arguta']], [], false).length,
      'Photinia arguta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Photinia bodinieri']], [], false)
        .length,
      'Photinia bodinieri'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Photinia davidiana']], [], false)
        .length,
      'Photinia davidiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Photinia glabra']], [], false).length,
      'Photinia glabra'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Photinia parvifolia']], [], false)
        .length,
      'Photinia parvifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Photinia serratifolia']], [], false)
        .length,
      'Photinia serratifolia'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Photinia villosa']], [], false).length,
      'Photinia villosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Photinia x fraseri']], [], false)
        .length,
      'Photinia x fraseri'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Phragmites australis']], [], false)
        .length,
      'Phragmites australis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phryma leptostachya']], [], false)
        .length,
      'Phryma leptostachya'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Phyla nodiflora']], [], false).length,
      'Phyla nodiflora'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllocladus alpinus']], [], false)
        .length,
      'Phyllocladus alpinus'
    );
    assert.equal(
      7037,
      filterAndSort(
        crops,
        [nameToCrop['Phyllocladus aspleniifolius']],
        [],
        false
      ).length,
      'Phyllocladus aspleniifolius'
    );
    assert.equal(
      7037,
      filterAndSort(
        crops,
        [nameToCrop['Phyllocladus trichomanoides']],
        [],
        false
      ).length,
      'Phyllocladus trichomanoides'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Phyllospadix scouleri']], [], false)
        .length,
      'Phyllospadix scouleri'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Phyllospadix torreyi']], [], false)
        .length,
      'Phyllospadix torreyi'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys angusta']], [], false)
        .length,
      'Phyllostachys angusta'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys arcana']], [], false)
        .length,
      'Phyllostachys arcana'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Phyllostachys aurea']], [], false)
        .length,
      'Phyllostachys aurea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys aureosulcata']],
        [],
        false
      ).length,
      'Phyllostachys aureosulcata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys bambusoides']], [], false)
        .length,
      'Phyllostachys bambusoides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Phyllostachys bissetti']], [], false)
        .length,
      'Phyllostachys bissetti'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys dulcis']], [], false)
        .length,
      'Phyllostachys dulcis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys edulis']], [], false)
        .length,
      'Phyllostachys edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys flexuosa']], [], false)
        .length,
      'Phyllostachys flexuosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys glauca']], [], false)
        .length,
      'Phyllostachys glauca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys iridescens']], [], false)
        .length,
      'Phyllostachys iridescens'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys makinoi']], [], false)
        .length,
      'Phyllostachys makinoi'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys meyeri']], [], false)
        .length,
      'Phyllostachys meyeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys nidularia']], [], false)
        .length,
      'Phyllostachys nidularia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys nigra']], [], false)
        .length,
      'Phyllostachys nigra'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys nigra henonis']],
        [],
        false
      ).length,
      'Phyllostachys nigra henonis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys nigra punctata']],
        [],
        false
      ).length,
      'Phyllostachys nigra punctata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys nuda']], [], false)
        .length,
      'Phyllostachys nuda'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys parvifolia']], [], false)
        .length,
      'Phyllostachys parvifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys praecox']], [], false)
        .length,
      'Phyllostachys praecox'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys propinqua']], [], false)
        .length,
      'Phyllostachys propinqua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys purpurata']], [], false)
        .length,
      'Phyllostachys purpurata'
    );
    assert.equal(
      7205,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys rubromarginata']],
        [],
        false
      ).length,
      'Phyllostachys rubromarginata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyllostachys sulphurea']], [], false)
        .length,
      'Phyllostachys sulphurea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys sulphurea viridis']],
        [],
        false
      ).length,
      'Phyllostachys sulphurea viridis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Phyllostachys viridiglaucescens']],
        [],
        false
      ).length,
      'Phyllostachys viridiglaucescens'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phyllostachys vivax']], [], false)
        .length,
      'Phyllostachys vivax'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Physaliastrum echinatum']], [], false)
        .length,
      'Physaliastrum echinatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Physalis acutifolia']], [], false)
        .length,
      'Physalis acutifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis alkekengi']], [], false)
        .length,
      'Physalis alkekengi'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Physalis alkekengi franchetii']],
        [],
        false
      ).length,
      'Physalis alkekengi franchetii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis angulata']], [], false).length,
      'Physalis angulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis angustifolia']], [], false)
        .length,
      'Physalis angustifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis arenicola']], [], false)
        .length,
      'Physalis arenicola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis carpenteri']], [], false)
        .length,
      'Physalis carpenteri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis caudella']], [], false).length,
      'Physalis caudella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis crassifolia']], [], false)
        .length,
      'Physalis crassifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis foetens']], [], false).length,
      'Physalis foetens'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Physalis foetens neomexicana']],
        [],
        false
      ).length,
      'Physalis foetens neomexicana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis greenei']], [], false).length,
      'Physalis greenei'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Physalis hederaefolia cordifolia']],
        [],
        false
      ).length,
      'Physalis hederaefolia cordifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Physalis heterophylla']], [], false)
        .length,
      'Physalis heterophylla'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Physalis ixocarpa']], [], false).length,
      'Physalis ixocarpa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis lanceolata']], [], false)
        .length,
      'Physalis lanceolata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis latiphysa']], [], false)
        .length,
      'Physalis latiphysa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis macrophysa']], [], false)
        .length,
      'Physalis macrophysa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis minima']], [], false).length,
      'Physalis minima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis missouriensis']], [], false)
        .length,
      'Physalis missouriensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis obscura']], [], false).length,
      'Physalis obscura'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Physalis peruviana']], [], false)
        .length,
      'Physalis peruviana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis philadelphica']], [], false)
        .length,
      'Physalis philadelphica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Physalis pruinosa']], [], false).length,
      'Physalis pruinosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis pubescens']], [], false)
        .length,
      'Physalis pubescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis pumila']], [], false).length,
      'Physalis pumila'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Physalis subglabrata']], [], false)
        .length,
      'Physalis subglabrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis variovestita']], [], false)
        .length,
      'Physalis variovestita'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis virginiana']], [], false)
        .length,
      'Physalis virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Physalis virginiana sonorae']],
        [],
        false
      ).length,
      'Physalis virginiana sonorae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis viscosa']], [], false).length,
      'Physalis viscosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Physalis wrightii']], [], false).length,
      'Physalis wrightii'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Physocarpus opulifolius']], [], false)
        .length,
      'Physocarpus opulifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyteuma japonicum']], [], false)
        .length,
      'Phyteuma japonicum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Phyteuma orbiculare']], [], false)
        .length,
      'Phyteuma orbiculare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phyteuma spicatum']], [], false).length,
      'Phyteuma spicatum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Phytolacca acinosa']], [], false)
        .length,
      'Phytolacca acinosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Phytolacca americana']], [], false)
        .length,
      'Phytolacca americana'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Phytolacca dioica']], [], false).length,
      'Phytolacca dioica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Phytolacca esculenta']], [], false)
        .length,
      'Phytolacca esculenta'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Picea abies']], [], false).length,
      'Picea abies'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Picea asperata']], [], false).length,
      'Picea asperata'
    );
    assert.equal(
      7198,
      filterAndSort(crops, [nameToCrop['Picea brachytyla']], [], false).length,
      'Picea brachytyla'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Picea breweriana']], [], false).length,
      'Picea breweriana'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Picea engelmannii']], [], false).length,
      'Picea engelmannii'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Picea glauca']], [], false).length,
      'Picea glauca'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Picea glehnii']], [], false).length,
      'Picea glehnii'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Picea jezoensis']], [], false).length,
      'Picea jezoensis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Picea mariana']], [], false).length,
      'Picea mariana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Picea omorika']], [], false).length,
      'Picea omorika'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Picea orientalis']], [], false).length,
      'Picea orientalis'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Picea pungens']], [], false).length,
      'Picea pungens'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Picea purpurea']], [], false).length,
      'Picea purpurea'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Picea rubens']], [], false).length,
      'Picea rubens'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Picea sitchensis']], [], false).length,
      'Picea sitchensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Picea smithiana']], [], false).length,
      'Picea smithiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Picrasma quassioides']], [], false)
        .length,
      'Picrasma quassioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Picris echioides']], [], false).length,
      'Picris echioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Picris hieracioides']], [], false)
        .length,
      'Picris hieracioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Picrorhiza kurroa']], [], false).length,
      'Picrorhiza kurroa'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Picrorhiza scrophulariiflora']],
        [],
        false
      ).length,
      'Picrorhiza scrophulariiflora'
    );
    assert.equal(
      7059,
      filterAndSort(crops, [nameToCrop['Pieris japonica']], [], false).length,
      'Pieris japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Pilosella officinarum']], [], false)
        .length,
      'Pilosella officinarum'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea arenaria']], [], false).length,
      'Pimelea arenaria'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea axiflora']], [], false).length,
      'Pimelea axiflora'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea ligustrina']], [], false)
        .length,
      'Pimelea ligustrina'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea microcephala']], [], false)
        .length,
      'Pimelea microcephala'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea pauciflora']], [], false)
        .length,
      'Pimelea pauciflora'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Pimelea prostrata']], [], false).length,
      'Pimelea prostrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Pimpinella anisum']], [], false).length,
      'Pimpinella anisum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pimpinella diversifolia']], [], false)
        .length,
      'Pimpinella diversifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pimpinella major']], [], false).length,
      'Pimpinella major'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Pimpinella saxifraga']], [], false)
        .length,
      'Pimpinella saxifraga'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Pinckneya pubens']], [], false).length,
      'Pinckneya pubens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pinellia pedatisecta']], [], false)
        .length,
      'Pinellia pedatisecta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pinellia ternata']], [], false).length,
      'Pinellia ternata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pinellia tripartita']], [], false)
        .length,
      'Pinellia tripartita'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Pinguicula vulgaris']], [], false)
        .length,
      'Pinguicula vulgaris'
    );
    assert.equal(
      6637,
      filterAndSort(crops, [nameToCrop['Pinus albicaulis']], [], false).length,
      'Pinus albicaulis'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Pinus aristata']], [], false).length,
      'Pinus aristata'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus armandii']], [], false).length,
      'Pinus armandii'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus ayacahuite']], [], false).length,
      'Pinus ayacahuite'
    );
    assert.equal(
      6640,
      filterAndSort(crops, [nameToCrop['Pinus banksiana']], [], false).length,
      'Pinus banksiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pinus bungeana']], [], false).length,
      'Pinus bungeana'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pinus californiarum']], [], false)
        .length,
      'Pinus californiarum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus cembra']], [], false).length,
      'Pinus cembra'
    );
    assert.equal(
      6001,
      filterAndSort(crops, [nameToCrop['Pinus cembra sibirica']], [], false)
        .length,
      'Pinus cembra sibirica'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus cembroides']], [], false).length,
      'Pinus cembroides'
    );
    assert.equal(
      7196,
      filterAndSort(
        crops,
        [nameToCrop['Pinus cembroides orizabensis']],
        [],
        false
      ).length,
      'Pinus cembroides orizabensis'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Pinus contorta']], [], false).length,
      'Pinus contorta'
    );
    assert.equal(
      7217,
      filterAndSort(crops, [nameToCrop['Pinus contorta latifolia']], [], false)
        .length,
      'Pinus contorta latifolia'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus coulteri']], [], false).length,
      'Pinus coulteri'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus culminicola']], [], false).length,
      'Pinus culminicola'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus densiflora']], [], false).length,
      'Pinus densiflora'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus discolor']], [], false).length,
      'Pinus discolor'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus echinata']], [], false).length,
      'Pinus echinata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus edulis']], [], false).length,
      'Pinus edulis'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Pinus flexilis']], [], false).length,
      'Pinus flexilis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus gerardiana']], [], false).length,
      'Pinus gerardiana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Pinus halepensis']], [], false).length,
      'Pinus halepensis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus henryi']], [], false).length,
      'Pinus henryi'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus jeffreyi']], [], false).length,
      'Pinus jeffreyi'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus johannis']], [], false).length,
      'Pinus johannis'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Pinus koraiensis']], [], false).length,
      'Pinus koraiensis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus lambertiana']], [], false).length,
      'Pinus lambertiana'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Pinus leiophylla']], [], false).length,
      'Pinus leiophylla'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus massoniana']], [], false).length,
      'Pinus massoniana'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus monophylla']], [], false).length,
      'Pinus monophylla'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Pinus montezumae']], [], false).length,
      'Pinus montezumae'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus monticola']], [], false).length,
      'Pinus monticola'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Pinus mugo']], [], false).length,
      'Pinus mugo'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus muricata']], [], false).length,
      'Pinus muricata'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus nelsonii']], [], false).length,
      'Pinus nelsonii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pinus nigra']], [], false).length,
      'Pinus nigra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pinus nigra laricio']], [], false)
        .length,
      'Pinus nigra laricio'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus palustris']], [], false).length,
      'Pinus palustris'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus parviflora']], [], false).length,
      'Pinus parviflora'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus patula']], [], false).length,
      'Pinus patula'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus pinaster']], [], false).length,
      'Pinus pinaster'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Pinus pinea']], [], false).length,
      'Pinus pinea'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus ponderosa']], [], false).length,
      'Pinus ponderosa'
    );
    assert.equal(
      6001,
      filterAndSort(crops, [nameToCrop['Pinus pumila']], [], false).length,
      'Pinus pumila'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus pungens']], [], false).length,
      'Pinus pungens'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus quadrifolia']], [], false).length,
      'Pinus quadrifolia'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus radiata']], [], false).length,
      'Pinus radiata'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus remota']], [], false).length,
      'Pinus remota'
    );
    assert.equal(
      7114,
      filterAndSort(crops, [nameToCrop['Pinus resinosa']], [], false).length,
      'Pinus resinosa'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus rigida']], [], false).length,
      'Pinus rigida'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pinus roxburghii']], [], false).length,
      'Pinus roxburghii'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus sabiniana']], [], false).length,
      'Pinus sabiniana'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus serotina']], [], false).length,
      'Pinus serotina'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus strobiformis']], [], false)
        .length,
      'Pinus strobiformis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus strobus']], [], false).length,
      'Pinus strobus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Pinus sylvestris']], [], false).length,
      'Pinus sylvestris'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pinus tabuliformis']], [], false)
        .length,
      'Pinus tabuliformis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus taeda']], [], false).length,
      'Pinus taeda'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus teocote']], [], false).length,
      'Pinus teocote'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus thunbergii']], [], false).length,
      'Pinus thunbergii'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus torreyana']], [], false).length,
      'Pinus torreyana'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus veitchii']], [], false).length,
      'Pinus veitchii'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Pinus virginiana']], [], false).length,
      'Pinus virginiana'
    );
    assert.equal(
      7196,
      filterAndSort(crops, [nameToCrop['Pinus wallichiana']], [], false).length,
      'Pinus wallichiana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pistacia atlantica']], [], false)
        .length,
      'Pistacia atlantica'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Pistacia atlantica cabulica']],
        [],
        false
      ).length,
      'Pistacia atlantica cabulica'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Pistacia chinensis']], [], false)
        .length,
      'Pistacia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Pistacia chinensis integerrima']],
        [],
        false
      ).length,
      'Pistacia chinensis integerrima'
    );
    assert.equal(
      6888,
      filterAndSort(crops, [nameToCrop['Pistacia lentiscus']], [], false)
        .length,
      'Pistacia lentiscus'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pistacia terebinthus']], [], false)
        .length,
      'Pistacia terebinthus'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pistacia vera']], [], false).length,
      'Pistacia vera'
    );
    assert.equal(
      7051,
      filterAndSort(crops, [nameToCrop['Pisum sativum']], [], false).length,
      'Pisum sativum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Pisum sativum arvense']], [], false)
        .length,
      'Pisum sativum arvense'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Pisum sativum elatius']], [], false)
        .length,
      'Pisum sativum elatius'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Pisum sativum macrocarpon']], [], false)
        .length,
      'Pisum sativum macrocarpon'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pittosporum balansae']], [], false)
        .length,
      'Pittosporum balansae'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Pittosporum bicolor']], [], false)
        .length,
      'Pittosporum bicolor'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pittosporum crassifolium']], [], false)
        .length,
      'Pittosporum crassifolium'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pittosporum eugenioides']], [], false)
        .length,
      'Pittosporum eugenioides'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pittosporum phillyreoides']], [], false)
        .length,
      'Pittosporum phillyreoides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Pittosporum ralphii']], [], false)
        .length,
      'Pittosporum ralphii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Pittosporum tenuifolium']], [], false)
        .length,
      'Pittosporum tenuifolium'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Pittosporum tobira']], [], false)
        .length,
      'Pittosporum tobira'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pittosporum undulatum']], [], false)
        .length,
      'Pittosporum undulatum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Plagianthus regius']], [], false)
        .length,
      'Plagianthus regius'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Plagiobothrys fulvus campestris']],
        [],
        false
      ).length,
      'Plagiobothrys fulvus campestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Planchonella australis']], [], false)
        .length,
      'Planchonella australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago affra']], [], false).length,
      'Plantago affra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago amplexicaulis']], [], false)
        .length,
      'Plantago amplexicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago arenaria']], [], false).length,
      'Plantago arenaria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago asiatica']], [], false).length,
      'Plantago asiatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago australis']], [], false)
        .length,
      'Plantago australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago camtschatica']], [], false)
        .length,
      'Plantago camtschatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago coronopus']], [], false)
        .length,
      'Plantago coronopus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago crassifolia']], [], false)
        .length,
      'Plantago crassifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Plantago cunninghamii']], [], false)
        .length,
      'Plantago cunninghamii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Plantago debilis']], [], false).length,
      'Plantago debilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago decipiens']], [], false)
        .length,
      'Plantago decipiens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago depressa']], [], false).length,
      'Plantago depressa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago hakusanensis']], [], false)
        .length,
      'Plantago hakusanensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago juncoides']], [], false)
        .length,
      'Plantago juncoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago lanceolata']], [], false)
        .length,
      'Plantago lanceolata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Plantago major']], [], false).length,
      'Plantago major'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago maritima']], [], false).length,
      'Plantago maritima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago media']], [], false).length,
      'Plantago media'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago oliganthus']], [], false)
        .length,
      'Plantago oliganthus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago ovata']], [], false).length,
      'Plantago ovata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago psyllia']], [], false).length,
      'Plantago psyllia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Plantago rugelii']], [], false).length,
      'Plantago rugelii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Platanthera bifolia']], [], false)
        .length,
      'Platanthera bifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Platanthera dilatata']], [], false)
        .length,
      'Platanthera dilatata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Platanus occidentalis']], [], false)
        .length,
      'Platanus occidentalis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Platanus orientalis']], [], false)
        .length,
      'Platanus orientalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Platycarya strobilacea']], [], false)
        .length,
      'Platycarya strobilacea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Platycodon grandiflorus']], [], false)
        .length,
      'Platycodon grandiflorus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Platycrater arguta']], [], false)
        .length,
      'Platycrater arguta'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Platystemon californicus']], [], false)
        .length,
      'Platystemon californicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Plectranthus kameba']], [], false)
        .length,
      'Plectranthus kameba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus gramineus']], [], false)
        .length,
      'Pleioblastus gramineus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus hindsii']], [], false)
        .length,
      'Pleioblastus hindsii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus humilis']], [], false)
        .length,
      'Pleioblastus humilis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Pleioblastus humilis pumilus']],
        [],
        false
      ).length,
      'Pleioblastus humilis pumilus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus intermedius']], [], false)
        .length,
      'Pleioblastus intermedius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus juxianensis']], [], false)
        .length,
      'Pleioblastus juxianensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus maculatus']], [], false)
        .length,
      'Pleioblastus maculatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus pygmaeus']], [], false)
        .length,
      'Pleioblastus pygmaeus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Pleioblastus pygmaeus distichus']],
        [],
        false
      ).length,
      'Pleioblastus pygmaeus distichus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus simonii']], [], false)
        .length,
      'Pleioblastus simonii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pleioblastus variegatus']], [], false)
        .length,
      'Pleioblastus variegatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pleurospermum austriacum']], [], false)
        .length,
      'Pleurospermum austriacum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Pleurospermum camtschaticum']],
        [],
        false
      ).length,
      'Pleurospermum camtschaticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pleurospermum condollei']], [], false)
        .length,
      'Pleurospermum condollei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pleurospermum uralense']], [], false)
        .length,
      'Pleurospermum uralense'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Plumbago europaea']], [], false).length,
      'Plumbago europaea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Poa annua']], [], false).length,
      'Poa annua'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Poa fendleriana']], [], false).length,
      'Poa fendleriana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Poa flabellata']], [], false).length,
      'Poa flabellata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Poa pratensis']], [], false).length,
      'Poa pratensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Poa scabrella']], [], false).length,
      'Poa scabrella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podocarpium oldhamii']], [], false)
        .length,
      'Podocarpium oldhamii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podocarpium podocarpum']], [], false)
        .length,
      'Podocarpium podocarpum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Podocarpium podocarpum fallax']],
        [],
        false
      ).length,
      'Podocarpium podocarpum fallax'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Podocarpium podocarpum japonicum']],
        [],
        false
      ).length,
      'Podocarpium podocarpum japonicum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Podocarpus alpinus']], [], false)
        .length,
      'Podocarpus alpinus'
    );
    assert.equal(
      6638,
      filterAndSort(crops, [nameToCrop['Podocarpus elatus']], [], false).length,
      'Podocarpus elatus'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Podocarpus lawrencii']], [], false)
        .length,
      'Podocarpus lawrencii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Podocarpus macrophyllus']], [], false)
        .length,
      'Podocarpus macrophyllus'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Podocarpus nivalis']], [], false)
        .length,
      'Podocarpus nivalis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Podocarpus nubigenus']], [], false)
        .length,
      'Podocarpus nubigenus'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Podocarpus salignus']], [], false)
        .length,
      'Podocarpus salignus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Podocarpus totara']], [], false).length,
      'Podocarpus totara'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Podolepis jaceoides']], [], false)
        .length,
      'Podolepis jaceoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podophyllum aurantiocaule']], [], false)
        .length,
      'Podophyllum aurantiocaule'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podophyllum hexandrum']], [], false)
        .length,
      'Podophyllum hexandrum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Podophyllum peltatum']], [], false)
        .length,
      'Podophyllum peltatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podophyllum pleianthum']], [], false)
        .length,
      'Podophyllum pleianthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Podophyllum versipelle']], [], false)
        .length,
      'Podophyllum versipelle'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pogantherum crinitum']], [], false)
        .length,
      'Pogantherum crinitum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Pogogyne douglasii parviflora']],
        [],
        false
      ).length,
      'Pogogyne douglasii parviflora'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Polemonium caeruleum']], [], false)
        .length,
      'Polemonium caeruleum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Polemonium reptans']], [], false)
        .length,
      'Polemonium reptans'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Polianthes tuberosa']], [], false)
        .length,
      'Polianthes tuberosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Poliomintha incana']], [], false)
        .length,
      'Poliomintha incana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala amara']], [], false).length,
      'Polygala amara'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala japonica']], [], false).length,
      'Polygala japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala reinii']], [], false).length,
      'Polygala reinii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Polygala senega']], [], false).length,
      'Polygala senega'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala sibirica']], [], false).length,
      'Polygala sibirica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala tenuifolia']], [], false)
        .length,
      'Polygala tenuifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala theezans']], [], false).length,
      'Polygala theezans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygala vulgaris']], [], false).length,
      'Polygala vulgaris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Polygonatum biflorum']], [], false)
        .length,
      'Polygonatum biflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum cirrhifolium']], [], false)
        .length,
      'Polygonatum cirrhifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Polygonatum commutatum']], [], false)
        .length,
      'Polygonatum commutatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum cyrtonema']], [], false)
        .length,
      'Polygonatum cyrtonema'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Polygonatum falcatum']], [], false)
        .length,
      'Polygonatum falcatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Polygonatum humile']], [], false)
        .length,
      'Polygonatum humile'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum inflatum']], [], false)
        .length,
      'Polygonatum inflatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum involucratum']], [], false)
        .length,
      'Polygonatum involucratum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum kingianum']], [], false)
        .length,
      'Polygonatum kingianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum lasianthum']], [], false)
        .length,
      'Polygonatum lasianthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum macropodum']], [], false)
        .length,
      'Polygonatum macropodum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum maximowiczii']], [], false)
        .length,
      'Polygonatum maximowiczii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum multiflorum']], [], false)
        .length,
      'Polygonatum multiflorum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Polygonatum odoratum']], [], false)
        .length,
      'Polygonatum odoratum'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Polygonatum odoratum thunbergii']],
        [],
        false
      ).length,
      'Polygonatum odoratum thunbergii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Polygonatum pubescens']], [], false)
        .length,
      'Polygonatum pubescens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Polygonatum sibiricum']], [], false)
        .length,
      'Polygonatum sibiricum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Polygonatum stenanthum']], [], false)
        .length,
      'Polygonatum stenanthum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Polygonatum verticillatum']], [], false)
        .length,
      'Polygonatum verticillatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum alaskanum']], [], false)
        .length,
      'Polygonum alaskanum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum alpinum']], [], false).length,
      'Polygonum alpinum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Polygonum amphibium']], [], false)
        .length,
      'Polygonum amphibium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum arenastrum']], [], false)
        .length,
      'Polygonum arenastrum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum aviculare']], [], false)
        .length,
      'Polygonum aviculare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum barbatum']], [], false)
        .length,
      'Polygonum barbatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum bistorta']], [], false)
        .length,
      'Polygonum bistorta'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum bistortoides']], [], false)
        .length,
      'Polygonum bistortoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum bungeanum']], [], false)
        .length,
      'Polygonum bungeanum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Polygonum coccineum']], [], false)
        .length,
      'Polygonum coccineum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum conspicuum']], [], false)
        .length,
      'Polygonum conspicuum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum convolvulus']], [], false)
        .length,
      'Polygonum convolvulus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum divaricatum']], [], false)
        .length,
      'Polygonum divaricatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum douglasii']], [], false)
        .length,
      'Polygonum douglasii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum dumetorum']], [], false)
        .length,
      'Polygonum dumetorum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Polygonum equisetiforme']], [], false)
        .length,
      'Polygonum equisetiforme'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum fugax']], [], false).length,
      'Polygonum fugax'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Polygonum hydropiper']], [], false)
        .length,
      'Polygonum hydropiper'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum lapathifolium']], [], false)
        .length,
      'Polygonum lapathifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum limosum']], [], false).length,
      'Polygonum limosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum longisetum']], [], false)
        .length,
      'Polygonum longisetum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum maackianum']], [], false)
        .length,
      'Polygonum maackianum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum manshuriense']], [], false)
        .length,
      'Polygonum manshuriense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum microcephalum']], [], false)
        .length,
      'Polygonum microcephalum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum minus']], [], false).length,
      'Polygonum minus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum molle']], [], false).length,
      'Polygonum molle'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum multiflorum']], [], false)
        .length,
      'Polygonum multiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum nepalense']], [], false)
        .length,
      'Polygonum nepalense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum omerostromum']], [], false)
        .length,
      'Polygonum omerostromum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum orientale']], [], false)
        .length,
      'Polygonum orientale'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum pensylvanicum']], [], false)
        .length,
      'Polygonum pensylvanicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum perfoliatum']], [], false)
        .length,
      'Polygonum perfoliatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum persicaria']], [], false)
        .length,
      'Polygonum persicaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum polymorphum']], [], false)
        .length,
      'Polygonum polymorphum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum polystachyum']], [], false)
        .length,
      'Polygonum polystachyum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum pubescens']], [], false)
        .length,
      'Polygonum pubescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum rigidum']], [], false).length,
      'Polygonum rigidum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum rumicifolium']], [], false)
        .length,
      'Polygonum rumicifolium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Polygonum runcinatum']], [], false)
        .length,
      'Polygonum runcinatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum sachalinense']], [], false)
        .length,
      'Polygonum sachalinense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum sagittatum']], [], false)
        .length,
      'Polygonum sagittatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum salicifolium']], [], false)
        .length,
      'Polygonum salicifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum sibiricum']], [], false)
        .length,
      'Polygonum sibiricum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum taquettii']], [], false)
        .length,
      'Polygonum taquettii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum thunbergii']], [], false)
        .length,
      'Polygonum thunbergii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum tinctorium']], [], false)
        .length,
      'Polygonum tinctorium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum truellum']], [], false)
        .length,
      'Polygonum truellum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum virginianum']], [], false)
        .length,
      'Polygonum virginianum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Polygonum viviparum']], [], false)
        .length,
      'Polygonum viviparum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polygonum weyrichii']], [], false)
        .length,
      'Polygonum weyrichii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polygonum yokusaianum']], [], false)
        .length,
      'Polygonum yokusaianum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Polymnia edulis']], [], false).length,
      'Polymnia edulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Polymnia uvedalia']], [], false).length,
      'Polymnia uvedalia'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Polypodium glycyrrhiza']], [], false)
        .length,
      'Polypodium glycyrrhiza'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Polypodium lineare']], [], false)
        .length,
      'Polypodium lineare'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Polypodium vulgare']], [], false)
        .length,
      'Polypodium vulgare'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Polypogon monspeliensis']], [], false)
        .length,
      'Polypogon monspeliensis'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Polyscias sambucifolia']], [], false)
        .length,
      'Polyscias sambucifolia'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Polystichum acrostichoides']],
        [],
        false
      ).length,
      'Polystichum acrostichoides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polystichum aculeatum']], [], false)
        .length,
      'Polystichum aculeatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Polystichum munitum']], [], false)
        .length,
      'Polystichum munitum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Polytrichum juniperinum']], [], false)
        .length,
      'Polytrichum juniperinum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Poncirus trifoliata']], [], false)
        .length,
      'Poncirus trifoliata'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Pontederia cordata']], [], false)
        .length,
      'Pontederia cordata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop["Populus 'Balsam Spire'"]], [], false)
        .length,
      "Populus 'Balsam Spire'"
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Populus alba']], [], false).length,
      'Populus alba'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Populus angustifolia']], [], false)
        .length,
      'Populus angustifolia'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Populus balsamifera']], [], false)
        .length,
      'Populus balsamifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Populus ciliata']], [], false).length,
      'Populus ciliata'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Populus deltoides']], [], false).length,
      'Populus deltoides'
    );
    assert.equal(
      6643,
      filterAndSort(
        crops,
        [nameToCrop['Populus deltoides monilifera']],
        [],
        false
      ).length,
      'Populus deltoides monilifera'
    );
    assert.equal(
      6643,
      filterAndSort(
        crops,
        [nameToCrop['Populus deltoides wislizenii']],
        [],
        false
      ).length,
      'Populus deltoides wislizenii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Populus euphratica']], [], false)
        .length,
      'Populus euphratica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Populus fremontii']], [], false).length,
      'Populus fremontii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Populus grandidentata']], [], false)
        .length,
      'Populus grandidentata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Populus heterophylla']], [], false)
        .length,
      'Populus heterophylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Populus maximowiczii']], [], false)
        .length,
      'Populus maximowiczii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Populus nigra']], [], false).length,
      'Populus nigra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Populus pseudosimonii']], [], false)
        .length,
      'Populus pseudosimonii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Populus sieboldii']], [], false).length,
      'Populus sieboldii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Populus simonii']], [], false).length,
      'Populus simonii'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Populus tremula']], [], false).length,
      'Populus tremula'
    );
    assert.equal(
      6007,
      filterAndSort(crops, [nameToCrop['Populus tremuloides']], [], false)
        .length,
      'Populus tremuloides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Populus trichocarpa']], [], false)
        .length,
      'Populus trichocarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Populus x canadensis']], [], false)
        .length,
      'Populus x canadensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Populus x canescens']], [], false)
        .length,
      'Populus x canescens'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Populus x jackii']], [], false).length,
      'Populus x jackii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Portulaca grandiflora']], [], false)
        .length,
      'Portulaca grandiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Portulaca oleracea']], [], false)
        .length,
      'Portulaca oleracea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Portulaca oleracea sativa']], [], false)
        .length,
      'Portulaca oleracea sativa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Portulaca retusa']], [], false).length,
      'Portulaca retusa'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton cheesemanii']], [], false)
        .length,
      'Potamogeton cheesemanii'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton crispus']], [], false)
        .length,
      'Potamogeton crispus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton cristatus']], [], false)
        .length,
      'Potamogeton cristatus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton distinctus']], [], false)
        .length,
      'Potamogeton distinctus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton natans']], [], false)
        .length,
      'Potamogeton natans'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton oxyphyllus']], [], false)
        .length,
      'Potamogeton oxyphyllus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton pectinatus']], [], false)
        .length,
      'Potamogeton pectinatus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Potamogeton suboblongus']], [], false)
        .length,
      'Potamogeton suboblongus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla anserina']], [], false)
        .length,
      'Potentilla anserina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla bicolor']], [], false)
        .length,
      'Potentilla bicolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla chinensis']], [], false)
        .length,
      'Potentilla chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla cryptotaeniae']], [], false)
        .length,
      'Potentilla cryptotaeniae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla discolor']], [], false)
        .length,
      'Potentilla discolor'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla egedei']], [], false).length,
      'Potentilla egedei'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla erecta']], [], false).length,
      'Potentilla erecta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla fragarioides']], [], false)
        .length,
      'Potentilla fragarioides'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Potentilla fruticosa']], [], false)
        .length,
      'Potentilla fruticosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla glandulosa']], [], false)
        .length,
      'Potentilla glandulosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla hippiana']], [], false)
        .length,
      'Potentilla hippiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla kleiniana']], [], false)
        .length,
      'Potentilla kleiniana'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Potentilla multifida']], [], false)
        .length,
      'Potentilla multifida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla nepalensis']], [], false)
        .length,
      'Potentilla nepalensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Potentilla norvegica']], [], false)
        .length,
      'Potentilla norvegica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Potentilla palustris']], [], false)
        .length,
      'Potentilla palustris'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Potentilla recta']], [], false).length,
      'Potentilla recta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla reptans']], [], false)
        .length,
      'Potentilla reptans'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Potentilla rupestris']], [], false)
        .length,
      'Potentilla rupestris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Potentilla simplex']], [], false)
        .length,
      'Potentilla simplex'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Potentilla supina']], [], false).length,
      'Potentilla supina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prangos pabularia']], [], false).length,
      'Prangos pabularia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pratia angulata']], [], false).length,
      'Pratia angulata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Prenanthes altissimus']], [], false)
        .length,
      'Prenanthes altissimus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Primula auricula']], [], false).length,
      'Primula auricula'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Primula denticulata']], [], false)
        .length,
      'Primula denticulata'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Primula elatior']], [], false).length,
      'Primula elatior'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Primula involucrata']], [], false)
        .length,
      'Primula involucrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Primula macrophylla']], [], false)
        .length,
      'Primula macrophylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Primula parryi']], [], false).length,
      'Primula parryi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Primula reticulata']], [], false)
        .length,
      'Primula reticulata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Primula sieboldii']], [], false).length,
      'Primula sieboldii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Primula veris']], [], false).length,
      'Primula veris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Primula vulgaris']], [], false).length,
      'Primula vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pringlea antiscorbutica']], [], false)
        .length,
      'Pringlea antiscorbutica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prinsepia sinensis']], [], false)
        .length,
      'Prinsepia sinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prinsepia uniflora']], [], false)
        .length,
      'Prinsepia uniflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prinsepia utilis']], [], false).length,
      'Prinsepia utilis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Proboscidea fragrans']], [], false)
        .length,
      'Proboscidea fragrans'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Proboscidea louisianica']], [], false)
        .length,
      'Proboscidea louisianica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prostanthera cineolifera']], [], false)
        .length,
      'Prostanthera cineolifera'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Prostanthera rotundifolia']], [], false)
        .length,
      'Prostanthera rotundifolia'
    );
    assert.equal(
      6732,
      filterAndSort(crops, [nameToCrop['Protea cynaroides']], [], false).length,
      'Protea cynaroides'
    );
    assert.equal(
      6732,
      filterAndSort(crops, [nameToCrop['Protea mellifera']], [], false).length,
      'Protea mellifera'
    );
    assert.equal(
      6732,
      filterAndSort(crops, [nameToCrop['Protea repens']], [], false).length,
      'Protea repens'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Prumnopitys andina']], [], false)
        .length,
      'Prumnopitys andina'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Prumnopitys ferruginea']], [], false)
        .length,
      'Prumnopitys ferruginea'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Prumnopitys taxifolia']], [], false)
        .length,
      'Prumnopitys taxifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Prunella grandiflora']], [], false)
        .length,
      'Prunella grandiflora'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Prunella vulgaris']], [], false).length,
      'Prunella vulgaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus alabamensis']], [], false)
        .length,
      'Prunus alabamensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus alleghaniensis']], [], false)
        .length,
      'Prunus alleghaniensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus americana']], [], false).length,
      'Prunus americana'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus americana lanata']], [], false)
        .length,
      'Prunus americana lanata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus andersonii']], [], false).length,
      'Prunus andersonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus angustifolia']], [], false)
        .length,
      'Prunus angustifolia'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Prunus angustifolia watsonii']],
        [],
        false
      ).length,
      'Prunus angustifolia watsonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus apetala']], [], false).length,
      'Prunus apetala'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus arabica']], [], false).length,
      'Prunus arabica'
    );
    assert.equal(
      7218,
      filterAndSort(crops, [nameToCrop['Prunus armeniaca']], [], false).length,
      'Prunus armeniaca'
    );
    assert.equal(
      7119,
      filterAndSort(crops, [nameToCrop['Prunus avium']], [], false).length,
      'Prunus avium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus besseriana']], [], false).length,
      'Prunus besseriana'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Prunus besseyi']], [], false).length,
      'Prunus besseyi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus bifrons']], [], false).length,
      'Prunus bifrons'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus bokharensis']], [], false)
        .length,
      'Prunus bokharensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus brigantina']], [], false).length,
      'Prunus brigantina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus buergeriana']], [], false)
        .length,
      'Prunus buergeriana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus campanulata']], [], false)
        .length,
      'Prunus campanulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus canescens']], [], false).length,
      'Prunus canescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus capsica']], [], false).length,
      'Prunus capsica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus caroliniana']], [], false)
        .length,
      'Prunus caroliniana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus cerasifera']], [], false).length,
      'Prunus cerasifera'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Prunus cerasifera divaricata']],
        [],
        false
      ).length,
      'Prunus cerasifera divaricata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Prunus cerasoides']], [], false).length,
      'Prunus cerasoides'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus cerasus']], [], false).length,
      'Prunus cerasus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus cerasus austera']], [], false)
        .length,
      'Prunus cerasus austera'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus cerasus caproniana']], [], false)
        .length,
      'Prunus cerasus caproniana'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus cerasus frutescens']], [], false)
        .length,
      'Prunus cerasus frutescens'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus cerasus marasca']], [], false)
        .length,
      'Prunus cerasus marasca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus cocomilia']], [], false).length,
      'Prunus cocomilia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus consociiflora']], [], false)
        .length,
      'Prunus consociiflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus cornuta']], [], false).length,
      'Prunus cornuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus cortapico']], [], false).length,
      'Prunus cortapico'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus davidiana']], [], false).length,
      'Prunus davidiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus dawyckensis']], [], false)
        .length,
      'Prunus dawyckensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus dielsiana']], [], false).length,
      'Prunus dielsiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus domestica']], [], false).length,
      'Prunus domestica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus dulcis']], [], false).length,
      'Prunus dulcis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus emarginata']], [], false).length,
      'Prunus emarginata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus fasciculata']], [], false)
        .length,
      'Prunus fasciculata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus fenzliana']], [], false).length,
      'Prunus fenzliana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus fruticosa']], [], false).length,
      'Prunus fruticosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus glandulosa']], [], false).length,
      'Prunus glandulosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus gracilis']], [], false).length,
      'Prunus gracilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus grayana']], [], false).length,
      'Prunus grayana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus gymnodonta']], [], false).length,
      'Prunus gymnodonta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus hortulana']], [], false).length,
      'Prunus hortulana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus humilis']], [], false).length,
      'Prunus humilis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Prunus ilicifolia']], [], false).length,
      'Prunus ilicifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus incana']], [], false).length,
      'Prunus incana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus incisa']], [], false).length,
      'Prunus incisa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus insititia']], [], false).length,
      'Prunus insititia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus iranica']], [], false).length,
      'Prunus iranica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus jamasakura']], [], false).length,
      'Prunus jamasakura'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus japonica']], [], false).length,
      'Prunus japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus japonica nakai']], [], false)
        .length,
      'Prunus japonica nakai'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus jenkinsii']], [], false).length,
      'Prunus jenkinsii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus kansuensis']], [], false).length,
      'Prunus kansuensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus korshinskyi']], [], false)
        .length,
      'Prunus korshinskyi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus lannesiana']], [], false).length,
      'Prunus lannesiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus laurocerasus']], [], false)
        .length,
      'Prunus laurocerasus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus lusitanica']], [], false).length,
      'Prunus lusitanica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Prunus lyonii']], [], false).length,
      'Prunus lyonii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus mahaleb']], [], false).length,
      'Prunus mahaleb'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus mandschurica']], [], false)
        .length,
      'Prunus mandschurica'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus maritima']], [], false).length,
      'Prunus maritima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus maximowiczii']], [], false)
        .length,
      'Prunus maximowiczii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus media']], [], false).length,
      'Prunus media'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Prunus mexicana']], [], false).length,
      'Prunus mexicana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus microcarpa']], [], false).length,
      'Prunus microcarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus mira']], [], false).length,
      'Prunus mira'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus mume']], [], false).length,
      'Prunus mume'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus munsoniana']], [], false).length,
      'Prunus munsoniana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus napaulensis']], [], false)
        .length,
      'Prunus napaulensis'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus nigra']], [], false).length,
      'Prunus nigra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus nipponica']], [], false).length,
      'Prunus nipponica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus orthosepala']], [], false)
        .length,
      'Prunus orthosepala'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus padus']], [], false).length,
      'Prunus padus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus pedunculata']], [], false)
        .length,
      'Prunus pedunculata'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus pensylvanica']], [], false)
        .length,
      'Prunus pensylvanica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus persica']], [], false).length,
      'Prunus persica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus pilosiuscula']], [], false)
        .length,
      'Prunus pilosiuscula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus prostrata']], [], false).length,
      'Prunus prostrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus pseudocerasus']], [], false)
        .length,
      'Prunus pseudocerasus'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Prunus pumila']], [], false).length,
      'Prunus pumila'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Prunus pumila susquehanae']], [], false)
        .length,
      'Prunus pumila susquehanae'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Prunus rivularis']], [], false).length,
      'Prunus rivularis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Prunus rufa']], [], false).length,
      'Prunus rufa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus salicifolia']], [], false)
        .length,
      'Prunus salicifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus salicina']], [], false).length,
      'Prunus salicina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus sargentii']], [], false).length,
      'Prunus sargentii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Prunus serotina']], [], false).length,
      'Prunus serotina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus serrula']], [], false).length,
      'Prunus serrula'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus serrulata']], [], false).length,
      'Prunus serrulata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus sibirica']], [], false).length,
      'Prunus sibirica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus simonii']], [], false).length,
      'Prunus simonii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus sogdiana']], [], false).length,
      'Prunus sogdiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus spinosa']], [], false).length,
      'Prunus spinosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus ssiori']], [], false).length,
      'Prunus ssiori'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus subcordata']], [], false).length,
      'Prunus subcordata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus subhirtella']], [], false)
        .length,
      'Prunus subhirtella'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus takesimensis']], [], false)
        .length,
      'Prunus takesimensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus tangutica']], [], false).length,
      'Prunus tangutica'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus tenella']], [], false).length,
      'Prunus tenella'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus tomentosa']], [], false).length,
      'Prunus tomentosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus triloba']], [], false).length,
      'Prunus triloba'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus triloba simplex']], [], false)
        .length,
      'Prunus triloba simplex'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Prunus umbellata']], [], false).length,
      'Prunus umbellata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus undulata']], [], false).length,
      'Prunus undulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus ursina']], [], false).length,
      'Prunus ursina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus ussuriensis']], [], false)
        .length,
      'Prunus ussuriensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus virens']], [], false).length,
      'Prunus virens'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus virginiana']], [], false).length,
      'Prunus virginiana'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Prunus virginiana demissa']], [], false)
        .length,
      'Prunus virginiana demissa'
    );
    assert.equal(
      6643,
      filterAndSort(
        crops,
        [nameToCrop['Prunus virginiana melanocarpa']],
        [],
        false
      ).length,
      'Prunus virginiana melanocarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x cistena']], [], false).length,
      'Prunus x cistena'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x dasycarpa']], [], false)
        .length,
      'Prunus x dasycarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x eminens']], [], false).length,
      'Prunus x eminens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus x fontanesiana']], [], false)
        .length,
      'Prunus x fontanesiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x gondouinii']], [], false)
        .length,
      'Prunus x gondouinii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Prunus x sultana']], [], false).length,
      'Prunus x sultana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x utahensis']], [], false)
        .length,
      'Prunus x utahensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Prunus x yedoensis']], [], false)
        .length,
      'Prunus x yedoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pseudocydonia sinensis']], [], false)
        .length,
      'Pseudocydonia sinensis'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Pseudognaphalium obtusifolium']],
        [],
        false
      ).length,
      'Pseudognaphalium obtusifolium'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Pseudolarix amabilis']], [], false)
        .length,
      'Pseudolarix amabilis'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Pseudopanax arboreus']], [], false)
        .length,
      'Pseudopanax arboreus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pseudopanax edgerleyi']], [], false)
        .length,
      'Pseudopanax edgerleyi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pseudosasa amabilis']], [], false)
        .length,
      'Pseudosasa amabilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pseudosasa japonica']], [], false)
        .length,
      'Pseudosasa japonica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Pseudotsuga menziesii']], [], false)
        .length,
      'Pseudotsuga menziesii'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Pseudowintera axillaris']], [], false)
        .length,
      'Pseudowintera axillaris'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Psidium cattleianum']], [], false)
        .length,
      'Psidium cattleianum'
    );
    assert.equal(
      6644,
      filterAndSort(
        crops,
        [nameToCrop['Psidium cattleianum littorale']],
        [],
        false
      ).length,
      'Psidium cattleianum littorale'
    );
    assert.equal(
      6644,
      filterAndSort(
        crops,
        [nameToCrop['Psophocarpus tetragonolobus']],
        [],
        false
      ).length,
      'Psophocarpus tetragonolobus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea argophylla']], [], false)
        .length,
      'Psoralea argophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea californica']], [], false)
        .length,
      'Psoralea californica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea canescens']], [], false)
        .length,
      'Psoralea canescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea castorea']], [], false).length,
      'Psoralea castorea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea corylifolia']], [], false)
        .length,
      'Psoralea corylifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea cuspidata']], [], false)
        .length,
      'Psoralea cuspidata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Psoralea esculenta']], [], false)
        .length,
      'Psoralea esculenta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Psoralea glandulosa']], [], false)
        .length,
      'Psoralea glandulosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Psoralea hypogaea']], [], false).length,
      'Psoralea hypogaea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea lanceolata']], [], false)
        .length,
      'Psoralea lanceolata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea macrostachya']], [], false)
        .length,
      'Psoralea macrostachya'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea mephitica']], [], false)
        .length,
      'Psoralea mephitica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea orbicularis']], [], false)
        .length,
      'Psoralea orbicularis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea pedunculata']], [], false)
        .length,
      'Psoralea pedunculata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea subacaulis']], [], false)
        .length,
      'Psoralea subacaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Psoralea tenuiflora']], [], false)
        .length,
      'Psoralea tenuiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Psychotria loniceroides']], [], false)
        .length,
      'Psychotria loniceroides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ptelea baldwinii']], [], false).length,
      'Ptelea baldwinii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ptelea trifoliata']], [], false).length,
      'Ptelea trifoliata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ptelea trifoliata mollis']], [], false)
        .length,
      'Ptelea trifoliata mollis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Pteridium aquilinum']], [], false)
        .length,
      'Pteridium aquilinum'
    );
    assert.equal(
      7215,
      filterAndSort(
        crops,
        [nameToCrop['Pteridium aquilinum esculentum']],
        [],
        false
      ).length,
      'Pteridium aquilinum esculentum'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Pterocarya fraxinifolia']], [], false)
        .length,
      'Pterocarya fraxinifolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Pterocarya rhoifolia']], [], false)
        .length,
      'Pterocarya rhoifolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Pterocarya stenoptera']], [], false)
        .length,
      'Pterocarya stenoptera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pteroceltis tatarinowii']], [], false)
        .length,
      'Pteroceltis tatarinowii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pterospora andromeda']], [], false)
        .length,
      'Pterospora andromeda'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Pterostyrax corymbosa']], [], false)
        .length,
      'Pterostyrax corymbosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ptiloria exigua']], [], false).length,
      'Ptiloria exigua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Puccinellia distans']], [], false)
        .length,
      'Puccinellia distans'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Pueraria montana chinensis']],
        [],
        false
      ).length,
      'Pueraria montana chinensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pueraria montana lobata']], [], false)
        .length,
      'Pueraria montana lobata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pueraria phaseoloides']], [], false)
        .length,
      'Pueraria phaseoloides'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pueraria pseudohirsuta']], [], false)
        .length,
      'Pueraria pseudohirsuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pueraria tuberosa']], [], false).length,
      'Pueraria tuberosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pugionium cornutum']], [], false)
        .length,
      'Pugionium cornutum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pulicaria dysenterica']], [], false)
        .length,
      'Pulicaria dysenterica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pulicaria odora']], [], false).length,
      'Pulicaria odora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pulmonaria officinalis']], [], false)
        .length,
      'Pulmonaria officinalis'
    );
    assert.equal(
      7124,
      filterAndSort(crops, [nameToCrop['Pulmonaria saccharata']], [], false)
        .length,
      'Pulmonaria saccharata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Pulsatilla cernua']], [], false).length,
      'Pulsatilla cernua'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pulsatilla chinensis']], [], false)
        .length,
      'Pulsatilla chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pulsatilla dahurica']], [], false)
        .length,
      'Pulsatilla dahurica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pulsatilla koreana']], [], false)
        .length,
      'Pulsatilla koreana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Pulsatilla patens']], [], false).length,
      'Pulsatilla patens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pulsatilla pratensis']], [], false)
        .length,
      'Pulsatilla pratensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pulsatilla vulgaris']], [], false)
        .length,
      'Pulsatilla vulgaris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Punica granatum']], [], false).length,
      'Punica granatum'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Puya chilensis']], [], false).length,
      'Puya chilensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pycnanthemum albescens']], [], false)
        .length,
      'Pycnanthemum albescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pycnanthemum flexuosum']], [], false)
        .length,
      'Pycnanthemum flexuosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pycnanthemum incanum']], [], false)
        .length,
      'Pycnanthemum incanum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pycnanthemum muticum']], [], false)
        .length,
      'Pycnanthemum muticum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pycnanthemum pilosum']], [], false)
        .length,
      'Pycnanthemum pilosum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pycnanthemum virginianum']], [], false)
        .length,
      'Pycnanthemum virginianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop["Pyracantha 'Wateri'"]], [], false)
        .length,
      "Pyracantha 'Wateri'"
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyracantha angustifolia']], [], false)
        .length,
      'Pyracantha angustifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyracantha coccinea']], [], false)
        .length,
      'Pyracantha coccinea'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Pyracantha crenato-serrata']],
        [],
        false
      ).length,
      'Pyracantha crenato-serrata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyracantha crenulata']], [], false)
        .length,
      'Pyracantha crenulata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Pyracantha koidzumii']], [], false)
        .length,
      'Pyracantha koidzumii'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Pyracantha rogersiana']], [], false)
        .length,
      'Pyracantha rogersiana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrocydonia danielii']], [], false)
        .length,
      'Pyrocydonia danielii'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Pyrola asarifolia']], [], false).length,
      'Pyrola asarifolia'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Pyrola chlorantha']], [], false).length,
      'Pyrola chlorantha'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Pyrola elliptica']], [], false).length,
      'Pyrola elliptica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pyrola minor']], [], false).length,
      'Pyrola minor'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Pyrola rotundifolia']], [], false)
        .length,
      'Pyrola rotundifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyronia veitchii']], [], false).length,
      'Pyronia veitchii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pyrrhopappus carolinianus']], [], false)
        .length,
      'Pyrrhopappus carolinianus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Pyrularia edulis']], [], false).length,
      'Pyrularia edulis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Pyrularia pubera']], [], false).length,
      'Pyrularia pubera'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus acidula']], [], false).length,
      'Pyrus acidula'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus amygdaliformis']], [], false)
        .length,
      'Pyrus amygdaliformis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus autumnalis']], [], false).length,
      'Pyrus autumnalis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus balsanae']], [], false).length,
      'Pyrus balsanae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus betulaefolia']], [], false)
        .length,
      'Pyrus betulaefolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus bretschneideri']], [], false)
        .length,
      'Pyrus bretschneideri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus calleryana']], [], false).length,
      'Pyrus calleryana'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Pyrus calleryana dimorphophylla']],
        [],
        false
      ).length,
      'Pyrus calleryana dimorphophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus communis']], [], false).length,
      'Pyrus communis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus communis sativa']], [], false)
        .length,
      'Pyrus communis sativa'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Pyrus cordata']], [], false).length,
      'Pyrus cordata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus elaeagnifolia']], [], false)
        .length,
      'Pyrus elaeagnifolia'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Pyrus elaeagnifolia kotschyana']],
        [],
        false
      ).length,
      'Pyrus elaeagnifolia kotschyana'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Pyrus faurei']], [], false).length,
      'Pyrus faurei'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus glabra']], [], false).length,
      'Pyrus glabra'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus macrostipes']], [], false).length,
      'Pyrus macrostipes'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus maximowicziana']], [], false)
        .length,
      'Pyrus maximowicziana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus nivalis']], [], false).length,
      'Pyrus nivalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus pashia']], [], false).length,
      'Pyrus pashia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus persica']], [], false).length,
      'Pyrus persica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus phaeocarpa']], [], false).length,
      'Pyrus phaeocarpa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus prematura']], [], false).length,
      'Pyrus prematura'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus pyraster']], [], false).length,
      'Pyrus pyraster'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus pyrifolia']], [], false).length,
      'Pyrus pyrifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus pyrifolia culta']], [], false)
        .length,
      'Pyrus pyrifolia culta'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus regellii']], [], false).length,
      'Pyrus regellii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus salicifolia']], [], false).length,
      'Pyrus salicifolia'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus serrulata']], [], false).length,
      'Pyrus serrulata'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus sohayakiensis']], [], false)
        .length,
      'Pyrus sohayakiensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus syriaca']], [], false).length,
      'Pyrus syriaca'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus turcomanica']], [], false).length,
      'Pyrus turcomanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus ussuriensis']], [], false).length,
      'Pyrus ussuriensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Pyrus ussuriensis ovoidea']], [], false)
        .length,
      'Pyrus ussuriensis ovoidea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Pyrus x lecontei']], [], false).length,
      'Pyrus x lecontei'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Pyrus x salvifolia']], [], false)
        .length,
      'Pyrus x salvifolia'
    );
    assert.equal(
      7132,
      filterAndSort(crops, [nameToCrop['Quercus acuta']], [], false).length,
      'Quercus acuta'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus acutissima']], [], false)
        .length,
      'Quercus acutissima'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus agrifolia']], [], false).length,
      'Quercus agrifolia'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus alba']], [], false).length,
      'Quercus alba'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus aliena']], [], false).length,
      'Quercus aliena'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus aucheri']], [], false).length,
      'Quercus aucheri'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus bicolor']], [], false).length,
      'Quercus bicolor'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus cerris']], [], false).length,
      'Quercus cerris'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus chrysolepis']], [], false)
        .length,
      'Quercus chrysolepis'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus coccifera']], [], false).length,
      'Quercus coccifera'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus coccinea']], [], false).length,
      'Quercus coccinea'
    );
    assert.equal(
      7131,
      filterAndSort(crops, [nameToCrop['Quercus dentata']], [], false).length,
      'Quercus dentata'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus douglasii']], [], false).length,
      'Quercus douglasii'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus dumosa revoluta']], [], false)
        .length,
      'Quercus dumosa revoluta'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus ellipsoidalis']], [], false)
        .length,
      'Quercus ellipsoidalis'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus emoryi']], [], false).length,
      'Quercus emoryi'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus engelmannii']], [], false)
        .length,
      'Quercus engelmannii'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus falcata']], [], false).length,
      'Quercus falcata'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus floribunda']], [], false)
        .length,
      'Quercus floribunda'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus frainetto']], [], false).length,
      'Quercus frainetto'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus fruticosa']], [], false).length,
      'Quercus fruticosa'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus gambelii']], [], false).length,
      'Quercus gambelii'
    );
    assert.equal(
      7140,
      filterAndSort(crops, [nameToCrop['Quercus garryana']], [], false).length,
      'Quercus garryana'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus glauca']], [], false).length,
      'Quercus glauca'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus hispanica']], [], false).length,
      'Quercus hispanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Quercus ilex']], [], false).length,
      'Quercus ilex'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Quercus ilex ballota']], [], false)
        .length,
      'Quercus ilex ballota'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus imbricaria']], [], false)
        .length,
      'Quercus imbricaria'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus infectoria']], [], false)
        .length,
      'Quercus infectoria'
    );
    assert.equal(
      7139,
      filterAndSort(
        crops,
        [nameToCrop['Quercus ithaburensis macrolepis']],
        [],
        false
      ).length,
      'Quercus ithaburensis macrolepis'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus kelloggii']], [], false).length,
      'Quercus kelloggii'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus laevis']], [], false).length,
      'Quercus laevis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus lamellosa']], [], false).length,
      'Quercus lamellosa'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus leucotrichophora']], [], false)
        .length,
      'Quercus leucotrichophora'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus libani']], [], false).length,
      'Quercus libani'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus lineata']], [], false).length,
      'Quercus lineata'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus lobata']], [], false).length,
      'Quercus lobata'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus lyrata']], [], false).length,
      'Quercus lyrata'
    );
    assert.equal(
      7040,
      filterAndSort(crops, [nameToCrop['Quercus macrocarpa']], [], false)
        .length,
      'Quercus macrocarpa'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus marilandica']], [], false)
        .length,
      'Quercus marilandica'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus michauxii']], [], false).length,
      'Quercus michauxii'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Quercus mongolica']], [], false).length,
      'Quercus mongolica'
    );
    assert.equal(
      7039,
      filterAndSort(
        crops,
        [nameToCrop['Quercus mongolica grosseserrata']],
        [],
        false
      ).length,
      'Quercus mongolica grosseserrata'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus muehlenbergii']], [], false)
        .length,
      'Quercus muehlenbergii'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus myrsinaefolia']], [], false)
        .length,
      'Quercus myrsinaefolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus nigra']], [], false).length,
      'Quercus nigra'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus oblongifolia']], [], false)
        .length,
      'Quercus oblongifolia'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus palustris']], [], false).length,
      'Quercus palustris'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus petraea']], [], false).length,
      'Quercus petraea'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus phellos']], [], false).length,
      'Quercus phellos'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus phillyreoides']], [], false)
        .length,
      'Quercus phillyreoides'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus prinoides']], [], false).length,
      'Quercus prinoides'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus prinus']], [], false).length,
      'Quercus prinus'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus pubescens']], [], false).length,
      'Quercus pubescens'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus pungens']], [], false).length,
      'Quercus pungens'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus robur']], [], false).length,
      'Quercus robur'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Quercus rubra']], [], false).length,
      'Quercus rubra'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus semecarpifolia']], [], false)
        .length,
      'Quercus semecarpifolia'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus serrata']], [], false).length,
      'Quercus serrata'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus shumardii']], [], false).length,
      'Quercus shumardii'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus  species']], [], false).length,
      'Quercus  species'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus stellata']], [], false).length,
      'Quercus stellata'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Quercus suber']], [], false).length,
      'Quercus suber'
    );
    assert.equal(
      7121,
      filterAndSort(
        crops,
        [nameToCrop['Quercus suber occidentalis']],
        [],
        false
      ).length,
      'Quercus suber occidentalis'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus undulata']], [], false).length,
      'Quercus undulata'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Quercus variabilis']], [], false)
        .length,
      'Quercus variabilis'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus velutina']], [], false).length,
      'Quercus velutina'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus virginiana']], [], false)
        .length,
      'Quercus virginiana'
    );
    assert.equal(
      7139,
      filterAndSort(crops, [nameToCrop['Quercus wislizenii']], [], false)
        .length,
      'Quercus wislizenii'
    );
    assert.equal(
      7040,
      filterAndSort(crops, [nameToCrop['Quercus x bebbiana']], [], false)
        .length,
      'Quercus x bebbiana'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Quillaja saponaria']], [], false)
        .length,
      'Quillaja saponaria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus acris']], [], false).length,
      'Ranunculus acris'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ranunculus aquatilis']], [], false)
        .length,
      'Ranunculus aquatilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus arvensis']], [], false)
        .length,
      'Ranunculus arvensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus bulbosus']], [], false)
        .length,
      'Ranunculus bulbosus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus californicus']], [], false)
        .length,
      'Ranunculus californicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus chinensis']], [], false)
        .length,
      'Ranunculus chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus ficaria']], [], false)
        .length,
      'Ranunculus ficaria'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ranunculus flammula']], [], false)
        .length,
      'Ranunculus flammula'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus hirtus']], [], false).length,
      'Ranunculus hirtus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus inamoeus']], [], false)
        .length,
      'Ranunculus inamoeus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus japonicus']], [], false)
        .length,
      'Ranunculus japonicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ranunculus kochii']], [], false).length,
      'Ranunculus kochii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus muricatus']], [], false)
        .length,
      'Ranunculus muricatus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ranunculus nipponicus']], [], false)
        .length,
      'Ranunculus nipponicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus occidentalis']], [], false)
        .length,
      'Ranunculus occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus pallasii']], [], false)
        .length,
      'Ranunculus pallasii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus pennsylvanicus']], [], false)
        .length,
      'Ranunculus pennsylvanicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus quelpaertensis']], [], false)
        .length,
      'Ranunculus quelpaertensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus repens']], [], false).length,
      'Ranunculus repens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus reptans']], [], false)
        .length,
      'Ranunculus reptans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus rivularis']], [], false)
        .length,
      'Ranunculus rivularis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Ranunculus sceleratus']], [], false)
        .length,
      'Ranunculus sceleratus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus tachreoi']], [], false)
        .length,
      'Ranunculus tachreoi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Ranunculus ternatus']], [], false)
        .length,
      'Ranunculus ternatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Raphanus landra']], [], false).length,
      'Raphanus landra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Raphanus maritima']], [], false).length,
      'Raphanus maritima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Raphanus raphanistrum']], [], false)
        .length,
      'Raphanus raphanistrum'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Raphanus sativus']], [], false).length,
      'Raphanus sativus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Raphanus sativus caudatus']], [], false)
        .length,
      'Raphanus sativus caudatus'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Raphanus sativus niger']], [], false)
        .length,
      'Raphanus sativus niger'
    );
    assert.equal(
      7058,
      filterAndSort(
        crops,
        [nameToCrop['Raphanus sativus oleiformis']],
        [],
        false
      ).length,
      'Raphanus sativus oleiformis'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Ratibida columnifera']], [], false)
        .length,
      'Ratibida columnifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Reaumuria hypericoides']], [], false)
        .length,
      'Reaumuria hypericoides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rehmannia glutinosa']], [], false)
        .length,
      'Rehmannia glutinosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Reichardia picroides']], [], false)
        .length,
      'Reichardia picroides'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Reineckia carnea']], [], false).length,
      'Reineckia carnea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Reseda lutea']], [], false).length,
      'Reseda lutea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Reseda luteola']], [], false).length,
      'Reseda luteola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Reseda odorata']], [], false).length,
      'Reseda odorata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Reseda phyteuma']], [], false).length,
      'Reseda phyteuma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhagodia candolleana']], [], false)
        .length,
      'Rhagodia candolleana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhagodia nutans']], [], false).length,
      'Rhagodia nutans'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhagodia parabolica']], [], false)
        .length,
      'Rhagodia parabolica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhagodia spinescens']], [], false)
        .length,
      'Rhagodia spinescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnella franguloides']], [], false)
        .length,
      'Rhamnella franguloides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus alaternus']], [], false).length,
      'Rhamnus alaternus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus carolinianus']], [], false)
        .length,
      'Rhamnus carolinianus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Rhamnus cathartica']], [], false)
        .length,
      'Rhamnus cathartica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rhamnus croceus']], [], false).length,
      'Rhamnus croceus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rhamnus dahurica']], [], false).length,
      'Rhamnus dahurica'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Rhamnus frangula']], [], false).length,
      'Rhamnus frangula'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus globosus']], [], false).length,
      'Rhamnus globosus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus grandiflora']], [], false)
        .length,
      'Rhamnus grandiflora'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rhamnus japonica']], [], false).length,
      'Rhamnus japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus leptophyllus']], [], false)
        .length,
      'Rhamnus leptophyllus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus lycioides']], [], false).length,
      'Rhamnus lycioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus nepalensis']], [], false)
        .length,
      'Rhamnus nepalensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus persicus']], [], false).length,
      'Rhamnus persicus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus purpureus']], [], false).length,
      'Rhamnus purpureus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus purshianus']], [], false)
        .length,
      'Rhamnus purshianus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus saxatilis']], [], false).length,
      'Rhamnus saxatilis'
    );
    assert.equal(
      7058,
      filterAndSort(
        crops,
        [nameToCrop['Rhamnus saxatilis tinctorius']],
        [],
        false
      ).length,
      'Rhamnus saxatilis tinctorius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus triquetra']], [], false).length,
      'Rhamnus triquetra'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhamnus utilis']], [], false).length,
      'Rhamnus utilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhamnus virgatus']], [], false).length,
      'Rhamnus virgatus'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Rhaphiolepis indica']], [], false)
        .length,
      'Rhaphiolepis indica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rhaphiolepis umbellata']], [], false)
        .length,
      'Rhaphiolepis umbellata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhaponticum uniflorum']], [], false)
        .length,
      'Rhaponticum uniflorum'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum australe']], [], false).length,
      'Rheum australe'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum compactum']], [], false).length,
      'Rheum compactum'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum coreanum']], [], false).length,
      'Rheum coreanum'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum nobile']], [], false).length,
      'Rheum nobile'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum officinale']], [], false).length,
      'Rheum officinale'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum palmatum']], [], false).length,
      'Rheum palmatum'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum palmatum tanguticum']], [], false)
        .length,
      'Rheum palmatum tanguticum'
    );
    assert.equal(
      7036,
      filterAndSort(crops, [nameToCrop['Rheum rhaponticum']], [], false).length,
      'Rheum rhaponticum'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum ribes']], [], false).length,
      'Rheum ribes'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum spiciforme']], [], false).length,
      'Rheum spiciforme'
    );
    assert.equal(
      7136,
      filterAndSort(crops, [nameToCrop['Rheum tataricum']], [], false).length,
      'Rheum tataricum'
    );
    assert.equal(
      7036,
      filterAndSort(crops, [nameToCrop['Rheum x cultorum']], [], false).length,
      'Rheum x cultorum'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Rhexia virginica']], [], false).length,
      'Rhexia virginica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rhinanthus minor']], [], false).length,
      'Rhinanthus minor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhodiola rhodantha']], [], false)
        .length,
      'Rhodiola rhodantha'
    );
    assert.equal(
      6007,
      filterAndSort(crops, [nameToCrop['Rhodiola rosea']], [], false).length,
      'Rhodiola rosea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Rhodiola tibetica']], [], false).length,
      'Rhodiola tibetica'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop["Rhododendron 'PJM'"]], [], false)
        .length,
      "Rhododendron 'PJM'"
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron anthopogon']], [], false)
        .length,
      'Rhododendron anthopogon'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron arboreum']], [], false)
        .length,
      'Rhododendron arboreum'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Rhododendron aureum']], [], false)
        .length,
      'Rhododendron aureum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Rhododendron campanulatum']], [], false)
        .length,
      'Rhododendron campanulatum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Rhododendron ferrugineum']], [], false)
        .length,
      'Rhododendron ferrugineum'
    );
    assert.equal(
      7206,
      filterAndSort(
        crops,
        [nameToCrop['Rhododendron griersonianum']],
        [],
        false
      ).length,
      'Rhododendron griersonianum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron indicum']], [], false)
        .length,
      'Rhododendron indicum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Rhododendron japonicum']], [], false)
        .length,
      'Rhododendron japonicum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Rhododendron kaempferi']], [], false)
        .length,
      'Rhododendron kaempferi'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Rhododendron lapponicum']], [], false)
        .length,
      'Rhododendron lapponicum'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Rhododendron lutescens']], [], false)
        .length,
      'Rhododendron lutescens'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron luteum']], [], false)
        .length,
      'Rhododendron luteum'
    );
    assert.equal(
      6959,
      filterAndSort(crops, [nameToCrop['Rhododendron maximum']], [], false)
        .length,
      'Rhododendron maximum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron molle']], [], false)
        .length,
      'Rhododendron molle'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Rhododendron mucronulatum']], [], false)
        .length,
      'Rhododendron mucronulatum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron ponticum']], [], false)
        .length,
      'Rhododendron ponticum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Rhododendron x praecox']], [], false)
        .length,
      'Rhododendron x praecox'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus ambigua']], [], false).length,
      'Rhus ambigua'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Rhus aromatica']], [], false).length,
      'Rhus aromatica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rhus chinensis']], [], false).length,
      'Rhus chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus copallina']], [], false).length,
      'Rhus copallina'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhus coriaria']], [], false).length,
      'Rhus coriaria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rhus diversiloba']], [], false).length,
      'Rhus diversiloba'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rhus glabra']], [], false).length,
      'Rhus glabra'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhus integrifolia']], [], false).length,
      'Rhus integrifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhus microphylla']], [], false).length,
      'Rhus microphylla'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Rhus ovata']], [], false).length,
      'Rhus ovata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rhus potaninii']], [], false).length,
      'Rhus potaninii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus punjabensis']], [], false).length,
      'Rhus punjabensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus punjabensis sinica']], [], false)
        .length,
      'Rhus punjabensis sinica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rhus radicans']], [], false).length,
      'Rhus radicans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus sempervirens']], [], false).length,
      'Rhus sempervirens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rhus succedanea']], [], false).length,
      'Rhus succedanea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus sylvestris']], [], false).length,
      'Rhus sylvestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus toxicodendron']], [], false)
        .length,
      'Rhus toxicodendron'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus trichocarpa']], [], false).length,
      'Rhus trichocarpa'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rhus trilobata']], [], false).length,
      'Rhus trilobata'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Rhus typhina']], [], false).length,
      'Rhus typhina'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rhus verniciflua']], [], false).length,
      'Rhus verniciflua'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rhus vernix']], [], false).length,
      'Rhus vernix'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhus wallichii']], [], false).length,
      'Rhus wallichii'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rhus x pulvinata']], [], false).length,
      'Rhus x pulvinata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhynchosinapis monensis']], [], false)
        .length,
      'Rhynchosinapis monensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rhynchosinapis wrightii']], [], false)
        .length,
      'Rhynchosinapis wrightii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes aciculare']], [], false).length,
      'Ribes aciculare'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes alpinum']], [], false).length,
      'Ribes alpinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes altissimum']], [], false).length,
      'Ribes altissimum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes ambiguum']], [], false).length,
      'Ribes ambiguum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes americanum']], [], false).length,
      'Ribes americanum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes aureum']], [], false).length,
      'Ribes aureum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes bracteosum']], [], false).length,
      'Ribes bracteosum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes burejense']], [], false).length,
      'Ribes burejense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes californicum']], [], false)
        .length,
      'Ribes californicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes cereum']], [], false).length,
      'Ribes cereum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes curvatum']], [], false).length,
      'Ribes curvatum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes cynosbati']], [], false).length,
      'Ribes cynosbati'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes diacanthum']], [], false).length,
      'Ribes diacanthum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Ribes distans']], [], false).length,
      'Ribes distans'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes divaricatum']], [], false).length,
      'Ribes divaricatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes fasciculatum']], [], false)
        .length,
      'Ribes fasciculatum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes fragrans']], [], false).length,
      'Ribes fragrans'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ribes gayanum']], [], false).length,
      'Ribes gayanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes glaciale']], [], false).length,
      'Ribes glaciale'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes glandulosum']], [], false).length,
      'Ribes glandulosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes griffithii']], [], false).length,
      'Ribes griffithii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes himalense']], [], false).length,
      'Ribes himalense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes hirtellum']], [], false).length,
      'Ribes hirtellum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes horridum']], [], false).length,
      'Ribes horridum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes hudsonianum']], [], false).length,
      'Ribes hudsonianum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes inebrians']], [], false).length,
      'Ribes inebrians'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes inerme']], [], false).length,
      'Ribes inerme'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes irriguum']], [], false).length,
      'Ribes irriguum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes janczewskii']], [], false).length,
      'Ribes janczewskii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes japonicum']], [], false).length,
      'Ribes japonicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes lacustre']], [], false).length,
      'Ribes lacustre'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes latifolium']], [], false).length,
      'Ribes latifolium'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Ribes laurifolium']], [], false).length,
      'Ribes laurifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes laxiflorum']], [], false).length,
      'Ribes laxiflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes leptanthum']], [], false).length,
      'Ribes leptanthum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes lobbii']], [], false).length,
      'Ribes lobbii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes longiracemosum']], [], false)
        .length,
      'Ribes longiracemosum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes luridum']], [], false).length,
      'Ribes luridum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes magellanicum']], [], false)
        .length,
      'Ribes magellanicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes mandschuricum']], [], false)
        .length,
      'Ribes mandschuricum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes maximowiczii']], [], false)
        .length,
      'Ribes maximowiczii'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Ribes maximowiczii floribundum']],
        [],
        false
      ).length,
      'Ribes maximowiczii floribundum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes menziesii']], [], false).length,
      'Ribes menziesii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes meyeri']], [], false).length,
      'Ribes meyeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes missouriense']], [], false)
        .length,
      'Ribes missouriense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes montigenum']], [], false).length,
      'Ribes montigenum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes multiflorum']], [], false).length,
      'Ribes multiflorum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes nigrum']], [], false).length,
      'Ribes nigrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes niveum']], [], false).length,
      'Ribes niveum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes odoratum']], [], false).length,
      'Ribes odoratum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes orientale']], [], false).length,
      'Ribes orientale'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes oxyacanthoides']], [], false)
        .length,
      'Ribes oxyacanthoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes palczewskii']], [], false).length,
      'Ribes palczewskii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes petiolare']], [], false).length,
      'Ribes petiolare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes petraeum']], [], false).length,
      'Ribes petraeum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Ribes petraeum biebersteinii']],
        [],
        false
      ).length,
      'Ribes petraeum biebersteinii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes pinetorum']], [], false).length,
      'Ribes pinetorum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes procumbens']], [], false).length,
      'Ribes procumbens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes punctatum']], [], false).length,
      'Ribes punctatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes roezlii']], [], false).length,
      'Ribes roezlii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes rotundifolium']], [], false)
        .length,
      'Ribes rotundifolium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes rubrum']], [], false).length,
      'Ribes rubrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes sachalinense']], [], false)
        .length,
      'Ribes sachalinense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes sanguineum']], [], false).length,
      'Ribes sanguineum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Ribes sanguineum glutinosum']],
        [],
        false
      ).length,
      'Ribes sanguineum glutinosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes sativum']], [], false).length,
      'Ribes sativum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes setosum']], [], false).length,
      'Ribes setosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes sinanense']], [], false).length,
      'Ribes sinanense'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes spicatum']], [], false).length,
      'Ribes spicatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes stenocarpum']], [], false).length,
      'Ribes stenocarpum'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ribes triste']], [], false).length,
      'Ribes triste'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes ussuriense']], [], false).length,
      'Ribes ussuriense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes uva-crispa']], [], false).length,
      'Ribes uva-crispa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes valdivianum']], [], false).length,
      'Ribes valdivianum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ribes viburnifolium']], [], false)
        .length,
      'Ribes viburnifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes viscosissimum']], [], false)
        .length,
      'Ribes viscosissimum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ribes warszewiczii']], [], false)
        .length,
      'Ribes warszewiczii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes x culverwellii']], [], false)
        .length,
      'Ribes x culverwellii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes x holosericeum']], [], false)
        .length,
      'Ribes x holosericeum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ribes x houghtonianum']], [], false)
        .length,
      'Ribes x houghtonianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ribes x robustum']], [], false).length,
      'Ribes x robustum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Ricinus communis']], [], false).length,
      'Ricinus communis'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Ripogonum scandens']], [], false)
        .length,
      'Ripogonum scandens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Robinia fertilis']], [], false).length,
      'Robinia fertilis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Robinia flava']], [], false).length,
      'Robinia flava'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Robinia luxurians']], [], false).length,
      'Robinia luxurians'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Robinia neomexicana']], [], false)
        .length,
      'Robinia neomexicana'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Robinia pseudoacacia']], [], false)
        .length,
      'Robinia pseudoacacia'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Robinia viscosa']], [], false).length,
      'Robinia viscosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rodgersia podophylla']], [], false)
        .length,
      'Rodgersia podophylla'
    );
    assert.equal(
      945,
      filterAndSort(crops, [nameToCrop['Rohdea japonica']], [], false).length,
      'Rohdea japonica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Romanzoffia suksdorfii']], [], false)
        .length,
      'Romanzoffia suksdorfii'
    );
    assert.equal(
      7213,
      filterAndSort(
        crops,
        [nameToCrop['Romanzoffia unalaschkensis']],
        [],
        false
      ).length,
      'Romanzoffia unalaschkensis'
    );
    assert.equal(
      7073,
      filterAndSort(crops, [nameToCrop['Romulea bulbocodium']], [], false)
        .length,
      'Romulea bulbocodium'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Rorippa amphibia']], [], false).length,
      'Rorippa amphibia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rorippa globosa']], [], false).length,
      'Rorippa globosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rorippa indica']], [], false).length,
      'Rorippa indica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rorippa palustris']], [], false).length,
      'Rorippa palustris'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rosa acicularis']], [], false).length,
      'Rosa acicularis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa arkansana']], [], false).length,
      'Rosa arkansana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa arkansana suffulta']], [], false)
        .length,
      'Rosa arkansana suffulta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa banksiae']], [], false).length,
      'Rosa banksiae'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rosa blanda']], [], false).length,
      'Rosa blanda'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa californica']], [], false).length,
      'Rosa californica'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rosa canina']], [], false).length,
      'Rosa canina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa carolina']], [], false).length,
      'Rosa carolina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa centifolia']], [], false).length,
      'Rosa centifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa chinensis']], [], false).length,
      'Rosa chinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa coriifolia']], [], false).length,
      'Rosa coriifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa corymbifera']], [], false).length,
      'Rosa corymbifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa cymosa']], [], false).length,
      'Rosa cymosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa davurica']], [], false).length,
      'Rosa davurica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa dumalis']], [], false).length,
      'Rosa dumalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa fedtschenkoana']], [], false)
        .length,
      'Rosa fedtschenkoana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa fraxinellaefolia']], [], false)
        .length,
      'Rosa fraxinellaefolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa gallica']], [], false).length,
      'Rosa gallica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rosa gigantea']], [], false).length,
      'Rosa gigantea'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rosa glauca']], [], false).length,
      'Rosa glauca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa gymnocarpa']], [], false).length,
      'Rosa gymnocarpa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa hemsleyana']], [], false).length,
      'Rosa hemsleyana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa laevigata']], [], false).length,
      'Rosa laevigata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa laxa']], [], false).length,
      'Rosa laxa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa macrophylla']], [], false).length,
      'Rosa macrophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa majalis']], [], false).length,
      'Rosa majalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa manca']], [], false).length,
      'Rosa manca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa maracandica']], [], false).length,
      'Rosa maracandica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa micrantha']], [], false).length,
      'Rosa micrantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa moschata']], [], false).length,
      'Rosa moschata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa moyesii']], [], false).length,
      'Rosa moyesii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa multiflora']], [], false).length,
      'Rosa multiflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa nutkana']], [], false).length,
      'Rosa nutkana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa obtusifolia']], [], false).length,
      'Rosa obtusifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa pimpinellifolia']], [], false)
        .length,
      'Rosa pimpinellifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa pisocarpa']], [], false).length,
      'Rosa pisocarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa roxburghii']], [], false).length,
      'Rosa roxburghii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa rubiginosa']], [], false).length,
      'Rosa rubiginosa'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Rosa rugosa']], [], false).length,
      'Rosa rugosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa sericea']], [], false).length,
      'Rosa sericea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa sericea omiensis']], [], false)
        .length,
      'Rosa sericea omiensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa sericea pteracantha']], [], false)
        .length,
      'Rosa sericea pteracantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa setipoda']], [], false).length,
      'Rosa setipoda'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa sherardii']], [], false).length,
      'Rosa sherardii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa sweginzowii']], [], false).length,
      'Rosa sweginzowii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa tomentosa']], [], false).length,
      'Rosa tomentosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa villosa']], [], false).length,
      'Rosa villosa'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rosa virginiana']], [], false).length,
      'Rosa virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa webbiana']], [], false).length,
      'Rosa webbiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa wichuraiana']], [], false).length,
      'Rosa wichuraiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa woodsii']], [], false).length,
      'Rosa woodsii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa x beanii']], [], false).length,
      'Rosa x beanii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rosa x damascena']], [], false).length,
      'Rosa x damascena'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rosa x odorata']], [], false).length,
      'Rosa x odorata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rosmarinus officinalis']], [], false)
        .length,
      'Rosmarinus officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia akane']], [], false).length,
      'Rubia akane'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia chinensis']], [], false).length,
      'Rubia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia cordifolia']], [], false).length,
      'Rubia cordifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia hexaphylla']], [], false).length,
      'Rubia hexaphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia jesoensis']], [], false).length,
      'Rubia jesoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia khasiana']], [], false).length,
      'Rubia khasiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia manjith']], [], false).length,
      'Rubia manjith'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia peregrina']], [], false).length,
      'Rubia peregrina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubia sikkimensis']], [], false).length,
      'Rubia sikkimensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubia tinctorum']], [], false).length,
      'Rubia tinctorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus abbrevians']], [], false).length,
      'Rubus abbrevians'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Rubus acaulis']], [], false).length,
      'Rubus acaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus acer']], [], false).length,
      'Rubus acer'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus adenophorus']], [], false).length,
      'Rubus adenophorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus adenotrichus']], [], false)
        .length,
      'Rubus adenotrichus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus affinis']], [], false).length,
      'Rubus affinis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus alexeterius']], [], false).length,
      'Rubus alexeterius'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus allegheniensis']], [], false)
        .length,
      'Rubus allegheniensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus almus']], [], false).length,
      'Rubus almus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus amabilis']], [], false).length,
      'Rubus amabilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubus ampelinus']], [], false).length,
      'Rubus ampelinus'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Rubus arcticus']], [], false).length,
      'Rubus arcticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus argutus']], [], false).length,
      'Rubus argutus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus arizonicus']], [], false).length,
      'Rubus arizonicus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus australis']], [], false).length,
      'Rubus australis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus avipes']], [], false).length,
      'Rubus avipes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus baileyanus']], [], false).length,
      'Rubus baileyanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus barbatus']], [], false).length,
      'Rubus barbatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus bellobatus']], [], false).length,
      'Rubus bellobatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus biflorus']], [], false).length,
      'Rubus biflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus bifrons']], [], false).length,
      'Rubus bifrons'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus bloxamii']], [], false).length,
      'Rubus bloxamii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus buergeri']], [], false).length,
      'Rubus buergeri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus caesius']], [], false).length,
      'Rubus caesius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus calycinus']], [], false).length,
      'Rubus calycinus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus canadensis']], [], false).length,
      'Rubus canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus candicans']], [], false).length,
      'Rubus candicans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus caucasicus']], [], false).length,
      'Rubus caucasicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus caudatus']], [], false).length,
      'Rubus caudatus'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Rubus chamaemorus']], [], false).length,
      'Rubus chamaemorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus chroosepalus']], [], false)
        .length,
      'Rubus chroosepalus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubus cissoides']], [], false).length,
      'Rubus cissoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus cockburnianus']], [], false)
        .length,
      'Rubus cockburnianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus corchorifolius']], [], false)
        .length,
      'Rubus corchorifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus coreanus']], [], false).length,
      'Rubus coreanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus corylifolius']], [], false)
        .length,
      'Rubus corylifolius'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus crataegifolius']], [], false)
        .length,
      'Rubus crataegifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus croceanthus']], [], false).length,
      'Rubus croceanthus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus cuneifolius']], [], false).length,
      'Rubus cuneifolius'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus deliciosus']], [], false).length,
      'Rubus deliciosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus divergens']], [], false).length,
      'Rubus divergens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus ellipticus']], [], false).length,
      'Rubus ellipticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus enslenii']], [], false).length,
      'Rubus enslenii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus flagellaris']], [], false).length,
      'Rubus flagellaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus flagelliflorus']], [], false)
        .length,
      'Rubus flagelliflorus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Rubus floribundo-paniculatus']],
        [],
        false
      ).length,
      'Rubus floribundo-paniculatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus floridus']], [], false).length,
      'Rubus floridus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus flosculosus']], [], false).length,
      'Rubus flosculosus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus frondosus']], [], false).length,
      'Rubus frondosus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Rubus fruticosus']], [], false).length,
      'Rubus fruticosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus geoides']], [], false).length,
      'Rubus geoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus geophilus']], [], false).length,
      'Rubus geophilus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus glandicaulis']], [], false)
        .length,
      'Rubus glandicaulis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus glaucus']], [], false).length,
      'Rubus glaucus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus grayanus']], [], false).length,
      'Rubus grayanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus gunnianus']], [], false).length,
      'Rubus gunnianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus henryi']], [], false).length,
      'Rubus henryi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus hirsutus']], [], false).length,
      'Rubus hirsutus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus hispidus']], [], false).length,
      'Rubus hispidus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rubus humilifolius']], [], false)
        .length,
      'Rubus humilifolius'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus hypargyrus niveus']], [], false)
        .length,
      'Rubus hypargyrus niveus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus ichangensis']], [], false).length,
      'Rubus ichangensis'
    );
    assert.equal(
      7119,
      filterAndSort(crops, [nameToCrop['Rubus idaeus']], [], false).length,
      'Rubus idaeus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus ikenoensis']], [], false).length,
      'Rubus ikenoensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus illecebrosus']], [], false)
        .length,
      'Rubus illecebrosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus innominatus']], [], false).length,
      'Rubus innominatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus invisus']], [], false).length,
      'Rubus invisus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus jacens']], [], false).length,
      'Rubus jacens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus kuntzeanus']], [], false).length,
      'Rubus kuntzeanus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus laciniatus']], [], false).length,
      'Rubus laciniatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus lambertianus']], [], false)
        .length,
      'Rubus lambertianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus lanatus']], [], false).length,
      'Rubus lanatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus lasiostylus']], [], false).length,
      'Rubus lasiostylus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus laudatus']], [], false).length,
      'Rubus laudatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus lemurum']], [], false).length,
      'Rubus lemurum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus lentiginosus']], [], false)
        .length,
      'Rubus lentiginosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus leucodermis']], [], false).length,
      'Rubus leucodermis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus leucostachys']], [], false)
        .length,
      'Rubus leucostachys'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus lineatus']], [], false).length,
      'Rubus lineatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus linkianus']], [], false).length,
      'Rubus linkianus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus loganobaccus']], [], false)
        .length,
      'Rubus loganobaccus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus louisianus']], [], false).length,
      'Rubus louisianus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus macilentus']], [], false).length,
      'Rubus macilentus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus macropetalus']], [], false)
        .length,
      'Rubus macropetalus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus magnificus']], [], false).length,
      'Rubus magnificus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus mesogaeus']], [], false).length,
      'Rubus mesogaeus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus michiganensis']], [], false)
        .length,
      'Rubus michiganensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus microphyllus']], [], false)
        .length,
      'Rubus microphyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus moluccanus']], [], false).length,
      'Rubus moluccanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus moorei']], [], false).length,
      'Rubus moorei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus nemerosus']], [], false).length,
      'Rubus nemerosus'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus nepalensis']], [], false).length,
      'Rubus nepalensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus nessensis']], [], false).length,
      'Rubus nessensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus nigricans']], [], false).length,
      'Rubus nigricans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus nitidioides']], [], false).length,
      'Rubus nitidioides'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus niveus']], [], false).length,
      'Rubus niveus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus nubigenus']], [], false).length,
      'Rubus nubigenus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus occidentalis']], [], false)
        .length,
      'Rubus occidentalis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus odoratus']], [], false).length,
      'Rubus odoratus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus ostryfolius']], [], false).length,
      'Rubus ostryfolius'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Rubus palmatus']], [], false).length,
      'Rubus palmatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus paniculatus']], [], false).length,
      'Rubus paniculatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus parcifrondifer']], [], false)
        .length,
      'Rubus parcifrondifer'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus parviflorus']], [], false).length,
      'Rubus parviflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus parvifolius']], [], false).length,
      'Rubus parvifolius'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus parvus']], [], false).length,
      'Rubus parvus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pascuus']], [], false).length,
      'Rubus pascuus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pectinellus']], [], false).length,
      'Rubus pectinellus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pedatus']], [], false).length,
      'Rubus pedatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus peltatus']], [], false).length,
      'Rubus peltatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pensylvanicus']], [], false)
        .length,
      'Rubus pensylvanicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pergratus']], [], false).length,
      'Rubus pergratus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus permixtus']], [], false).length,
      'Rubus permixtus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus philadelphicus']], [], false)
        .length,
      'Rubus philadelphicus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus phoenicolasius']], [], false)
        .length,
      'Rubus phoenicolasius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus platyphyllus']], [], false)
        .length,
      'Rubus platyphyllus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus platysepalus']], [], false)
        .length,
      'Rubus platysepalus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus procerus']], [], false).length,
      'Rubus procerus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pseudo-acer']], [], false).length,
      'Rubus pseudo-acer'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pubescens']], [], false).length,
      'Rubus pubescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus pungens oldhamii']], [], false)
        .length,
      'Rubus pungens oldhamii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus racemosus']], [], false).length,
      'Rubus racemosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus radicans']], [], false).length,
      'Rubus radicans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus reticulatus']], [], false).length,
      'Rubus reticulatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus rhamnifolius']], [], false)
        .length,
      'Rubus rhamnifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus rolfei']], [], false).length,
      'Rubus rolfei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus rosa']], [], false).length,
      'Rubus rosa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus rosaefolius']], [], false).length,
      'Rubus rosaefolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus roseus']], [], false).length,
      'Rubus roseus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus rubiginosus']], [], false).length,
      'Rubus rubiginosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus sachalinensis']], [], false)
        .length,
      'Rubus sachalinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus salteri']], [], false).length,
      'Rubus salteri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus sanguineus']], [], false).length,
      'Rubus sanguineus'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Rubus saxatilis']], [], false).length,
      'Rubus saxatilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus schmidelioides']], [], false)
        .length,
      'Rubus schmidelioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus serissimus']], [], false).length,
      'Rubus serissimus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus setchuenensis']], [], false)
        .length,
      'Rubus setchuenensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus sieboldii']], [], false).length,
      'Rubus sieboldii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus simplex']], [], false).length,
      'Rubus simplex'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Rubus  species']], [], false).length,
      'Rubus  species'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rubus spectabilis']], [], false).length,
      'Rubus spectabilis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Rubus squarrosus']], [], false).length,
      'Rubus squarrosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus stans']], [], false).length,
      'Rubus stans'
    );
    assert.equal(
      6006,
      filterAndSort(crops, [nameToCrop['Rubus stellatus']], [], false).length,
      'Rubus stellatus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Rubus strigosus']], [], false).length,
      'Rubus strigosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus sulcatus']], [], false).length,
      'Rubus sulcatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus tephrodes']], [], false).length,
      'Rubus tephrodes'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus thibetanus']], [], false).length,
      'Rubus thibetanus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus thyrsanthus']], [], false).length,
      'Rubus thyrsanthus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Rubus tricolor']], [], false).length,
      'Rubus tricolor'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus trifidus']], [], false).length,
      'Rubus trifidus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus trivialis']], [], false).length,
      'Rubus trivialis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus tsangorum']], [], false).length,
      'Rubus tsangorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus ulmifolius']], [], false).length,
      'Rubus ulmifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus ursinus']], [], false).length,
      'Rubus ursinus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus vernus']], [], false).length,
      'Rubus vernus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus vestervicensis']], [], false)
        .length,
      'Rubus vestervicensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus villosus']], [], false).length,
      'Rubus villosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus x neglectus']], [], false).length,
      'Rubus x neglectus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rubus xanthocarpus']], [], false)
        .length,
      'Rubus xanthocarpus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rudbeckia hirta']], [], false).length,
      'Rudbeckia hirta'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Rudbeckia laciniata']], [], false)
        .length,
      'Rudbeckia laciniata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rulingia dasyphylla']], [], false)
        .length,
      'Rulingia dasyphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex abyssinicus']], [], false).length,
      'Rumex abyssinicus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Rumex acetosa']], [], false).length,
      'Rumex acetosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rumex acetosella']], [], false).length,
      'Rumex acetosella'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rumex alpinus']], [], false).length,
      'Rumex alpinus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex angiocarpus']], [], false).length,
      'Rumex angiocarpus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Rumex aquaticus']], [], false).length,
      'Rumex aquaticus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex arcticus']], [], false).length,
      'Rumex arcticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex arifolius']], [], false).length,
      'Rumex arifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex berlandieri']], [], false).length,
      'Rumex berlandieri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex brownii']], [], false).length,
      'Rumex brownii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex bucephalophorus']], [], false)
        .length,
      'Rumex bucephalophorus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex conglomeratus']], [], false)
        .length,
      'Rumex conglomeratus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Rumex crispus']], [], false).length,
      'Rumex crispus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex daiwoo']], [], false).length,
      'Rumex daiwoo'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex dentatus']], [], false).length,
      'Rumex dentatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex gmelinii']], [], false).length,
      'Rumex gmelinii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex graminifolius']], [], false)
        .length,
      'Rumex graminifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex hastatus']], [], false).length,
      'Rumex hastatus'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Rumex hydrolapathum']], [], false)
        .length,
      'Rumex hydrolapathum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex hymenosepalus']], [], false)
        .length,
      'Rumex hymenosepalus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex japonicus']], [], false).length,
      'Rumex japonicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex longifolius']], [], false).length,
      'Rumex longifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex maritimus']], [], false).length,
      'Rumex maritimus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex mexicanus']], [], false).length,
      'Rumex mexicanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex nepalensis']], [], false).length,
      'Rumex nepalensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rumex obtusifolius']], [], false)
        .length,
      'Rumex obtusifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex occidentalis']], [], false)
        .length,
      'Rumex occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex patienta']], [], false).length,
      'Rumex patienta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex paucifolius']], [], false).length,
      'Rumex paucifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex pulcher']], [], false).length,
      'Rumex pulcher'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex salicifolius']], [], false)
        .length,
      'Rumex salicifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex sanguineus']], [], false).length,
      'Rumex sanguineus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Rumex scutatus']], [], false).length,
      'Rumex scutatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex simpliciflorus']], [], false)
        .length,
      'Rumex simpliciflorus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex tenuifolius']], [], false).length,
      'Rumex tenuifolius'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Rumex tingitanus']], [], false).length,
      'Rumex tingitanus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Rumex venosus']], [], false).length,
      'Rumex venosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Rumex vesicarius']], [], false).length,
      'Rumex vesicarius'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ruscus aculeatus']], [], false).length,
      'Ruscus aculeatus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Ruta chalepensis']], [], false).length,
      'Ruta chalepensis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Ruta graveolens']], [], false).length,
      'Ruta graveolens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ruta montana']], [], false).length,
      'Ruta montana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sabal etonia']], [], false).length,
      'Sabal etonia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sabal mexicana']], [], false).length,
      'Sabal mexicana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sabal minor']], [], false).length,
      'Sabal minor'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sabal palmetto']], [], false).length,
      'Sabal palmetto'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sabatia angularis']], [], false).length,
      'Sabatia angularis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sabatia campestris']], [], false)
        .length,
      'Sabatia campestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sabatia elliotii']], [], false).length,
      'Sabatia elliotii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sagina japonica']], [], false).length,
      'Sagina japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sagina maxima']], [], false).length,
      'Sagina maxima'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria aginashi']], [], false)
        .length,
      'Sagittaria aginashi'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria brevirosta']], [], false)
        .length,
      'Sagittaria brevirosta'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria chapmanii']], [], false)
        .length,
      'Sagittaria chapmanii'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria cuneata']], [], false)
        .length,
      'Sagittaria cuneata'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria graminea']], [], false)
        .length,
      'Sagittaria graminea'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria latifolia']], [], false)
        .length,
      'Sagittaria latifolia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria rigida']], [], false).length,
      'Sagittaria rigida'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sagittaria sagittifolia']], [], false)
        .length,
      'Sagittaria sagittifolia'
    );
    assert.equal(
      192,
      filterAndSort(
        crops,
        [nameToCrop['Sagittaria sagittifolia leucopetala']],
        [],
        false
      ).length,
      'Sagittaria sagittifolia leucopetala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia ambigua']], [], false)
        .length,
      'Salicornia ambigua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia bigelovii']], [], false)
        .length,
      'Salicornia bigelovii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia europaea']], [], false)
        .length,
      'Salicornia europaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia quinqueflora']], [], false)
        .length,
      'Salicornia quinqueflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia rubra']], [], false).length,
      'Salicornia rubra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia utahensis']], [], false)
        .length,
      'Salicornia utahensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salicornia virginica']], [], false)
        .length,
      'Salicornia virginica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop["Salix 'Americana'"]], [], false).length,
      "Salix 'Americana'"
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop["Salix 'Bowles hybrid'"]], [], false)
        .length,
      "Salix 'Bowles hybrid'"
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop["Salix 'Forbiana'"]], [], false).length,
      "Salix 'Forbiana'"
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix acutifolia']], [], false).length,
      'Salix acutifolia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix aegyptiaca']], [], false).length,
      'Salix aegyptiaca'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Salix alaxensis']], [], false).length,
      'Salix alaxensis'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix alba']], [], false).length,
      'Salix alba'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix alba caerulea']], [], false)
        .length,
      'Salix alba caerulea'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix alba vitellina']], [], false)
        .length,
      'Salix alba vitellina'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix amygdaloides']], [], false)
        .length,
      'Salix amygdaloides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salix appendiculata']], [], false)
        .length,
      'Salix appendiculata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix arenaria']], [], false).length,
      'Salix arenaria'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix atrocinerea']], [], false).length,
      'Salix atrocinerea'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix aurita']], [], false).length,
      'Salix aurita'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix babylonica']], [], false).length,
      'Salix babylonica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix bakko']], [], false).length,
      'Salix bakko'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Salix bebbiana']], [], false).length,
      'Salix bebbiana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix brachycarpa']], [], false).length,
      'Salix brachycarpa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Salix caprea']], [], false).length,
      'Salix caprea'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix chaenomeloides']], [], false)
        .length,
      'Salix chaenomeloides'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix cinerea']], [], false).length,
      'Salix cinerea'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix commutata']], [], false).length,
      'Salix commutata'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix daphnoides']], [], false).length,
      'Salix daphnoides'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix decipiens']], [], false).length,
      'Salix decipiens'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix eriocephala']], [], false).length,
      'Salix eriocephala'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix exigua']], [], false).length,
      'Salix exigua'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Salix fluviatilis']], [], false).length,
      'Salix fluviatilis'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix fragilis']], [], false).length,
      'Salix fragilis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix gilgiana']], [], false).length,
      'Salix gilgiana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix gooddingii']], [], false).length,
      'Salix gooddingii'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix gracilistyla']], [], false)
        .length,
      'Salix gracilistyla'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix hastata']], [], false).length,
      'Salix hastata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix hookeriana']], [], false).length,
      'Salix hookeriana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix japonica']], [], false).length,
      'Salix japonica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix koriyanagi']], [], false).length,
      'Salix koriyanagi'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix lanata']], [], false).length,
      'Salix lanata'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix lasiandra']], [], false).length,
      'Salix lasiandra'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix lasiolepis']], [], false).length,
      'Salix lasiolepis'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix lucida']], [], false).length,
      'Salix lucida'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix matsudana']], [], false).length,
      'Salix matsudana'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix miyabeana']], [], false).length,
      'Salix miyabeana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix nigra']], [], false).length,
      'Salix nigra'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix nipponica']], [], false).length,
      'Salix nipponica'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix pentandra']], [], false).length,
      'Salix pentandra'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix petiolaris']], [], false).length,
      'Salix petiolaris'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix piperi']], [], false).length,
      'Salix piperi'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Salix pulchra']], [], false).length,
      'Salix pulchra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Salix purpurea']], [], false).length,
      'Salix purpurea'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Salix purpurea lambertiana']],
        [],
        false
      ).length,
      'Salix purpurea lambertiana'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Salix repens']], [], false).length,
      'Salix repens'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix schwerinii']], [], false).length,
      'Salix schwerinii'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix scouleriana']], [], false).length,
      'Salix scouleriana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix sitchensis']], [], false).length,
      'Salix sitchensis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix sungkianica']], [], false).length,
      'Salix sungkianica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix taxifolia']], [], false).length,
      'Salix taxifolia'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix triandra']], [], false).length,
      'Salix triandra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Salix viminalis']], [], false).length,
      'Salix viminalis'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Salix wallichiana']], [], false).length,
      'Salix wallichiana'
    );
    assert.equal(
      7216,
      filterAndSort(
        crops,
        [nameToCrop['Salix x mollisima hippophaeifolia']],
        [],
        false
      ).length,
      'Salix x mollisima hippophaeifolia'
    );
    assert.equal(
      7216,
      filterAndSort(
        crops,
        [nameToCrop['Salix x mollisima undulata']],
        [],
        false
      ).length,
      'Salix x mollisima undulata'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix x rubra']], [], false).length,
      'Salix x rubra'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Salix x smithiana']], [], false).length,
      'Salix x smithiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salsola asparagoides']], [], false)
        .length,
      'Salsola asparagoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salsola collina']], [], false).length,
      'Salsola collina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salsola kali']], [], false).length,
      'Salsola kali'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salsola kali ruthenica']], [], false)
        .length,
      'Salsola kali ruthenica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salsola komarovi']], [], false).length,
      'Salsola komarovi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Salsola soda']], [], false).length,
      'Salsola soda'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia apiana']], [], false).length,
      'Salvia apiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia ballotaeflora']], [], false)
        .length,
      'Salvia ballotaeflora'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia carduacea']], [], false).length,
      'Salvia carduacea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia carnosa']], [], false).length,
      'Salvia carnosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia clevelandii']], [], false)
        .length,
      'Salvia clevelandii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Salvia columbariae']], [], false)
        .length,
      'Salvia columbariae'
    );
    assert.equal(
      2818,
      filterAndSort(crops, [nameToCrop['Salvia divinorum']], [], false).length,
      'Salvia divinorum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia elegans']], [], false).length,
      'Salvia elegans'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Salvia fruticosa']], [], false).length,
      'Salvia fruticosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia glabrescens']], [], false)
        .length,
      'Salvia glabrescens'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Salvia glutinosa']], [], false).length,
      'Salvia glutinosa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Salvia hispanica']], [], false).length,
      'Salvia hispanica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia japonica']], [], false).length,
      'Salvia japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia lanata']], [], false).length,
      'Salvia lanata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia lanigera']], [], false).length,
      'Salvia lanigera'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Salvia lavandulifolia']], [], false)
        .length,
      'Salvia lavandulifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Salvia lyrata']], [], false).length,
      'Salvia lyrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia mellifera']], [], false).length,
      'Salvia mellifera'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia microphylla']], [], false)
        .length,
      'Salvia microphylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia moorcroftiana']], [], false)
        .length,
      'Salvia moorcroftiana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia multicaulis']], [], false)
        .length,
      'Salvia multicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia multiorrhiza']], [], false)
        .length,
      'Salvia multiorrhiza'
    );
    assert.equal(
      7052,
      filterAndSort(crops, [nameToCrop['Salvia officinalis']], [], false)
        .length,
      'Salvia officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia plebeia']], [], false).length,
      'Salvia plebeia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Salvia pomifera']], [], false).length,
      'Salvia pomifera'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Salvia pratensis']], [], false).length,
      'Salvia pratensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia reflexa']], [], false).length,
      'Salvia reflexa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Salvia sclarea']], [], false).length,
      'Salvia sclarea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia stachyoides']], [], false)
        .length,
      'Salvia stachyoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia sylvestris']], [], false).length,
      'Salvia sylvestris'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Salvia tiliifolia']], [], false).length,
      'Salvia tiliifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia tomentosa']], [], false).length,
      'Salvia tomentosa'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Salvia verbenaca']], [], false).length,
      'Salvia verbenaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Salvia viridis']], [], false).length,
      'Salvia viridis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus australiasica']], [], false)
        .length,
      'Sambucus australiasica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sambucus caerulea']], [], false).length,
      'Sambucus caerulea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus callicarpa']], [], false)
        .length,
      'Sambucus callicarpa'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Sambucus canadensis']], [], false)
        .length,
      'Sambucus canadensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Sambucus chinensis']], [], false)
        .length,
      'Sambucus chinensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sambucus ebulus']], [], false).length,
      'Sambucus ebulus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus gaudichaudiana']], [], false)
        .length,
      'Sambucus gaudichaudiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus javanica']], [], false).length,
      'Sambucus javanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus latipinna']], [], false)
        .length,
      'Sambucus latipinna'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus melanocarpa']], [], false)
        .length,
      'Sambucus melanocarpa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus mexicana']], [], false).length,
      'Sambucus mexicana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus microbotrys']], [], false)
        .length,
      'Sambucus microbotrys'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sambucus nigra']], [], false).length,
      'Sambucus nigra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sambucus pubens']], [], false).length,
      'Sambucus pubens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sambucus racemosa']], [], false).length,
      'Sambucus racemosa'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Sambucus racemosa kamtschatica']],
        [],
        false
      ).length,
      'Sambucus racemosa kamtschatica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus sieboldiana']], [], false)
        .length,
      'Sambucus sieboldiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus wightiana']], [], false)
        .length,
      'Sambucus wightiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sambucus williamsii']], [], false)
        .length,
      'Sambucus williamsii'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Samolus parviflorus']], [], false)
        .length,
      'Samolus parviflorus'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Samolus valerandi']], [], false).length,
      'Samolus valerandi'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Sanguinaria canadensis']], [], false)
        .length,
      'Sanguinaria canadensis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sanguisorba canadensis']], [], false)
        .length,
      'Sanguisorba canadensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sanguisorba menziesii']], [], false)
        .length,
      'Sanguisorba menziesii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sanguisorba minor']], [], false).length,
      'Sanguisorba minor'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sanguisorba obtusa']], [], false)
        .length,
      'Sanguisorba obtusa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sanguisorba occidentalis']], [], false)
        .length,
      'Sanguisorba occidentalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sanguisorba officinalis']], [], false)
        .length,
      'Sanguisorba officinalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sanguisorba stipulata']], [], false)
        .length,
      'Sanguisorba stipulata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sanguisorba tenuifolia']], [], false)
        .length,
      'Sanguisorba tenuifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula canadensis']], [], false)
        .length,
      'Sanicula canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula chinensis']], [], false)
        .length,
      'Sanicula chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula europaea']], [], false).length,
      'Sanicula europaea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula marylandica']], [], false)
        .length,
      'Sanicula marylandica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula rubriflora']], [], false)
        .length,
      'Sanicula rubriflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula tuberculata']], [], false)
        .length,
      'Sanicula tuberculata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sanicula tuberosa']], [], false).length,
      'Sanicula tuberosa'
    );
    assert.equal(
      6645,
      filterAndSort(crops, [nameToCrop['Sanseviera aethiopica']], [], false)
        .length,
      'Sanseviera aethiopica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Santalum acuminatum']], [], false)
        .length,
      'Santalum acuminatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Santalum lanceolatum']], [], false)
        .length,
      'Santalum lanceolatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Santalum murrayanum']], [], false)
        .length,
      'Santalum murrayanum'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Santolina chamaecyparissus']],
        [],
        false
      ).length,
      'Santolina chamaecyparissus'
    );
    assert.equal(
      7221,
      filterAndSort(
        crops,
        [nameToCrop['Santolina pinnata neopolitana']],
        [],
        false
      ).length,
      'Santolina pinnata neopolitana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Santolina rosmarinifolia']], [], false)
        .length,
      'Santolina rosmarinifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Sapindus drummondii']], [], false)
        .length,
      'Sapindus drummondii'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Sapindus marginatus']], [], false)
        .length,
      'Sapindus marginatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Sapium japonicum']], [], false).length,
      'Sapium japonicum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Sapium sebiferum']], [], false).length,
      'Sapium sebiferum'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Saponaria ocymoides']], [], false)
        .length,
      'Saponaria ocymoides'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Saponaria officinalis']], [], false)
        .length,
      'Saponaria officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sarcobatus vermiculatus']], [], false)
        .length,
      'Sarcobatus vermiculatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Sargentodoxa cuneata']], [], false)
        .length,
      'Sargentodoxa cuneata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sarracenia flava']], [], false).length,
      'Sarracenia flava'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Sarracenia purpurea']], [], false)
        .length,
      'Sarracenia purpurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa cernua']], [], false).length,
      'Sasa cernua'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa chimakisasa']], [], false).length,
      'Sasa chimakisasa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa kurilensis']], [], false).length,
      'Sasa kurilensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa nipponica']], [], false).length,
      'Sasa nipponica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa palmata']], [], false).length,
      'Sasa palmata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasa senanensis']], [], false).length,
      'Sasa senanensis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Sasa veitchii']], [], false).length,
      'Sasa veitchii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasaella ramosa']], [], false).length,
      'Sasaella ramosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sasamorpha borealis']], [], false)
        .length,
      'Sasamorpha borealis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Sassafras albidum']], [], false).length,
      'Sassafras albidum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Satureja hortensis']], [], false)
        .length,
      'Satureja hortensis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Satureja montana']], [], false).length,
      'Satureja montana'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Satureja spicigera']], [], false)
        .length,
      'Satureja spicigera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Satureja thymbra']], [], false).length,
      'Satureja thymbra'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Saururus cernuus']], [], false).length,
      'Saururus cernuus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Saururus chinensis']], [], false)
        .length,
      'Saururus chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saussurea affinis']], [], false).length,
      'Saussurea affinis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea costus']], [], false).length,
      'Saussurea costus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea diamantica']], [], false)
        .length,
      'Saussurea diamantica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea gracilis']], [], false)
        .length,
      'Saussurea gracilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea graminifolia']], [], false)
        .length,
      'Saussurea graminifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saussurea grandifolia']], [], false)
        .length,
      'Saussurea grandifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saussurea lyrata']], [], false).length,
      'Saussurea lyrata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea maximowiczii']], [], false)
        .length,
      'Saussurea maximowiczii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea obvallata']], [], false)
        .length,
      'Saussurea obvallata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea parviflora']], [], false)
        .length,
      'Saussurea parviflora'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Saussurea pulchella']], [], false)
        .length,
      'Saussurea pulchella'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea roylei']], [], false).length,
      'Saussurea roylei'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Saussurea serrata amurensis']],
        [],
        false
      ).length,
      'Saussurea serrata amurensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saussurea ussuriensis']], [], false)
        .length,
      'Saussurea ussuriensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saxifraga cortusifolia']], [], false)
        .length,
      'Saxifraga cortusifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saxifraga fortunei']], [], false)
        .length,
      'Saxifraga fortunei'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saxifraga fusca']], [], false).length,
      'Saxifraga fusca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saxifraga japonica']], [], false)
        .length,
      'Saxifraga japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saxifraga mertensiana']], [], false)
        .length,
      'Saxifraga mertensiana'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Saxifraga micranthidifolia']],
        [],
        false
      ).length,
      'Saxifraga micranthidifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saxifraga oblongifolia']], [], false)
        .length,
      'Saxifraga oblongifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saxifraga pensylvanica']], [], false)
        .length,
      'Saxifraga pensylvanica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Saxifraga punctata']], [], false)
        .length,
      'Saxifraga punctata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Saxifraga spicata']], [], false).length,
      'Saxifraga spicata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Saxifraga stolonifera']], [], false)
        .length,
      'Saxifraga stolonifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scabiosa columbaria']], [], false)
        .length,
      'Scabiosa columbaria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Scabiosa fischeri']], [], false).length,
      'Scabiosa fischeri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scabiosa japonica']], [], false).length,
      'Scabiosa japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scaevola spinescens']], [], false)
        .length,
      'Scaevola spinescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scandix grandiflora']], [], false)
        .length,
      'Scandix grandiflora'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Scandix pecten-veneris']], [], false)
        .length,
      'Scandix pecten-veneris'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Schinus molle']], [], false).length,
      'Schinus molle'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Schinus polygamus']], [], false).length,
      'Schinus polygamus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Schisandra chinensis']], [], false)
        .length,
      'Schisandra chinensis'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Schisandra grandiflora']], [], false)
        .length,
      'Schisandra grandiflora'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Schisandra henryi']], [], false).length,
      'Schisandra henryi'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Schisandra repanda']], [], false)
        .length,
      'Schisandra repanda'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Schisandra rubriflora']], [], false)
        .length,
      'Schisandra rubriflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Schisandra sphenanthera']], [], false)
        .length,
      'Schisandra sphenanthera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Schizomeria ovata']], [], false).length,
      'Schizomeria ovata'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Schizophragma hydrangeoides']],
        [],
        false
      ).length,
      'Schizophragma hydrangeoides'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Schizophragma integrifolium']],
        [],
        false
      ).length,
      'Schizophragma integrifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sciadopitys verticillata']], [], false)
        .length,
      'Sciadopitys verticillata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Scilla scilloides']], [], false).length,
      'Scilla scilloides'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus acutus']], [], false).length,
      'Scirpus acutus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus affinis']], [], false).length,
      'Scirpus affinis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus americanus']], [], false)
        .length,
      'Scirpus americanus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scirpus caldwellii']], [], false)
        .length,
      'Scirpus caldwellii'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus cyperinus']], [], false).length,
      'Scirpus cyperinus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus fluviatilis']], [], false)
        .length,
      'Scirpus fluviatilis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus lacustris']], [], false).length,
      'Scirpus lacustris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scirpus litoralis']], [], false).length,
      'Scirpus litoralis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus maritimus']], [], false).length,
      'Scirpus maritimus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scirpus medianus']], [], false).length,
      'Scirpus medianus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus microcarpus']], [], false)
        .length,
      'Scirpus microcarpus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus nevadensis']], [], false)
        .length,
      'Scirpus nevadensis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus paludosus']], [], false).length,
      'Scirpus paludosus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus subterminalis']], [], false)
        .length,
      'Scirpus subterminalis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus ternatus']], [], false).length,
      'Scirpus ternatus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus validus']], [], false).length,
      'Scirpus validus'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Scirpus validus creber']], [], false)
        .length,
      'Scirpus validus creber'
    );
    assert.equal(
      7074,
      filterAndSort(crops, [nameToCrop['Scleranthus annuus']], [], false)
        .length,
      'Scleranthus annuus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scolymus grandiflorus']], [], false)
        .length,
      'Scolymus grandiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scolymus hispanicus']], [], false)
        .length,
      'Scolymus hispanicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scolymus maculatus']], [], false)
        .length,
      'Scolymus maculatus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Scopolia carniolica']], [], false)
        .length,
      'Scopolia carniolica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scopolia japonica']], [], false).length,
      'Scopolia japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorpiurus muricatus']], [], false)
        .length,
      'Scorpiurus muricatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorpiurus vermiculatus']], [], false)
        .length,
      'Scorpiurus vermiculatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera acanthoclada']], [], false)
        .length,
      'Scorzonera acanthoclada'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera albicaulis']], [], false)
        .length,
      'Scorzonera albicaulis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera austriaca']], [], false)
        .length,
      'Scorzonera austriaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera crocifolia']], [], false)
        .length,
      'Scorzonera crocifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera divaricata']], [], false)
        .length,
      'Scorzonera divaricata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera hispanica']], [], false)
        .length,
      'Scorzonera hispanica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera hissaricata']], [], false)
        .length,
      'Scorzonera hissaricata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera mollis']], [], false).length,
      'Scorzonera mollis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera mongolica']], [], false)
        .length,
      'Scorzonera mongolica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera papposa']], [], false)
        .length,
      'Scorzonera papposa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera parviflora']], [], false)
        .length,
      'Scorzonera parviflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera ptilophora']], [], false)
        .length,
      'Scorzonera ptilophora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera racemosa']], [], false)
        .length,
      'Scorzonera racemosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera schweinfurthii']], [], false)
        .length,
      'Scorzonera schweinfurthii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera tau-saghyz']], [], false)
        .length,
      'Scorzonera tau-saghyz'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Scorzonera tragapogonoides']],
        [],
        false
      ).length,
      'Scorzonera tragapogonoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera tuberosa']], [], false)
        .length,
      'Scorzonera tuberosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera turkestania']], [], false)
        .length,
      'Scorzonera turkestania'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera undulata']], [], false)
        .length,
      'Scorzonera undulata'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Scorzonera undulata deliciosa']],
        [],
        false
      ).length,
      'Scorzonera undulata deliciosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Scorzonera virgata']], [], false)
        .length,
      'Scorzonera virgata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scrophularia buergeriana']], [], false)
        .length,
      'Scrophularia buergeriana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scrophularia marilandica']], [], false)
        .length,
      'Scrophularia marilandica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scrophularia ningpoensis']], [], false)
        .length,
      'Scrophularia ningpoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scrophularia nodosa']], [], false)
        .length,
      'Scrophularia nodosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scrophularia umbrosa']], [], false)
        .length,
      'Scrophularia umbrosa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Scutellaria baicalensis']], [], false)
        .length,
      'Scutellaria baicalensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scutellaria barbata']], [], false)
        .length,
      'Scutellaria barbata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Scutellaria galericulata']], [], false)
        .length,
      'Scutellaria galericulata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Scutellaria indica']], [], false)
        .length,
      'Scutellaria indica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Scutellaria lateriflora']], [], false)
        .length,
      'Scutellaria lateriflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sebaea ovata']], [], false).length,
      'Sebaea ovata'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Secale cereale']], [], false).length,
      'Secale cereale'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Secale cereale ancestrale']], [], false)
        .length,
      'Secale cereale ancestrale'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Secale strictum']], [], false).length,
      'Secale strictum'
    );
    assert.equal(
      7121,
      filterAndSort(
        crops,
        [nameToCrop['Secale strictum kuprijanovii']],
        [],
        false
      ).length,
      'Secale strictum kuprijanovii'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Secale sylvestre']], [], false).length,
      'Secale sylvestre'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Secale vavilovii']], [], false).length,
      'Secale vavilovii'
    );
    assert.equal(
      6647,
      filterAndSort(
        crops,
        [nameToCrop['Securidaca longipedunculata']],
        [],
        false
      ).length,
      'Securidaca longipedunculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Securinega suffruticosa']], [], false)
        .length,
      'Securinega suffruticosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sedum acre']], [], false).length,
      'Sedum acre'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum aizoon']], [], false).length,
      'Sedum aizoon'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum album']], [], false).length,
      'Sedum album'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Sedum anacampseros']], [], false)
        .length,
      'Sedum anacampseros'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Sedum arboroseum']], [], false).length,
      'Sedum arboroseum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum divergens']], [], false).length,
      'Sedum divergens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum forsterianum']], [], false)
        .length,
      'Sedum forsterianum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum japonicum']], [], false).length,
      'Sedum japonicum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum kamtschaticum']], [], false)
        .length,
      'Sedum kamtschaticum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum lanceolatum']], [], false).length,
      'Sedum lanceolatum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum lineare']], [], false).length,
      'Sedum lineare'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum makinoi']], [], false).length,
      'Sedum makinoi'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum oreganum']], [], false).length,
      'Sedum oreganum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Sedum rupestre']], [], false).length,
      'Sedum rupestre'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum sarmentosum']], [], false).length,
      'Sedum sarmentosum'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Sedum sediforme']], [], false).length,
      'Sedum sediforme'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum spathulifolium']], [], false)
        .length,
      'Sedum spathulifolium'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum spectabile']], [], false).length,
      'Sedum spectabile'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum spurium']], [], false).length,
      'Sedum spurium'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum stenopetalum']], [], false)
        .length,
      'Sedum stenopetalum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sedum stoloniferum']], [], false)
        .length,
      'Sedum stoloniferum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sedum telephium']], [], false).length,
      'Sedum telephium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Selaginella tamariscina']], [], false)
        .length,
      'Selaginella tamariscina'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Semiaquilegia adoxoides']], [], false)
        .length,
      'Semiaquilegia adoxoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Semiarundinaria fastuosa']], [], false)
        .length,
      'Semiarundinaria fastuosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Semiarundinaria murielae']], [], false)
        .length,
      'Semiarundinaria murielae'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sempervivum arachnoideum']], [], false)
        .length,
      'Sempervivum arachnoideum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sempervivum caucasicum']], [], false)
        .length,
      'Sempervivum caucasicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sempervivum tectorum']], [], false)
        .length,
      'Sempervivum tectorum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Senecio cannabifolius']], [], false)
        .length,
      'Senecio cannabifolius'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Senecio cineraria']], [], false).length,
      'Senecio cineraria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senecio erucifolius']], [], false)
        .length,
      'Senecio erucifolius'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Senecio jacobaea']], [], false).length,
      'Senecio jacobaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Senecio nemorensis']], [], false)
        .length,
      'Senecio nemorensis'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Senecio nemorensis fuchsii']],
        [],
        false
      ).length,
      'Senecio nemorensis fuchsii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senecio nikoensis']], [], false).length,
      'Senecio nikoensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senecio pierottii']], [], false).length,
      'Senecio pierottii'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Senecio pseudo-arnica']], [], false)
        .length,
      'Senecio pseudo-arnica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Senecio scandens']], [], false).length,
      'Senecio scandens'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Senecio sylvaticus']], [], false)
        .length,
      'Senecio sylvaticus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senecio viscosus']], [], false).length,
      'Senecio viscosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senecio vulgaris']], [], false).length,
      'Senecio vulgaris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Senna marilandica']], [], false).length,
      'Senna marilandica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Senna tora']], [], false).length,
      'Senna tora'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Sequoia sempervirens']], [], false)
        .length,
      'Sequoia sempervirens'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Sequoiadendron giganteum']], [], false)
        .length,
      'Sequoiadendron giganteum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Serenoa repens']], [], false).length,
      'Serenoa repens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Serratula coronata']], [], false)
        .length,
      'Serratula coronata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Serratula tinctoria']], [], false)
        .length,
      'Serratula tinctoria'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Sesamum indicum']], [], false).length,
      'Sesamum indicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sesbania herbacea']], [], false).length,
      'Sesbania herbacea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Seseli gummiferum']], [], false).length,
      'Seseli gummiferum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Seseli libanotis']], [], false).length,
      'Seseli libanotis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sesuvium portulacastrum']], [], false)
        .length,
      'Sesuvium portulacastrum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Setaria italica']], [], false).length,
      'Setaria italica'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Setaria pumila']], [], false).length,
      'Setaria pumila'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Setaria viridis']], [], false).length,
      'Setaria viridis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Setaria viridis pycnocoma']], [], false)
        .length,
      'Setaria viridis pycnocoma'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Shepherdia argentea']], [], false)
        .length,
      'Shepherdia argentea'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Shepherdia canadensis']], [], false)
        .length,
      'Shepherdia canadensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sherardia arvensis']], [], false)
        .length,
      'Sherardia arvensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Shibataea kumasasa']], [], false)
        .length,
      'Shibataea kumasasa'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Sicyos angulatus']], [], false).length,
      'Sicyos angulatus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sidalcea acuta']], [], false).length,
      'Sidalcea acuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sidalcea malviflora']], [], false)
        .length,
      'Sidalcea malviflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sidalcea neomexicana']], [], false)
        .length,
      'Sidalcea neomexicana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Sideritis syriaca']], [], false).length,
      'Sideritis syriaca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sideritis theezans']], [], false)
        .length,
      'Sideritis theezans'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Siegesbeckia orientalis pubescens']],
        [],
        false
      ).length,
      'Siegesbeckia orientalis pubescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Silaum silaus']], [], false).length,
      'Silaum silaus'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Silene acaulis']], [], false).length,
      'Silene acaulis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Silene conoidea']], [], false).length,
      'Silene conoidea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Silene dioica']], [], false).length,
      'Silene dioica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Silene firma']], [], false).length,
      'Silene firma'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Silene gallica']], [], false).length,
      'Silene gallica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Silene latifolia']], [], false).length,
      'Silene latifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Silene nigrescens']], [], false).length,
      'Silene nigrescens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Silene vulgaris']], [], false).length,
      'Silene vulgaris'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Silphium laciniatum']], [], false)
        .length,
      'Silphium laciniatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Silphium laeve']], [], false).length,
      'Silphium laeve'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Silphium perfoliatum']], [], false)
        .length,
      'Silphium perfoliatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Silphium terebinthinaceum']], [], false)
        .length,
      'Silphium terebinthinaceum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Silybum marianum']], [], false).length,
      'Silybum marianum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sinapis alba']], [], false).length,
      'Sinapis alba'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sinapis arvensis']], [], false).length,
      'Sinapis arvensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sinofranchetia chinensis']], [], false)
        .length,
      'Sinofranchetia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sinomenium acutum']], [], false).length,
      'Sinomenium acutum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Siphonostegia chinensis']], [], false)
        .length,
      'Siphonostegia chinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sison amomum']], [], false).length,
      'Sison amomum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium altissimum']], [], false)
        .length,
      'Sisymbrium altissimum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium crassifolium']], [], false)
        .length,
      'Sisymbrium crassifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium irio']], [], false).length,
      'Sisymbrium irio'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium loeselii']], [], false)
        .length,
      'Sisymbrium loeselii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium matritense']], [], false)
        .length,
      'Sisymbrium matritense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sisymbrium officinale']], [], false)
        .length,
      'Sisymbrium officinale'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Sisyrinchium angustifolium']],
        [],
        false
      ).length,
      'Sisyrinchium angustifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sium helenianum']], [], false).length,
      'Sium helenianum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sium latifolium']], [], false).length,
      'Sium latifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sium serra']], [], false).length,
      'Sium serra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sium sisarum']], [], false).length,
      'Sium sisarum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Sium suave']], [], false).length,
      'Sium suave'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Skimmia japonica']], [], false).length,
      'Skimmia japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Skimmia laureola']], [], false).length,
      'Skimmia laureola'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Smilacena japonica']], [], false)
        .length,
      'Smilacena japonica'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Smilacena purpurea']], [], false)
        .length,
      'Smilacena purpurea'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Smilacena racemosa']], [], false)
        .length,
      'Smilacena racemosa'
    );
    assert.equal(
      7113,
      filterAndSort(crops, [nameToCrop['Smilacena stellata']], [], false)
        .length,
      'Smilacena stellata'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Smilax aspera']], [], false).length,
      'Smilax aspera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax auriculata']], [], false).length,
      'Smilax auriculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax beyrichii']], [], false).length,
      'Smilax beyrichii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax bona-nox']], [], false).length,
      'Smilax bona-nox'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax china']], [], false).length,
      'Smilax china'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax cordifolia']], [], false).length,
      'Smilax cordifolia'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Smilax discotis']], [], false).length,
      'Smilax discotis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax glabra']], [], false).length,
      'Smilax glabra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Smilax glauca']], [], false).length,
      'Smilax glauca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax glycophylla']], [], false)
        .length,
      'Smilax glycophylla'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Smilax herbacea']], [], false).length,
      'Smilax herbacea'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Smilax hispida']], [], false).length,
      'Smilax hispida'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax lanceifolia']], [], false)
        .length,
      'Smilax lanceifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax lanceolata']], [], false).length,
      'Smilax lanceolata'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Smilax laurifolia']], [], false).length,
      'Smilax laurifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax nipponica']], [], false).length,
      'Smilax nipponica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax pseudo-china']], [], false)
        .length,
      'Smilax pseudo-china'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax riparia']], [], false).length,
      'Smilax riparia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Smilax rotundifolia']], [], false)
        .length,
      'Smilax rotundifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax sieboldii']], [], false).length,
      'Smilax sieboldii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax tamnoides']], [], false).length,
      'Smilax tamnoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Smilax trinervula']], [], false).length,
      'Smilax trinervula'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Smyrnium olusatrum']], [], false)
        .length,
      'Smyrnium olusatrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Smyrnium perfoliatum']], [], false)
        .length,
      'Smyrnium perfoliatum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Solanum aethiopicum']], [], false)
        .length,
      'Solanum aethiopicum'
    );
    assert.equal(
      6648,
      filterAndSort(crops, [nameToCrop['Solanum ajanhuiri']], [], false).length,
      'Solanum ajanhuiri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum americanum']], [], false)
        .length,
      'Solanum americanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum andigenum']], [], false).length,
      'Solanum andigenum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum aviculare']], [], false).length,
      'Solanum aviculare'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum boreale']], [], false).length,
      'Solanum boreale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum boyacence']], [], false).length,
      'Solanum boyacence'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum cari']], [], false).length,
      'Solanum cari'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Solanum carolinense']], [], false)
        .length,
      'Solanum carolinense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum chaucha']], [], false).length,
      'Solanum chaucha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum curtilobum']], [], false)
        .length,
      'Solanum curtilobum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Solanum dulcamara']], [], false).length,
      'Solanum dulcamara'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum fendleri']], [], false).length,
      'Solanum fendleri'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum jamesii']], [], false).length,
      'Solanum jamesii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum juzepczukii']], [], false)
        .length,
      'Solanum juzepczukii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum kurzii']], [], false).length,
      'Solanum kurzii'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum laciniatum']], [], false)
        .length,
      'Solanum laciniatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum linearifolium']], [], false)
        .length,
      'Solanum linearifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum liximitante']], [], false)
        .length,
      'Solanum liximitante'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum luteum']], [], false).length,
      'Solanum luteum'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Solanum esculentum']], [], false)
        .length,
      'Solanum esculentum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum lyratum']], [], false).length,
      'Solanum lyratum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum maglia']], [], false).length,
      'Solanum maglia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum mamilliferum']], [], false)
        .length,
      'Solanum mamilliferum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum melongena']], [], false).length,
      'Solanum melongena'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum muricatum']], [], false).length,
      'Solanum muricatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum nigrum']], [], false).length,
      'Solanum nigrum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Solanum phureja']], [], false).length,
      'Solanum phureja'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum piliferum']], [], false).length,
      'Solanum piliferum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Solanum pimpinellifolium']], [], false)
        .length,
      'Solanum pimpinellifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum retroflexum']], [], false)
        .length,
      'Solanum retroflexum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum rybinii']], [], false).length,
      'Solanum rybinii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum scabrum']], [], false).length,
      'Solanum scabrum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum septemlobum']], [], false)
        .length,
      'Solanum septemlobum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum simile']], [], false).length,
      'Solanum simile'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Solanum sisymbriifolium']], [], false)
        .length,
      'Solanum sisymbriifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solanum stenotomum']], [], false)
        .length,
      'Solanum stenotomum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Solanum stenotomum goniocalyx']],
        [],
        false
      ).length,
      'Solanum stenotomum goniocalyx'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum triflorum']], [], false).length,
      'Solanum triflorum'
    );
    assert.equal(
      7187,
      filterAndSort(crops, [nameToCrop['Solanum tuberosum']], [], false).length,
      'Solanum tuberosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solanum vescum']], [], false).length,
      'Solanum vescum'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Soldanella alpina']], [], false).length,
      'Soldanella alpina'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Solidago canadensis']], [], false)
        .length,
      'Solidago canadensis'
    );
    assert.equal(
      7123,
      filterAndSort(
        crops,
        [nameToCrop['Solidago canadensis scabra']],
        [],
        false
      ).length,
      'Solidago canadensis scabra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago fistulosa']], [], false)
        .length,
      'Solidago fistulosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago gigantea']], [], false).length,
      'Solidago gigantea'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Solidago graminifolia']], [], false)
        .length,
      'Solidago graminifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago japonica']], [], false).length,
      'Solidago japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago leavenworthii']], [], false)
        .length,
      'Solidago leavenworthii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago missouriensis']], [], false)
        .length,
      'Solidago missouriensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Solidago nemoralis']], [], false)
        .length,
      'Solidago nemoralis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Solidago odora']], [], false).length,
      'Solidago odora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago radiata']], [], false).length,
      'Solidago radiata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Solidago rigida']], [], false).length,
      'Solidago rigida'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Solidago spathulata']], [], false)
        .length,
      'Solidago spathulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago spectabilis']], [], false)
        .length,
      'Solidago spectabilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Solidago suaveolens']], [], false)
        .length,
      'Solidago suaveolens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Solidago virgaurea']], [], false)
        .length,
      'Solidago virgaurea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus arvensis']], [], false).length,
      'Sonchus arvensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus asper']], [], false).length,
      'Sonchus asper'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus brachyotus']], [], false)
        .length,
      'Sonchus brachyotus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus kirkii']], [], false).length,
      'Sonchus kirkii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus oleraceus']], [], false).length,
      'Sonchus oleraceus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sonchus tenerrimus']], [], false)
        .length,
      'Sonchus tenerrimus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sophora davidii']], [], false).length,
      'Sophora davidii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sophora flavescens']], [], false)
        .length,
      'Sophora flavescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sophora japonica']], [], false).length,
      'Sophora japonica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sophora mollis']], [], false).length,
      'Sophora mollis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sophora moorcroftiana']], [], false)
        .length,
      'Sophora moorcroftiana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sophora secundiflora']], [], false)
        .length,
      'Sophora secundiflora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sophora sericea']], [], false).length,
      'Sophora sericea'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Sophora tetraptera']], [], false)
        .length,
      'Sophora tetraptera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sophora tonkinensis']], [], false)
        .length,
      'Sophora tonkinensis'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Sorbaria sorbifolia']], [], false)
        .length,
      'Sorbaria sorbifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbopyrus auricularis']], [], false)
        .length,
      'Sorbopyrus auricularis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbopyrus  species']], [], false)
        .length,
      'Sorbopyrus  species'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus alnifolia']], [], false).length,
      'Sorbus alnifolia'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Sorbus americana']], [], false).length,
      'Sorbus americana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus aria']], [], false).length,
      'Sorbus aria'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Sorbus aucuparia']], [], false).length,
      'Sorbus aucuparia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus austriaca']], [], false).length,
      'Sorbus austriaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus commixta']], [], false).length,
      'Sorbus commixta'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Sorbus decora']], [], false).length,
      'Sorbus decora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus devoniensis']], [], false)
        .length,
      'Sorbus devoniensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus domestica']], [], false).length,
      'Sorbus domestica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus gracilis']], [], false).length,
      'Sorbus gracilis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus hybrida']], [], false).length,
      'Sorbus hybrida'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus intermedia']], [], false).length,
      'Sorbus intermedia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus japonica']], [], false).length,
      'Sorbus japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus lanata']], [], false).length,
      'Sorbus lanata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus latifolia']], [], false).length,
      'Sorbus latifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus mougeotii']], [], false).length,
      'Sorbus mougeotii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus pohuashanensis']], [], false)
        .length,
      'Sorbus pohuashanensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus sambucifolia']], [], false)
        .length,
      'Sorbus sambucifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus scopulina']], [], false).length,
      'Sorbus scopulina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sorbus sitchensis']], [], false).length,
      'Sorbus sitchensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus  species']], [], false).length,
      'Sorbus  species'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus thibetica']], [], false).length,
      'Sorbus thibetica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus torminalis']], [], false).length,
      'Sorbus torminalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sorbus vestita']], [], false).length,
      'Sorbus vestita'
    );
    assert.equal(
      7206,
      filterAndSort(crops, [nameToCrop['Sorghum bicolor']], [], false).length,
      'Sorghum bicolor'
    );
    assert.equal(
      7206,
      filterAndSort(crops, [nameToCrop['Sorghum halepense']], [], false).length,
      'Sorghum halepense'
    );
    assert.equal(
      6892,
      filterAndSort(crops, [nameToCrop['Sparaxis bulbifera']], [], false)
        .length,
      'Sparaxis bulbifera'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sparganium americanum']], [], false)
        .length,
      'Sparganium americanum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sparganium androcladum']], [], false)
        .length,
      'Sparganium androcladum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sparganium erectum']], [], false)
        .length,
      'Sparganium erectum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sparganium longifolium']], [], false)
        .length,
      'Sparganium longifolium'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Sparganium stoloniferum']], [], false)
        .length,
      'Sparganium stoloniferum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spartina anglica']], [], false).length,
      'Spartina anglica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spartina pectinata']], [], false)
        .length,
      'Spartina pectinata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spartina x townsendii']], [], false)
        .length,
      'Spartina x townsendii'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Spartium junceum']], [], false).length,
      'Spartium junceum'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Spergula arvensis']], [], false).length,
      'Spergula arvensis'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Spergularia rubra']], [], false).length,
      'Spergularia rubra'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Sphagnum cymbilifolium']], [], false)
        .length,
      'Sphagnum cymbilifolium'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Spigelia marilandica']], [], false)
        .length,
      'Spigelia marilandica'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spinacia oleracea']], [], false).length,
      'Spinacia oleracea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spiraea alba']], [], false).length,
      'Spiraea alba'
    );
    assert.equal(
      7222,
      filterAndSort(
        crops,
        [nameToCrop['Spiraea betulifolia aemiliana']],
        [],
        false
      ).length,
      'Spiraea betulifolia aemiliana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spiraea blumei']], [], false).length,
      'Spiraea blumei'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea canescens']], [], false).length,
      'Spiraea canescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea douglasii']], [], false).length,
      'Spiraea douglasii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spiraea henryi']], [], false).length,
      'Spiraea henryi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spiraea hirsuta']], [], false).length,
      'Spiraea hirsuta'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea japonica']], [], false).length,
      'Spiraea japonica'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Spiraea nervosa angustifolia']],
        [],
        false
      ).length,
      'Spiraea nervosa angustifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea prunifolia']], [], false)
        .length,
      'Spiraea prunifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Spiraea pyramidata']], [], false)
        .length,
      'Spiraea pyramidata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea salicifolia']], [], false)
        .length,
      'Spiraea salicifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea thunbergii']], [], false)
        .length,
      'Spiraea thunbergii'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Spiraea tomentosa']], [], false).length,
      'Spiraea tomentosa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Spiraea x arguta']], [], false).length,
      'Spiraea x arguta'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Spiranthes spiralis']], [], false)
        .length,
      'Spiranthes spiralis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Spirodela polyrrhiza']], [], false)
        .length,
      'Spirodela polyrrhiza'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sporobolus airoides']], [], false)
        .length,
      'Sporobolus airoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sporobolus asperifolius']], [], false)
        .length,
      'Sporobolus asperifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sporobolus caroli']], [], false).length,
      'Sporobolus caroli'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Sporobolus contractus']], [], false)
        .length,
      'Sporobolus contractus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Sporobolus cryptandrus']], [], false)
        .length,
      'Sporobolus cryptandrus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sporobolus flexuosus']], [], false)
        .length,
      'Sporobolus flexuosus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sporobolus giganteus']], [], false)
        .length,
      'Sporobolus giganteus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sporobolus indicus']], [], false)
        .length,
      'Sporobolus indicus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Sporobolus pallidus']], [], false)
        .length,
      'Sporobolus pallidus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys affinis']], [], false).length,
      'Stachys affinis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stachys baicalensis']], [], false)
        .length,
      'Stachys baicalensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys bullata']], [], false).length,
      'Stachys bullata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys germanica']], [], false).length,
      'Stachys germanica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys hyssopifolia']], [], false)
        .length,
      'Stachys hyssopifolia'
    );
    assert.equal(
      7219,
      filterAndSort(
        crops,
        [nameToCrop['Stachys hyssopifolia ambigua']],
        [],
        false
      ).length,
      'Stachys hyssopifolia ambigua'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys officinalis']], [], false)
        .length,
      'Stachys officinalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys palustris']], [], false).length,
      'Stachys palustris'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stachys sylvatica']], [], false).length,
      'Stachys sylvatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stanleya albescens']], [], false)
        .length,
      'Stanleya albescens'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Stanleya elata']], [], false).length,
      'Stanleya elata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stanleya pinnata']], [], false).length,
      'Stanleya pinnata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stanleya wrightii']], [], false).length,
      'Stanleya wrightii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Staphylea bumalda']], [], false).length,
      'Staphylea bumalda'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Staphylea colchica']], [], false)
        .length,
      'Staphylea colchica'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Staphylea emodi']], [], false).length,
      'Staphylea emodi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Staphylea pinnata']], [], false).length,
      'Staphylea pinnata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Staphylea trifolia']], [], false)
        .length,
      'Staphylea trifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Stauntonia hexaphylla']], [], false)
        .length,
      'Stauntonia hexaphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria alsine']], [], false).length,
      'Stellaria alsine'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria dichotoma']], [], false)
        .length,
      'Stellaria dichotoma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria diversifolia']], [], false)
        .length,
      'Stellaria diversifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria jamesiana']], [], false)
        .length,
      'Stellaria jamesiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria media']], [], false).length,
      'Stellaria media'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria neglecta']], [], false)
        .length,
      'Stellaria neglecta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stellaria nipponica']], [], false)
        .length,
      'Stellaria nipponica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria radians']], [], false).length,
      'Stellaria radians'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stellaria sessiliflora']], [], false)
        .length,
      'Stellaria sessiliflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stellera chamaejasme']], [], false)
        .length,
      'Stellera chamaejasme'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Stephanandra incisa']], [], false)
        .length,
      'Stephanandra incisa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stephanandra tanakae']], [], false)
        .length,
      'Stephanandra tanakae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stephanomeria spinosa']], [], false)
        .length,
      'Stephanomeria spinosa'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Stevia rebaudiana']], [], false).length,
      'Stevia rebaudiana'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Stewartia pseudocamellia']], [], false)
        .length,
      'Stewartia pseudocamellia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stilbocarpa polaris']], [], false)
        .length,
      'Stilbocarpa polaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stillingia sylvatica']], [], false)
        .length,
      'Stillingia sylvatica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Stipa splendens']], [], false).length,
      'Stipa splendens'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Stipa tenacissima']], [], false).length,
      'Stipa tenacissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stipa vaseyi']], [], false).length,
      'Stipa vaseyi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stipa viridula']], [], false).length,
      'Stipa viridula'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Stratiotes aloides']], [], false)
        .length,
      'Stratiotes aloides'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Streptopus amplexifolius']], [], false)
        .length,
      'Streptopus amplexifolius'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Streptopus roseus']], [], false).length,
      'Streptopus roseus'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Streptopus streptopoides']], [], false)
        .length,
      'Streptopus streptopoides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Strobilanthes cusia']], [], false)
        .length,
      'Strobilanthes cusia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Stylophorum lasiocarpum']], [], false)
        .length,
      'Stylophorum lasiocarpum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Styphelia adscendens']], [], false)
        .length,
      'Styphelia adscendens'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Styphelia triflora']], [], false)
        .length,
      'Styphelia triflora'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Styphelia viridis']], [], false).length,
      'Styphelia viridis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Styrax japonica']], [], false).length,
      'Styrax japonica'
    );
    assert.equal(
      7028,
      filterAndSort(crops, [nameToCrop['Styrax officinalis']], [], false)
        .length,
      'Styrax officinalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Styrax serrulatus']], [], false).length,
      'Styrax serrulatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda australis']], [], false).length,
      'Suaeda australis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda californica']], [], false)
        .length,
      'Suaeda californica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda corniculata']], [], false)
        .length,
      'Suaeda corniculata'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Suaeda depressa']], [], false).length,
      'Suaeda depressa'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Suaeda fruticosa']], [], false).length,
      'Suaeda fruticosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda glauca']], [], false).length,
      'Suaeda glauca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda heterotropa']], [], false)
        .length,
      'Suaeda heterotropa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda japonica']], [], false).length,
      'Suaeda japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda linearis']], [], false).length,
      'Suaeda linearis'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Suaeda maritima']], [], false).length,
      'Suaeda maritima'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Suaeda occidentalis']], [], false)
        .length,
      'Suaeda occidentalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda palmeri']], [], false).length,
      'Suaeda palmeri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda ramosissima']], [], false)
        .length,
      'Suaeda ramosissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda salsa']], [], false).length,
      'Suaeda salsa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Suaeda suffrutescens']], [], false)
        .length,
      'Suaeda suffrutescens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Succisa pratensis']], [], false).length,
      'Succisa pratensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Swertia bimaculata']], [], false)
        .length,
      'Swertia bimaculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Swertia chirayita']], [], false).length,
      'Swertia chirayita'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Swertia japonica']], [], false).length,
      'Swertia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Swertia petiolata']], [], false).length,
      'Swertia petiolata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Sympholoma graveolens']], [], false)
        .length,
      'Sympholoma graveolens'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Symphoricarpos albus laevigatus']],
        [],
        false
      ).length,
      'Symphoricarpos albus laevigatus'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Symphoricarpos occidentalis']],
        [],
        false
      ).length,
      'Symphoricarpos occidentalis'
    );
    assert.equal(
      6646,
      filterAndSort(
        crops,
        [nameToCrop['Symphoricarpos orbiculatus']],
        [],
        false
      ).length,
      'Symphoricarpos orbiculatus'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Symphytum asperum']], [], false).length,
      'Symphytum asperum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Symphytum grandiflorum']], [], false)
        .length,
      'Symphytum grandiflorum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Symphytum officinale']], [], false)
        .length,
      'Symphytum officinale'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Symphytum tuberosum']], [], false)
        .length,
      'Symphytum tuberosum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Symphytum uplandicum']], [], false)
        .length,
      'Symphytum uplandicum'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Symplocarpus foetidus']], [], false)
        .length,
      'Symplocarpus foetidus'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Symplocarpus renifolius']], [], false)
        .length,
      'Symplocarpus renifolius'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Symplocos microcalyx']], [], false)
        .length,
      'Symplocos microcalyx'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Symplocos paniculata']], [], false)
        .length,
      'Symplocos paniculata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Symplocos sumuntiia']], [], false)
        .length,
      'Symplocos sumuntiia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Symplocos tinctoria']], [], false)
        .length,
      'Symplocos tinctoria'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Syncarpia glomulifera']], [], false)
        .length,
      'Syncarpia glomulifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Synurus deltoides']], [], false).length,
      'Synurus deltoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Synurus excelsus']], [], false).length,
      'Synurus excelsus'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Synurus palmatopinnatifidus']],
        [],
        false
      ).length,
      'Synurus palmatopinnatifidus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Synurus pungens']], [], false).length,
      'Synurus pungens'
    );
    assert.equal(
      7054,
      filterAndSort(crops, [nameToCrop['Syringa josikaea']], [], false).length,
      'Syringa josikaea'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Syringa vulgaris']], [], false).length,
      'Syringa vulgaris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Syzygium australe']], [], false).length,
      'Syzygium australe'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Syzygium paniculatum']], [], false)
        .length,
      'Syzygium paniculatum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes erecta']], [], false).length,
      'Tagetes erecta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes filifolia']], [], false).length,
      'Tagetes filifolia'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes lucida']], [], false).length,
      'Tagetes lucida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tagetes micrantha']], [], false).length,
      'Tagetes micrantha'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes minuta']], [], false).length,
      'Tagetes minuta'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes patula']], [], false).length,
      'Tagetes patula'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tagetes tenuifolia']], [], false)
        .length,
      'Tagetes tenuifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Talinum aurantiacum']], [], false)
        .length,
      'Talinum aurantiacum'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Tamarix africana']], [], false).length,
      'Tamarix africana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tamarix anglica']], [], false).length,
      'Tamarix anglica'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Tamarix aphylla']], [], false).length,
      'Tamarix aphylla'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Tamarix canariensis']], [], false)
        .length,
      'Tamarix canariensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tamarix chinensis']], [], false).length,
      'Tamarix chinensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tamarix gallica']], [], false).length,
      'Tamarix gallica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tamarix hispida']], [], false).length,
      'Tamarix hispida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tamarix juniperina']], [], false)
        .length,
      'Tamarix juniperina'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tamarix parviflora']], [], false)
        .length,
      'Tamarix parviflora'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Tamarix ramosissima']], [], false)
        .length,
      'Tamarix ramosissima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tamus communis']], [], false).length,
      'Tamus communis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tanacetum balsamita']], [], false)
        .length,
      'Tanacetum balsamita'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tanacetum cinerariifolium']], [], false)
        .length,
      'Tanacetum cinerariifolium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Tanacetum coccineum']], [], false)
        .length,
      'Tanacetum coccineum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tanacetum parthenium']], [], false)
        .length,
      'Tanacetum parthenium'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tanacetum vulgare']], [], false).length,
      'Tanacetum vulgare'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taraxacum albidum']], [], false).length,
      'Taraxacum albidum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum bessarabicum']], [], false)
        .length,
      'Taraxacum bessarabicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum brassicaefolium']], [], false)
        .length,
      'Taraxacum brassicaefolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum erythropodium']], [], false)
        .length,
      'Taraxacum erythropodium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum formosanum']], [], false)
        .length,
      'Taraxacum formosanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum heterolepis']], [], false)
        .length,
      'Taraxacum heterolepis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum hondoense']], [], false)
        .length,
      'Taraxacum hondoense'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum hybernum']], [], false)
        .length,
      'Taraxacum hybernum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum japonicum']], [], false)
        .length,
      'Taraxacum japonicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum kok-saghyz']], [], false)
        .length,
      'Taraxacum kok-saghyz'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum laevigatum']], [], false)
        .length,
      'Taraxacum laevigatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum magellanicum']], [], false)
        .length,
      'Taraxacum magellanicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taraxacum megalorrhizon']], [], false)
        .length,
      'Taraxacum megalorrhizon'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum mongolicum']], [], false)
        .length,
      'Taraxacum mongolicum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taraxacum obovatum']], [], false)
        .length,
      'Taraxacum obovatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taraxacum officinale']], [], false)
        .length,
      'Taraxacum officinale'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum platycarpum']], [], false)
        .length,
      'Taraxacum platycarpum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum pseudo-album']], [], false)
        .length,
      'Taraxacum pseudo-album'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum sinicum']], [], false).length,
      'Taraxacum sinicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum tibeticum']], [], false)
        .length,
      'Taraxacum tibeticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taraxacum variegatum']], [], false)
        .length,
      'Taraxacum variegatum'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Taxodium distichum']], [], false)
        .length,
      'Taxodium distichum'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Taxus baccata']], [], false).length,
      'Taxus baccata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taxus brevifolia']], [], false).length,
      'Taxus brevifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taxus canadensis']], [], false).length,
      'Taxus canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Taxus cuspidata']], [], false).length,
      'Taxus cuspidata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Taxus x media']], [], false).length,
      'Taxus x media'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tellima grandiflora']], [], false)
        .length,
      'Tellima grandiflora'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Telopea speciosissima']], [], false)
        .length,
      'Telopea speciosissima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tephroseris integrifolia']], [], false)
        .length,
      'Tephroseris integrifolia'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Tephroseris palustris']], [], false)
        .length,
      'Tephroseris palustris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tephrosia virginiana']], [], false)
        .length,
      'Tephrosia virginiana'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Ternstroemia japonica']], [], false)
        .length,
      'Ternstroemia japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tetragonia implexicoma']], [], false)
        .length,
      'Tetragonia implexicoma'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Tetragonia tetragonoides']], [], false)
        .length,
      'Tetragonia tetragonoides'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Tetrapanax papyrifer']], [], false)
        .length,
      'Tetrapanax papyrifer'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tetrastigma hemsleyanum']], [], false)
        .length,
      'Tetrastigma hemsleyanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Teucrium canadense']], [], false)
        .length,
      'Teucrium canadense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Teucrium chamaedrys']], [], false)
        .length,
      'Teucrium chamaedrys'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Teucrium marum']], [], false).length,
      'Teucrium marum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Teucrium massiliense']], [], false)
        .length,
      'Teucrium massiliense'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Teucrium polium']], [], false).length,
      'Teucrium polium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Teucrium scordium']], [], false).length,
      'Teucrium scordium'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Teucrium scorodonia']], [], false)
        .length,
      'Teucrium scorodonia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thalictrum actaeifolium']], [], false)
        .length,
      'Thalictrum actaeifolium'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Thalictrum aquilegiifolium']],
        [],
        false
      ).length,
      'Thalictrum aquilegiifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thalictrum collinum']], [], false)
        .length,
      'Thalictrum collinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thalictrum foliolosum']], [], false)
        .length,
      'Thalictrum foliolosum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thalictrum minus']], [], false).length,
      'Thalictrum minus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thalictrum polycarpum']], [], false)
        .length,
      'Thalictrum polycarpum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Thalictrum simplex galioides']],
        [],
        false
      ).length,
      'Thalictrum simplex galioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thalictrum thalictroides']], [], false)
        .length,
      'Thalictrum thalictroides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thamnocalamus aristatus']], [], false)
        .length,
      'Thamnocalamus aristatus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thamnocalamus spathaceus']], [], false)
        .length,
      'Thamnocalamus spathaceus'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Thamnocalamus spathiflorus']],
        [],
        false
      ).length,
      'Thamnocalamus spathiflorus'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Thamnocalamus tessalatus']], [], false)
        .length,
      'Thamnocalamus tessalatus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Thapsia garganica']], [], false).length,
      'Thapsia garganica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thelesperma gracile']], [], false)
        .length,
      'Thelesperma gracile'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Thelesperma megapotanicum']], [], false)
        .length,
      'Thelesperma megapotanicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thelesperma trifidum']], [], false)
        .length,
      'Thelesperma trifidum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Theligonum cynocrambe']], [], false)
        .length,
      'Theligonum cynocrambe'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thelymitra longifolia']], [], false)
        .length,
      'Thelymitra longifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thelymitra pulchella']], [], false)
        .length,
      'Thelymitra pulchella'
    );
    assert.equal(
      7215,
      filterAndSort(crops, [nameToCrop['Thelypteris palustris']], [], false)
        .length,
      'Thelypteris palustris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Thermopsis lupinoides']], [], false)
        .length,
      'Thermopsis lupinoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thladiantha dubia']], [], false).length,
      'Thladiantha dubia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thlaspi arvense']], [], false).length,
      'Thlaspi arvense'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thlaspi perfoliatum']], [], false)
        .length,
      'Thlaspi perfoliatum'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Thuja occidentalis']], [], false)
        .length,
      'Thuja occidentalis'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Thuja orientalis']], [], false).length,
      'Thuja orientalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thuja plicata']], [], false).length,
      'Thuja plicata'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Thujopsis dolobrata']], [], false)
        .length,
      'Thujopsis dolobrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Thymbra spicata']], [], false).length,
      'Thymbra spicata'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus caespititius']], [], false)
        .length,
      'Thymus caespititius'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Thymus camphoratus']], [], false)
        .length,
      'Thymus camphoratus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus capitatus']], [], false).length,
      'Thymus capitatus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus cilicicus']], [], false).length,
      'Thymus cilicicus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Thymus herba-barona']], [], false)
        .length,
      'Thymus herba-barona'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Thymus hirtus']], [], false).length,
      'Thymus hirtus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Thymus mastichina']], [], false).length,
      'Thymus mastichina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thymus pannonicus']], [], false).length,
      'Thymus pannonicus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thymus praecox']], [], false).length,
      'Thymus praecox'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus praecox arcticus']], [], false)
        .length,
      'Thymus praecox arcticus'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus pseudolanuginosus']], [], false)
        .length,
      'Thymus pseudolanuginosus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thymus pulegioides']], [], false)
        .length,
      'Thymus pulegioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thymus quinquecostatus']], [], false)
        .length,
      'Thymus quinquecostatus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Thymus serpyllum']], [], false).length,
      'Thymus serpyllum'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus vulgaris']], [], false).length,
      'Thymus vulgaris'
    );
    assert.equal(
      7055,
      filterAndSort(crops, [nameToCrop['Thymus x citriodorus']], [], false)
        .length,
      'Thymus x citriodorus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Thymus zygis']], [], false).length,
      'Thymus zygis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thysanotus baueri']], [], false).length,
      'Thysanotus baueri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Thysanotus exiflorus']], [], false)
        .length,
      'Thysanotus exiflorus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Thysanotus patersonii']], [], false)
        .length,
      'Thysanotus patersonii'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Thysanotus tuberosus']], [], false)
        .length,
      'Thysanotus tuberosus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tiarella cordifolia']], [], false)
        .length,
      'Tiarella cordifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Tigridia pavonia']], [], false).length,
      'Tigridia pavonia'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tilia americana']], [], false).length,
      'Tilia americana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tilia amurensis']], [], false).length,
      'Tilia amurensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilia caroliniana']], [], false).length,
      'Tilia caroliniana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tilia chinensis']], [], false).length,
      'Tilia chinensis'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tilia cordata']], [], false).length,
      'Tilia cordata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tilia heterophylla']], [], false)
        .length,
      'Tilia heterophylla'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilia japonica']], [], false).length,
      'Tilia japonica'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tilia mongolica']], [], false).length,
      'Tilia mongolica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilia oliveri']], [], false).length,
      'Tilia oliveri'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tilia platyphyllos']], [], false)
        .length,
      'Tilia platyphyllos'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilia tomentosa']], [], false).length,
      'Tilia tomentosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilia tuan']], [], false).length,
      'Tilia tuan'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tilia x europaea']], [], false).length,
      'Tilia x europaea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilingia ajanensis']], [], false)
        .length,
      'Tilingia ajanensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tilingia holopetala']], [], false)
        .length,
      'Tilingia holopetala'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tinopsora sagittata']], [], false)
        .length,
      'Tinopsora sagittata'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Tithonia diversifolia']], [], false)
        .length,
      'Tithonia diversifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tolmiea menziesii']], [], false).length,
      'Tolmiea menziesii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Toona sinensis']], [], false).length,
      'Toona sinensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tordylium apulum']], [], false).length,
      'Tordylium apulum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Torilis japonica']], [], false).length,
      'Torilis japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Torreya californica']], [], false)
        .length,
      'Torreya californica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Torreya fargesii']], [], false).length,
      'Torreya fargesii'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Torreya grandis']], [], false).length,
      'Torreya grandis'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Torreya jackii']], [], false).length,
      'Torreya jackii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Torreya nucifera']], [], false).length,
      'Torreya nucifera'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Torreya yunnanensis']], [], false)
        .length,
      'Torreya yunnanensis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Trachelospermum asiaticum']], [], false)
        .length,
      'Trachelospermum asiaticum'
    );
    assert.equal(
      7037,
      filterAndSort(
        crops,
        [nameToCrop['Trachelospermum jasminoides']],
        [],
        false
      ).length,
      'Trachelospermum jasminoides'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Trachycarpus fortunei']], [], false)
        .length,
      'Trachycarpus fortunei'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Trachycarpus martianus']], [], false)
        .length,
      'Trachycarpus martianus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trachymene glaucifolia']], [], false)
        .length,
      'Trachymene glaucifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trachymene incisa']], [], false).length,
      'Trachymene incisa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trachyspermum ammi']], [], false)
        .length,
      'Trachyspermum ammi'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trachystemon orientalis']], [], false)
        .length,
      'Trachystemon orientalis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tradescantia virginiana']], [], false)
        .length,
      'Tradescantia virginiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tragopogon coloratus']], [], false)
        .length,
      'Tragopogon coloratus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tragopogon crocifolius']], [], false)
        .length,
      'Tragopogon crocifolius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tragopogon cupani']], [], false).length,
      'Tragopogon cupani'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tragopogon dubius']], [], false).length,
      'Tragopogon dubius'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tragopogon gracilis']], [], false)
        .length,
      'Tragopogon gracilis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tragopogon hispanica']], [], false)
        .length,
      'Tragopogon hispanica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tragopogon porrifolius']], [], false)
        .length,
      'Tragopogon porrifolius'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Tragopogon pratensis']], [], false)
        .length,
      'Tragopogon pratensis'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Trapa bicornis']], [], false).length,
      'Trapa bicornis'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Trapa incisa']], [], false).length,
      'Trapa incisa'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Trapa japonica']], [], false).length,
      'Trapa japonica'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Trapa natans']], [], false).length,
      'Trapa natans'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tribulus terrestris']], [], false)
        .length,
      'Tribulus terrestris'
    );
    assert.equal(
      6644,
      filterAndSort(
        crops,
        [nameToCrop['Trichosanthes cucumerina anguina']],
        [],
        false
      ).length,
      'Trichosanthes cucumerina anguina'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Trichosanthes kirilowii']], [], false)
        .length,
      'Trichosanthes kirilowii'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Trichosanthes kirilowii japonica']],
        [],
        false
      ).length,
      'Trichosanthes kirilowii japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trichosanthes multiloba']], [], false)
        .length,
      'Trichosanthes multiloba'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Trichosanthes ovigera']], [], false)
        .length,
      'Trichosanthes ovigera'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Tricyrtis hirta']], [], false).length,
      'Tricyrtis hirta'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Tricyrtis latifolia']], [], false)
        .length,
      'Tricyrtis latifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tricyrtis macropoda']], [], false)
        .length,
      'Tricyrtis macropoda'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Trientalis europaea']], [], false)
        .length,
      'Trientalis europaea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium bifidum']], [], false).length,
      'Trifolium bifidum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium ciliatum']], [], false)
        .length,
      'Trifolium ciliatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium cyathiferum']], [], false)
        .length,
      'Trifolium cyathiferum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium dichotomum']], [], false)
        .length,
      'Trifolium dichotomum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium dubium']], [], false).length,
      'Trifolium dubium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium fimbriatum']], [], false)
        .length,
      'Trifolium fimbriatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium fucatum']], [], false).length,
      'Trifolium fucatum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Trifolium fucatum virescens']],
        [],
        false
      ).length,
      'Trifolium fucatum virescens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium gracilentum']], [], false)
        .length,
      'Trifolium gracilentum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium hybridum']], [], false)
        .length,
      'Trifolium hybridum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium incarnatum']], [], false)
        .length,
      'Trifolium incarnatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium lupinaster']], [], false)
        .length,
      'Trifolium lupinaster'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trifolium macrocephalum']], [], false)
        .length,
      'Trifolium macrocephalum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium microcephalum']], [], false)
        .length,
      'Trifolium microcephalum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium obtusifolium']], [], false)
        .length,
      'Trifolium obtusifolium'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Trifolium ornithopodioides']],
        [],
        false
      ).length,
      'Trifolium ornithopodioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium pratense']], [], false)
        .length,
      'Trifolium pratense'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trifolium repens']], [], false).length,
      'Trifolium repens'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium subterraneum']], [], false)
        .length,
      'Trifolium subterraneum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium tridentatum']], [], false)
        .length,
      'Trifolium tridentatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trifolium variegatum']], [], false)
        .length,
      'Trifolium variegatum'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Triglochin maritima']], [], false)
        .length,
      'Triglochin maritima'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Triglochin palustris']], [], false)
        .length,
      'Triglochin palustris'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Triglochin procera']], [], false)
        .length,
      'Triglochin procera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonella caerulea']], [], false)
        .length,
      'Trigonella caerulea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonella corniculata']], [], false)
        .length,
      'Trigonella corniculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonella foenum-graecum']], [], false)
        .length,
      'Trigonella foenum-graecum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonella suavissima']], [], false)
        .length,
      'Trigonella suavissima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonotis icumae']], [], false).length,
      'Trigonotis icumae'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonotis peduncularis']], [], false)
        .length,
      'Trigonotis peduncularis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trigonotis radicans']], [], false)
        .length,
      'Trigonotis radicans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trilisa odoratissima']], [], false)
        .length,
      'Trilisa odoratissima'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium erectum']], [], false).length,
      'Trillium erectum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium grandiflorum']], [], false)
        .length,
      'Trillium grandiflorum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium kamtschaticum']], [], false)
        .length,
      'Trillium kamtschaticum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium ovatum']], [], false).length,
      'Trillium ovatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trillium pendulum']], [], false).length,
      'Trillium pendulum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium sessile']], [], false).length,
      'Trillium sessile'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium smallii']], [], false).length,
      'Trillium smallii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium tschonoskii']], [], false)
        .length,
      'Trillium tschonoskii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Trillium undulatum']], [], false)
        .length,
      'Trillium undulatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Triodia irritans']], [], false).length,
      'Triodia irritans'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Triosteum perfoliatum']], [], false)
        .length,
      'Triosteum perfoliatum'
    );
    assert.equal(
      6644,
      filterAndSort(crops, [nameToCrop['Triphasia trifolia']], [], false)
        .length,
      'Triphasia trifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tripsacum dactyloides']], [], false)
        .length,
      'Tripsacum dactyloides'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Tripterygium wilfordii']], [], false)
        .length,
      'Tripterygium wilfordii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Trisetum spicatum']], [], false).length,
      'Trisetum spicatum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Triteleia grandiflora']], [], false)
        .length,
      'Triteleia grandiflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Triteleia hyacintha']], [], false)
        .length,
      'Triteleia hyacintha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triteleia ixioides']], [], false)
        .length,
      'Triteleia ixioides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triteleia laxa']], [], false).length,
      'Triteleia laxa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triteleia peduncularis']], [], false)
        .length,
      'Triteleia peduncularis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Triticosecale spp']], [], false).length,
      'Triticosecale spp'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum aestivum']], [], false).length,
      'Triticum aestivum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum aestivum compactum']],
        [],
        false
      ).length,
      'Triticum aestivum compactum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum aestivum macha']], [], false)
        .length,
      'Triticum aestivum macha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum aestivum spelta']], [], false)
        .length,
      'Triticum aestivum spelta'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum aestivum sphaerococcum']],
        [],
        false
      ).length,
      'Triticum aestivum sphaerococcum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum bicorne']], [], false).length,
      'Triticum bicorne'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum georgicum']], [], false)
        .length,
      'Triticum georgicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum monococcum']], [], false)
        .length,
      'Triticum monococcum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum monococcum aegilopoides']],
        [],
        false
      ).length,
      'Triticum monococcum aegilopoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum sovieticum']], [], false)
        .length,
      'Triticum sovieticum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum timopheevii']], [], false)
        .length,
      'Triticum timopheevii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum turgidum']], [], false).length,
      'Triticum turgidum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum turgidum carthlicum']],
        [],
        false
      ).length,
      'Triticum turgidum carthlicum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum turgidum dicoccoides']],
        [],
        false
      ).length,
      'Triticum turgidum dicoccoides'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum turgidum dicoccon']],
        [],
        false
      ).length,
      'Triticum turgidum dicoccon'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Triticum turgidum durum']], [], false)
        .length,
      'Triticum turgidum durum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum turgidum polonicum']],
        [],
        false
      ).length,
      'Triticum turgidum polonicum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Triticum turgidum turanicum']],
        [],
        false
      ).length,
      'Triticum turgidum turanicum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Triticum vavilovi']], [], false).length,
      'Triticum vavilovi'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Tritonia crocata']], [], false).length,
      'Tritonia crocata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trochocarpa clarkei']], [], false)
        .length,
      'Trochocarpa clarkei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Trochocarpa cunninghamii']], [], false)
        .length,
      'Trochocarpa cunninghamii'
    );
    assert.equal(
      7138,
      filterAndSort(crops, [nameToCrop['Trollius europaeus']], [], false)
        .length,
      'Trollius europaeus'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Tropaeolum brachyceras']], [], false)
        .length,
      'Tropaeolum brachyceras'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Tropaeolum leptophyllum']], [], false)
        .length,
      'Tropaeolum leptophyllum'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tropaeolum majus']], [], false).length,
      'Tropaeolum majus'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Tropaeolum minus']], [], false).length,
      'Tropaeolum minus'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Tropaeolum patagonicum']], [], false)
        .length,
      'Tropaeolum patagonicum'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Tropaeolum sessilifolium']], [], false)
        .length,
      'Tropaeolum sessilifolium'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Tropaeolum tricolorum']], [], false)
        .length,
      'Tropaeolum tricolorum'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Tropaeolum tuberosum']], [], false)
        .length,
      'Tropaeolum tuberosum'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tsuga canadensis']], [], false).length,
      'Tsuga canadensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tsuga caroliniana']], [], false).length,
      'Tsuga caroliniana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tsuga chinensis']], [], false).length,
      'Tsuga chinensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tsuga heterophylla']], [], false)
        .length,
      'Tsuga heterophylla'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tsuga mertensiana']], [], false).length,
      'Tsuga mertensiana'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Tulbaghia alliacea']], [], false)
        .length,
      'Tulbaghia alliacea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tulbaghia violacea']], [], false)
        .length,
      'Tulbaghia violacea'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tulipa clusiana stellata']], [], false)
        .length,
      'Tulipa clusiana stellata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tulipa edulis']], [], false).length,
      'Tulipa edulis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tulipa gesneriana']], [], false).length,
      'Tulipa gesneriana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Tulipa montana']], [], false).length,
      'Tulipa montana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Tulipa sylvestris']], [], false).length,
      'Tulipa sylvestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tupeia antarctica']], [], false).length,
      'Tupeia antarctica'
    );
    assert.equal(
      7034,
      filterAndSort(
        crops,
        [nameToCrop['Turnera diffusa aphrodisiaca']],
        [],
        false
      ).length,
      'Turnera diffusa aphrodisiaca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Turritis glabra']], [], false).length,
      'Turritis glabra'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Tussilago farfara']], [], false).length,
      'Tussilago farfara'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Tylophora ovata']], [], false).length,
      'Tylophora ovata'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Typha angustifolia']], [], false)
        .length,
      'Typha angustifolia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha bungeana']], [], false).length,
      'Typha bungeana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha davidiana']], [], false).length,
      'Typha davidiana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha domingensis']], [], false).length,
      'Typha domingensis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha glauca']], [], false).length,
      'Typha glauca'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Typha latifolia']], [], false).length,
      'Typha latifolia'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha laxmannii']], [], false).length,
      'Typha laxmannii'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha minima']], [], false).length,
      'Typha minima'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Typha orientalis']], [], false).length,
      'Typha orientalis'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Ugni molinae']], [], false).length,
      'Ugni molinae'
    );
    assert.equal(
      7214,
      filterAndSort(crops, [nameToCrop['Ulex europaeus']], [], false).length,
      'Ulex europaeus'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ulex parviflorus']], [], false).length,
      'Ulex parviflorus'
    );
    assert.equal(
      7038,
      filterAndSort(crops, [nameToCrop['Ullucus tuberosus']], [], false).length,
      'Ullucus tuberosus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus alata']], [], false).length,
      'Ulmus alata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ulmus americana']], [], false).length,
      'Ulmus americana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus davidiana']], [], false).length,
      'Ulmus davidiana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus glabra']], [], false).length,
      'Ulmus glabra'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus japonica']], [], false).length,
      'Ulmus japonica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus laciniata']], [], false).length,
      'Ulmus laciniata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus macrocarpa']], [], false).length,
      'Ulmus macrocarpa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus parvifolia']], [], false).length,
      'Ulmus parvifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ulmus procera']], [], false).length,
      'Ulmus procera'
    );
    assert.equal(
      7121,
      filterAndSort(crops, [nameToCrop['Ulmus pumila']], [], false).length,
      'Ulmus pumila'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Ulmus rubra']], [], false).length,
      'Ulmus rubra'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Ulmus thomasii']], [], false).length,
      'Ulmus thomasii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Ulmus villosa']], [], false).length,
      'Ulmus villosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Ulmus wallichiana']], [], false).length,
      'Ulmus wallichiana'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Umbellularia californica']], [], false)
        .length,
      'Umbellularia californica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Umbilicus rupestris']], [], false)
        .length,
      'Umbilicus rupestris'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Uncaria rhynchophylla']], [], false)
        .length,
      'Uncaria rhynchophylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Uniola paniculata']], [], false).length,
      'Uniola paniculata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urceola micrantha']], [], false).length,
      'Urceola micrantha'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Urginea maritima']], [], false).length,
      'Urginea maritima'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urospermum dalechampii']], [], false)
        .length,
      'Urospermum dalechampii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica angustifolia']], [], false)
        .length,
      'Urtica angustifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica breweri']], [], false).length,
      'Urtica breweri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica californica']], [], false)
        .length,
      'Urtica californica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica cannabina']], [], false).length,
      'Urtica cannabina'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Urtica dioica']], [], false).length,
      'Urtica dioica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica gracilis']], [], false).length,
      'Urtica gracilis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica holosericea']], [], false)
        .length,
      'Urtica holosericea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica hyperborea']], [], false).length,
      'Urtica hyperborea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica incisa']], [], false).length,
      'Urtica incisa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica laetivirens']], [], false)
        .length,
      'Urtica laetivirens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica lyallii']], [], false).length,
      'Urtica lyallii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica parviflora']], [], false).length,
      'Urtica parviflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica pilulifera']], [], false).length,
      'Urtica pilulifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica platyphylla']], [], false)
        .length,
      'Urtica platyphylla'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica procera']], [], false).length,
      'Urtica procera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica serra']], [], false).length,
      'Urtica serra'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica thunbergiana']], [], false)
        .length,
      'Urtica thunbergiana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Urtica urens']], [], false).length,
      'Urtica urens'
    );
    assert.equal(
      180,
      filterAndSort(crops, [nameToCrop['Utricularia vulgaris']], [], false)
        .length,
      'Utricularia vulgaris'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Uvularia grandiflora']], [], false)
        .length,
      'Uvularia grandiflora'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Uvularia perfoliata']], [], false)
        .length,
      'Uvularia perfoliata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Uvularia sessilifolia']], [], false)
        .length,
      'Uvularia sessilifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vaccaria hispanica']], [], false)
        .length,
      'Vaccaria hispanica'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium alaskensis']], [], false)
        .length,
      'Vaccinium alaskensis'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Vaccinium amoenum']], [], false).length,
      'Vaccinium amoenum'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium angustifolium']], [], false)
        .length,
      'Vaccinium angustifolium'
    );
    assert.equal(
      6487,
      filterAndSort(
        crops,
        [nameToCrop['Vaccinium angustifolium laevifolium']],
        [],
        false
      ).length,
      'Vaccinium angustifolium laevifolium'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium arboreum']], [], false)
        .length,
      'Vaccinium arboreum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium arbuscula']], [], false)
        .length,
      'Vaccinium arbuscula'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium arctostaphylos']], [], false)
        .length,
      'Vaccinium arctostaphylos'
    );
    assert.equal(
      7040,
      filterAndSort(crops, [nameToCrop['Vaccinium ashei']], [], false).length,
      'Vaccinium ashei'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium bracteatum']], [], false)
        .length,
      'Vaccinium bracteatum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium brittonii']], [], false)
        .length,
      'Vaccinium brittonii'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium caesariense']], [], false)
        .length,
      'Vaccinium caesariense'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium caespitosum']], [], false)
        .length,
      'Vaccinium caespitosum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium ciliatum']], [], false)
        .length,
      'Vaccinium ciliatum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium constablaei']], [], false)
        .length,
      'Vaccinium constablaei'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium corymbosum']], [], false)
        .length,
      'Vaccinium corymbosum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium crassifolium']], [], false)
        .length,
      'Vaccinium crassifolium'
    );
    assert.equal(
      6503,
      filterAndSort(crops, [nameToCrop['Vaccinium cylindraceum']], [], false)
        .length,
      'Vaccinium cylindraceum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium darrowi']], [], false).length,
      'Vaccinium darrowi'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium deliciosum']], [], false)
        .length,
      'Vaccinium deliciosum'
    );
    assert.equal(
      6873,
      filterAndSort(crops, [nameToCrop['Vaccinium duclouxii']], [], false)
        .length,
      'Vaccinium duclouxii'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium elliottii']], [], false)
        .length,
      'Vaccinium elliottii'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium erythrocarpum']], [], false)
        .length,
      'Vaccinium erythrocarpum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium formosum']], [], false)
        .length,
      'Vaccinium formosum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Vaccinium fuscatum']], [], false)
        .length,
      'Vaccinium fuscatum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium hirsutum']], [], false)
        .length,
      'Vaccinium hirsutum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium hirtum']], [], false).length,
      'Vaccinium hirtum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium japonicum']], [], false)
        .length,
      'Vaccinium japonicum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium koreanum']], [], false)
        .length,
      'Vaccinium koreanum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium leucanthum']], [], false)
        .length,
      'Vaccinium leucanthum'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium macrocarpon']], [], false)
        .length,
      'Vaccinium macrocarpon'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium melanocarpum']], [], false)
        .length,
      'Vaccinium melanocarpum'
    );
    assert.equal(
      7058,
      filterAndSort(crops, [nameToCrop['Vaccinium membranaceum']], [], false)
        .length,
      'Vaccinium membranaceum'
    );
    assert.equal(
      7039,
      filterAndSort(crops, [nameToCrop['Vaccinium modestum']], [], false)
        .length,
      'Vaccinium modestum'
    );
    assert.equal(
      6873,
      filterAndSort(crops, [nameToCrop['Vaccinium mortinia']], [], false)
        .length,
      'Vaccinium mortinia'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium myrsinites']], [], false)
        .length,
      'Vaccinium myrsinites'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium myrtilloides']], [], false)
        .length,
      'Vaccinium myrtilloides'
    );
    assert.equal(
      6959,
      filterAndSort(crops, [nameToCrop['Vaccinium myrtillus']], [], false)
        .length,
      'Vaccinium myrtillus'
    );
    assert.equal(
      6873,
      filterAndSort(crops, [nameToCrop['Vaccinium neglectum']], [], false)
        .length,
      'Vaccinium neglectum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium nummularia']], [], false)
        .length,
      'Vaccinium nummularia'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium occidentalis']], [], false)
        .length,
      'Vaccinium occidentalis'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium oldhamii']], [], false)
        .length,
      'Vaccinium oldhamii'
    );
    assert.equal(
      6959,
      filterAndSort(crops, [nameToCrop['Vaccinium ovalifolium']], [], false)
        .length,
      'Vaccinium ovalifolium'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium ovatum']], [], false).length,
      'Vaccinium ovatum'
    );
    assert.equal(
      6490,
      filterAndSort(crops, [nameToCrop['Vaccinium oxycoccos']], [], false)
        .length,
      'Vaccinium oxycoccos'
    );
    assert.equal(
      6873,
      filterAndSort(crops, [nameToCrop['Vaccinium padifolium']], [], false)
        .length,
      'Vaccinium padifolium'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium parvifolium']], [], false)
        .length,
      'Vaccinium parvifolium'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Vaccinium praestans']], [], false)
        .length,
      'Vaccinium praestans'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium salicinum']], [], false)
        .length,
      'Vaccinium salicinum'
    );
    assert.equal(
      6959,
      filterAndSort(crops, [nameToCrop['Vaccinium scoparium']], [], false)
        .length,
      'Vaccinium scoparium'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium simulatum']], [], false)
        .length,
      'Vaccinium simulatum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium smallii']], [], false).length,
      'Vaccinium smallii'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium sprengelii']], [], false)
        .length,
      'Vaccinium sprengelii'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Vaccinium stamineum']], [], false)
        .length,
      'Vaccinium stamineum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium tallapausae']], [], false)
        .length,
      'Vaccinium tallapausae'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium tenellum']], [], false)
        .length,
      'Vaccinium tenellum'
    );
    assert.equal(
      6487,
      filterAndSort(crops, [nameToCrop['Vaccinium uliginosum']], [], false)
        .length,
      'Vaccinium uliginosum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium vaccillans']], [], false)
        .length,
      'Vaccinium vaccillans'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium vacciniaceum']], [], false)
        .length,
      'Vaccinium vacciniaceum'
    );
    assert.equal(
      7057,
      filterAndSort(crops, [nameToCrop['Vaccinium virgatum']], [], false)
        .length,
      'Vaccinium virgatum'
    );
    assert.equal(
      7056,
      filterAndSort(crops, [nameToCrop['Vaccinium vitis-idaea']], [], false)
        .length,
      'Vaccinium vitis-idaea'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana amurensis']], [], false)
        .length,
      'Valeriana amurensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana capitata']], [], false)
        .length,
      'Valeriana capitata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Valeriana celtica']], [], false).length,
      'Valeriana celtica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana ciliata']], [], false).length,
      'Valeriana ciliata'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Valeriana dioica']], [], false).length,
      'Valeriana dioica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana fauriei']], [], false).length,
      'Valeriana fauriei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana hardwickii']], [], false)
        .length,
      'Valeriana hardwickii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana jatamansii']], [], false)
        .length,
      'Valeriana jatamansii'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana obovata']], [], false).length,
      'Valeriana obovata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana occidentalis']], [], false)
        .length,
      'Valeriana occidentalis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Valeriana officinalis']], [], false)
        .length,
      'Valeriana officinalis'
    );
    assert.equal(
      7224,
      filterAndSort(crops, [nameToCrop['Valeriana phu']], [], false).length,
      'Valeriana phu'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Valeriana sambucifolia']], [], false)
        .length,
      'Valeriana sambucifolia'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana sitchensis']], [], false)
        .length,
      'Valeriana sitchensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana toluccana']], [], false)
        .length,
      'Valeriana toluccana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valeriana uliginosa']], [], false)
        .length,
      'Valeriana uliginosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valerianella carinata']], [], false)
        .length,
      'Valerianella carinata'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Valerianella chenopodifolia']],
        [],
        false
      ).length,
      'Valerianella chenopodifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Valerianella eriocarpa']], [], false)
        .length,
      'Valerianella eriocarpa'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Valerianella locusta']], [], false)
        .length,
      'Valerianella locusta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Valerianella radiata']], [], false)
        .length,
      'Valerianella radiata'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Vallisneria americana']], [], false)
        .length,
      'Vallisneria americana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Vallisneria spiralis']], [], false)
        .length,
      'Vallisneria spiralis'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Veratrum album']], [], false).length,
      'Veratrum album'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Veratrum californicum']], [], false)
        .length,
      'Veratrum californicum'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Veratrum maackii parviflorum']],
        [],
        false
      ).length,
      'Veratrum maackii parviflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Veratrum nigrum']], [], false).length,
      'Veratrum nigrum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Veratrum viride']], [], false).length,
      'Veratrum viride'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Verbascum blattaria']], [], false)
        .length,
      'Verbascum blattaria'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Verbascum densiflorum']], [], false)
        .length,
      'Verbascum densiflorum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Verbascum lychnitis']], [], false)
        .length,
      'Verbascum lychnitis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Verbascum nigrum']], [], false).length,
      'Verbascum nigrum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Verbascum phlomoides']], [], false)
        .length,
      'Verbascum phlomoides'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Verbascum pulverulentum']], [], false)
        .length,
      'Verbascum pulverulentum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Verbascum thapsus']], [], false).length,
      'Verbascum thapsus'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Verbena hastata']], [], false).length,
      'Verbena hastata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Verbena officinalis']], [], false)
        .length,
      'Verbena officinalis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Verbena stricta']], [], false).length,
      'Verbena stricta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Verbena urticifolia']], [], false)
        .length,
      'Verbena urticifolia'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Vernonia glauca']], [], false).length,
      'Vernonia glauca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Veronica agrestis']], [], false).length,
      'Veronica agrestis'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Veronica americana']], [], false)
        .length,
      'Veronica americana'
    );
    assert.equal(
      192,
      filterAndSort(
        crops,
        [nameToCrop['Veronica anagallis-aquatica']],
        [],
        false
      ).length,
      'Veronica anagallis-aquatica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Veronica arvensis']], [], false).length,
      'Veronica arvensis'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Veronica beccabunga']], [], false)
        .length,
      'Veronica beccabunga'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Veronica catenata']], [], false).length,
      'Veronica catenata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Veronica chamaedrys']], [], false)
        .length,
      'Veronica chamaedrys'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Veronica didyma']], [], false).length,
      'Veronica didyma'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Veronica hederifolia']], [], false)
        .length,
      'Veronica hederifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Veronica longifolia']], [], false)
        .length,
      'Veronica longifolia'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Veronica officinalis']], [], false)
        .length,
      'Veronica officinalis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Veronica peregrina']], [], false)
        .length,
      'Veronica peregrina'
    );
    assert.equal(
      191,
      filterAndSort(crops, [nameToCrop['Veronica scutellata']], [], false)
        .length,
      'Veronica scutellata'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Veronica spuria']], [], false).length,
      'Veronica spuria'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Veronica undulata']], [], false).length,
      'Veronica undulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Veronicastrum axillare']], [], false)
        .length,
      'Veronicastrum axillare'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Veronicastrum sibiricum']], [], false)
        .length,
      'Veronicastrum sibiricum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Veronicastrum virginicum']], [], false)
        .length,
      'Veronicastrum virginicum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Vetiveria zizanioides']], [], false)
        .length,
      'Vetiveria zizanioides'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum betulifolium']], [], false)
        .length,
      'Viburnum betulifolium'
    );
    assert.equal(
      6639,
      filterAndSort(crops, [nameToCrop['Viburnum cassinoides']], [], false)
        .length,
      'Viburnum cassinoides'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Viburnum cordifolium']], [], false)
        .length,
      'Viburnum cordifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum corylifolium']], [], false)
        .length,
      'Viburnum corylifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum cotinifolium']], [], false)
        .length,
      'Viburnum cotinifolium'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum cylindricum']], [], false)
        .length,
      'Viburnum cylindricum'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Viburnum dentatum']], [], false).length,
      'Viburnum dentatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum dilatatum']], [], false)
        .length,
      'Viburnum dilatatum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum edule']], [], false).length,
      'Viburnum edule'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum erosum']], [], false).length,
      'Viburnum erosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum erubescens']], [], false)
        .length,
      'Viburnum erubescens'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Viburnum erubescens gracilipes']],
        [],
        false
      ).length,
      'Viburnum erubescens gracilipes'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum farreri']], [], false).length,
      'Viburnum farreri'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum foetens']], [], false).length,
      'Viburnum foetens'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum fordiae']], [], false).length,
      'Viburnum fordiae'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Viburnum furcatum']], [], false).length,
      'Viburnum furcatum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum grandiflorum']], [], false)
        .length,
      'Viburnum grandiflorum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum japonicum']], [], false)
        .length,
      'Viburnum japonicum'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Viburnum lantana']], [], false).length,
      'Viburnum lantana'
    );
    assert.equal(
      7116,
      filterAndSort(crops, [nameToCrop['Viburnum lantanoides']], [], false)
        .length,
      'Viburnum lantanoides'
    );
    assert.equal(
      6646,
      filterAndSort(crops, [nameToCrop['Viburnum lentago']], [], false).length,
      'Viburnum lentago'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum mongolicum']], [], false)
        .length,
      'Viburnum mongolicum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Viburnum mullaha']], [], false).length,
      'Viburnum mullaha'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum nudum']], [], false).length,
      'Viburnum nudum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Viburnum odoratissimum']], [], false)
        .length,
      'Viburnum odoratissimum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Viburnum opulus']], [], false).length,
      'Viburnum opulus'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum phlebotrichum']], [], false)
        .length,
      'Viburnum phlebotrichum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum plicatum']], [], false).length,
      'Viburnum plicatum'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Viburnum prunifolium']], [], false)
        .length,
      'Viburnum prunifolium'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum rufidulum']], [], false)
        .length,
      'Viburnum rufidulum'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Viburnum sempervirens']], [], false)
        .length,
      'Viburnum sempervirens'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum setigerum']], [], false)
        .length,
      'Viburnum setigerum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum sieboldii']], [], false)
        .length,
      'Viburnum sieboldii'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Viburnum suspensum']], [], false)
        .length,
      'Viburnum suspensum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum tinus']], [], false).length,
      'Viburnum tinus'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Viburnum trilobum']], [], false).length,
      'Viburnum trilobum'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum veitchii']], [], false).length,
      'Viburnum veitchii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum wrightii']], [], false).length,
      'Viburnum wrightii'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum wrightii hessei']], [], false)
        .length,
      'Viburnum wrightii hessei'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viburnum x bodnantense']], [], false)
        .length,
      'Viburnum x bodnantense'
    );
    assert.equal(
      7222,
      filterAndSort(crops, [nameToCrop['Viburnum x juddii']], [], false).length,
      'Viburnum x juddii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia americana']], [], false).length,
      'Vicia americana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia amoena']], [], false).length,
      'Vicia amoena'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia amurensis']], [], false).length,
      'Vicia amurensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia articulata']], [], false).length,
      'Vicia articulata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia benghalensis']], [], false)
        .length,
      'Vicia benghalensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vicia cracca']], [], false).length,
      'Vicia cracca'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia ervilia']], [], false).length,
      'Vicia ervilia'
    );
    assert.equal(
      7216,
      filterAndSort(crops, [nameToCrop['Vicia faba equina']], [], false).length,
      'Vicia faba equina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia faba minuta']], [], false).length,
      'Vicia faba minuta'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vicia gigantea']], [], false).length,
      'Vicia gigantea'
    );
    assert.equal(
      7223,
      filterAndSort(
        crops,
        [nameToCrop['Vicia grandiflora kitaibeliana']],
        [],
        false
      ).length,
      'Vicia grandiflora kitaibeliana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia heptajuga']], [], false).length,
      'Vicia heptajuga'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia hirsuta']], [], false).length,
      'Vicia hirsuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia hirticalycina']], [], false)
        .length,
      'Vicia hirticalycina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia japonica']], [], false).length,
      'Vicia japonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia monantha']], [], false).length,
      'Vicia monantha'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia narbonensis']], [], false).length,
      'Vicia narbonensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia nipponica']], [], false).length,
      'Vicia nipponica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia noeana']], [], false).length,
      'Vicia noeana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia pisiformis']], [], false).length,
      'Vicia pisiformis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia pseudo-orobus']], [], false)
        .length,
      'Vicia pseudo-orobus'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vicia sativa']], [], false).length,
      'Vicia sativa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vicia sativa leucosperma']], [], false)
        .length,
      'Vicia sativa leucosperma'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia sepium']], [], false).length,
      'Vicia sepium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia tenuifolia']], [], false).length,
      'Vicia tenuifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia tetrasperma']], [], false).length,
      'Vicia tetrasperma'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia tridentata']], [], false).length,
      'Vicia tridentata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia unijuga']], [], false).length,
      'Vicia unijuga'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia venosa']], [], false).length,
      'Vicia venosa'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vicia villosa']], [], false).length,
      'Vicia villosa'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Vigna unguiculata cylindrica']],
        [],
        false
      ).length,
      'Vigna unguiculata cylindrica'
    );
    assert.equal(
      6647,
      filterAndSort(crops, [nameToCrop['Viguiera multiflora']], [], false)
        .length,
      'Viguiera multiflora'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Vinca major']], [], false).length,
      'Vinca major'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Vinca minor']], [], false).length,
      'Vinca minor'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Vincetoxicum hirundinaria']], [], false)
        .length,
      'Vincetoxicum hirundinaria'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola acuminata']], [], false).length,
      'Viola acuminata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola adunca']], [], false).length,
      'Viola adunca'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola biflora']], [], false).length,
      'Viola biflora'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola brevistipulata']], [], false)
        .length,
      'Viola brevistipulata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola canadensis']], [], false).length,
      'Viola canadensis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola canina']], [], false).length,
      'Viola canina'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola collina']], [], false).length,
      'Viola collina'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola cornuta']], [], false).length,
      'Viola cornuta'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Viola cucullata']], [], false).length,
      'Viola cucullata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola diffusa']], [], false).length,
      'Viola diffusa'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola epipsela']], [], false).length,
      'Viola epipsela'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viola esculenta']], [], false).length,
      'Viola esculenta'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola glabella']], [], false).length,
      'Viola glabella'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola grypoceras']], [], false).length,
      'Viola grypoceras'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola japonica']], [], false).length,
      'Viola japonica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola keiskei']], [], false).length,
      'Viola keiskei'
    );
    assert.equal(
      6636,
      filterAndSort(crops, [nameToCrop['Viola labradorica']], [], false).length,
      'Viola labradorica'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola langsdorffii']], [], false)
        .length,
      'Viola langsdorffii'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Viola mandschurica']], [], false)
        .length,
      'Viola mandschurica'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola mirabilis']], [], false).length,
      'Viola mirabilis'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola obtusa']], [], false).length,
      'Viola obtusa'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Viola odorata']], [], false).length,
      'Viola odorata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Viola palmata']], [], false).length,
      'Viola palmata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola patrinii']], [], false).length,
      'Viola patrinii'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola pedata']], [], false).length,
      'Viola pedata'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Viola pedunculata']], [], false).length,
      'Viola pedunculata'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola pinnata']], [], false).length,
      'Viola pinnata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola prionantha']], [], false).length,
      'Viola prionantha'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Viola reichanbachiana']], [], false)
        .length,
      'Viola reichanbachiana'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola riviniana']], [], false).length,
      'Viola riviniana'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola sempervirens']], [], false)
        .length,
      'Viola sempervirens'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola sororia']], [], false).length,
      'Viola sororia'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola tokubuchiana']], [], false)
        .length,
      'Viola tokubuchiana'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Viola tricolor']], [], false).length,
      'Viola tricolor'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola vaginata']], [], false).length,
      'Viola vaginata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola variegata']], [], false).length,
      'Viola variegata'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola verecunda']], [], false).length,
      'Viola verecunda'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola violacea']], [], false).length,
      'Viola violacea'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola x wittrockiana']], [], false)
        .length,
      'Viola x wittrockiana'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Viola yezoensis']], [], false).length,
      'Viola yezoensis'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Viscum album']], [], false).length,
      'Viscum album'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitex agnus-castus']], [], false)
        .length,
      'Vitex agnus-castus'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitex cannabifolia']], [], false)
        .length,
      'Vitex cannabifolia'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Vitex negundo']], [], false).length,
      'Vitex negundo'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis acerifolia']], [], false).length,
      'Vitis acerifolia'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Vitis aestivalis']], [], false).length,
      'Vitis aestivalis'
    );
    assert.equal(
      7120,
      filterAndSort(
        crops,
        [nameToCrop['Vitis aestivalis argentifolia']],
        [],
        false
      ).length,
      'Vitis aestivalis argentifolia'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis amurensis']], [], false).length,
      'Vitis amurensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis arizonica']], [], false).length,
      'Vitis arizonica'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis baileyana']], [], false).length,
      'Vitis baileyana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis belaii']], [], false).length,
      'Vitis belaii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis berlandieri']], [], false).length,
      'Vitis berlandieri'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis californica']], [], false).length,
      'Vitis californica'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis cinerea']], [], false).length,
      'Vitis cinerea'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis cinerea floridana']], [], false)
        .length,
      'Vitis cinerea floridana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis coignetiae']], [], false).length,
      'Vitis coignetiae'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis cordifolia']], [], false).length,
      'Vitis cordifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis davidii']], [], false).length,
      'Vitis davidii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis flexuosa']], [], false).length,
      'Vitis flexuosa'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Vitis girdiana']], [], false).length,
      'Vitis girdiana'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis labrusca']], [], false).length,
      'Vitis labrusca'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis labruscana']], [], false).length,
      'Vitis labruscana'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Vitis lanata']], [], false).length,
      'Vitis lanata'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis lincecumii']], [], false).length,
      'Vitis lincecumii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis monticola']], [], false).length,
      'Vitis monticola'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis munsoniana']], [], false).length,
      'Vitis munsoniana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis mustangensis']], [], false)
        .length,
      'Vitis mustangensis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis palmata']], [], false).length,
      'Vitis palmata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis parvifolia']], [], false).length,
      'Vitis parvifolia'
    );
    assert.equal(
      6643,
      filterAndSort(crops, [nameToCrop['Vitis riparia']], [], false).length,
      'Vitis riparia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis romanetii']], [], false).length,
      'Vitis romanetii'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis rotundifolia']], [], false)
        .length,
      'Vitis rotundifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis rupestris']], [], false).length,
      'Vitis rupestris'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis saccharifera']], [], false)
        .length,
      'Vitis saccharifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis thunbergii']], [], false).length,
      'Vitis thunbergii'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis vinifera']], [], false).length,
      'Vitis vinifera'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Vitis vulpina']], [], false).length,
      'Vitis vulpina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Vitis x doaniana']], [], false).length,
      'Vitis x doaniana'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Wasabia japonica']], [], false).length,
      'Wasabia japonica'
    );
    assert.equal(
      7038,
      filterAndSort(crops, [nameToCrop['Washingtonia filifera']], [], false)
        .length,
      'Washingtonia filifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Weigela coraeensis']], [], false)
        .length,
      'Weigela coraeensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Weigela decora']], [], false).length,
      'Weigela decora'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Weigela floribunda']], [], false)
        .length,
      'Weigela floribunda'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Weigela florida']], [], false).length,
      'Weigela florida'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Weigela hortensis']], [], false).length,
      'Weigela hortensis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Weigela japonica']], [], false).length,
      'Weigela japonica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Weinmannia racemosa']], [], false)
        .length,
      'Weinmannia racemosa'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Wikstroemia japonica']], [], false)
        .length,
      'Wikstroemia japonica'
    );
    assert.equal(
      7037,
      filterAndSort(crops, [nameToCrop['Wikstroemia sikokiana']], [], false)
        .length,
      'Wikstroemia sikokiana'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Wisteria floribunda']], [], false)
        .length,
      'Wisteria floribunda'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Wisteria frutescens']], [], false)
        .length,
      'Wisteria frutescens'
    );
    assert.equal(
      7195,
      filterAndSort(crops, [nameToCrop['Wisteria japonica']], [], false).length,
      'Wisteria japonica'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Wisteria sinensis']], [], false).length,
      'Wisteria sinensis'
    );
    assert.equal(
      7212,
      filterAndSort(crops, [nameToCrop['Wisteria venusta']], [], false).length,
      'Wisteria venusta'
    );
    assert.equal(
      7213,
      filterAndSort(crops, [nameToCrop['Wisteria villosa']], [], false).length,
      'Wisteria villosa'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Withania somnifera']], [], false)
        .length,
      'Withania somnifera'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Wittsteinia vacciniacea']], [], false)
        .length,
      'Wittsteinia vacciniacea'
    );
    assert.equal(
      189,
      filterAndSort(crops, [nameToCrop['Wolffia arrhiza']], [], false).length,
      'Wolffia arrhiza'
    );
    assert.equal(
      7030,
      filterAndSort(crops, [nameToCrop['Woodwardia radicans']], [], false)
        .length,
      'Woodwardia radicans'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Wyethia amplexicaulis']], [], false)
        .length,
      'Wyethia amplexicaulis'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Wyethia angustifolia']], [], false)
        .length,
      'Wyethia angustifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Wyethia helianthoides']], [], false)
        .length,
      'Wyethia helianthoides'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Wyethia longicaulis']], [], false)
        .length,
      'Wyethia longicaulis'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Wyethia mollis']], [], false).length,
      'Wyethia mollis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Wyethia robusta']], [], false).length,
      'Wyethia robusta'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Xanthium commune']], [], false).length,
      'Xanthium commune'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Xanthium spinosum']], [], false).length,
      'Xanthium spinosum'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Xanthium strumarium']], [], false)
        .length,
      'Xanthium strumarium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Xanthoceras sorbifolium']], [], false)
        .length,
      'Xanthoceras sorbifolium'
    );
    assert.equal(
      7060,
      filterAndSort(crops, [nameToCrop['Xanthorhiza simplicissima']], [], false)
        .length,
      'Xanthorhiza simplicissima'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Xanthorrhoea australis']], [], false)
        .length,
      'Xanthorrhoea australis'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Xerophyllum tenax']], [], false).length,
      'Xerophyllum tenax'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Xylosma japonica']], [], false).length,
      'Xylosma japonica'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Xyris caroliniana']], [], false).length,
      'Xyris caroliniana'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Youngia chelidoniifolia']], [], false)
        .length,
      'Youngia chelidoniifolia'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Youngia denticulata']], [], false)
        .length,
      'Youngia denticulata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Youngia japonica']], [], false).length,
      'Youngia japonica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Yucca aloifolia']], [], false).length,
      'Yucca aloifolia'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Yucca angustissima']], [], false)
        .length,
      'Yucca angustissima'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Yucca baccata']], [], false).length,
      'Yucca baccata'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Yucca brevifolia']], [], false).length,
      'Yucca brevifolia'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Yucca constricta']], [], false).length,
      'Yucca constricta'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Yucca elata']], [], false).length,
      'Yucca elata'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Yucca filamentosa']], [], false).length,
      'Yucca filamentosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Yucca filifera']], [], false).length,
      'Yucca filifera'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Yucca glauca']], [], false).length,
      'Yucca glauca'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Yucca gloriosa']], [], false).length,
      'Yucca gloriosa'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Yucca harrimaniae']], [], false).length,
      'Yucca harrimaniae'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Yucca recurvifolia']], [], false)
        .length,
      'Yucca recurvifolia'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Yucca rupicola']], [], false).length,
      'Yucca rupicola'
    );
    assert.equal(
      7205,
      filterAndSort(crops, [nameToCrop['Yucca schidigera']], [], false).length,
      'Yucca schidigera'
    );
    assert.equal(
      7035,
      filterAndSort(crops, [nameToCrop['Yucca smalliana']], [], false).length,
      'Yucca smalliana'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Yucca whipplei']], [], false).length,
      'Yucca whipplei'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Yushania anceps']], [], false).length,
      'Yushania anceps'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Yushania maling']], [], false).length,
      'Yushania maling'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Zannichellia palustris']], [], false)
        .length,
      'Zannichellia palustris'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Zantedeschia aethiopica']], [], false)
        .length,
      'Zantedeschia aethiopica'
    );
    assert.equal(
      7034,
      filterAndSort(crops, [nameToCrop['Zanthoxylum ailanthoides']], [], false)
        .length,
      'Zanthoxylum ailanthoides'
    );
    assert.equal(
      7120,
      filterAndSort(crops, [nameToCrop['Zanthoxylum americanum']], [], false)
        .length,
      'Zanthoxylum americanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum alatum']], [], false)
        .length,
      'Zanthoxylum alatum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum beecheyanum']], [], false)
        .length,
      'Zanthoxylum beecheyanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum bungeanum']], [], false)
        .length,
      'Zanthoxylum bungeanum'
    );
    assert.equal(
      7220,
      filterAndSort(
        crops,
        [nameToCrop['Zanthoxylum clava-herculis']],
        [],
        false
      ).length,
      'Zanthoxylum clava-herculis'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum coreanum']], [], false)
        .length,
      'Zanthoxylum coreanum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum nitidum']], [], false)
        .length,
      'Zanthoxylum nitidum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum piperitum']], [], false)
        .length,
      'Zanthoxylum piperitum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum planispinum']], [], false)
        .length,
      'Zanthoxylum planispinum'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum schinifolium']], [], false)
        .length,
      'Zanthoxylum schinifolium'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zanthoxylum simulans']], [], false)
        .length,
      'Zanthoxylum simulans'
    );
    assert.equal(
      7027,
      filterAndSort(crops, [nameToCrop['Zea mays']], [], false).length,
      'Zea mays'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zelkova schneideriana']], [], false)
        .length,
      'Zelkova schneideriana'
    );
    assert.equal(
      7219,
      filterAndSort(crops, [nameToCrop['Zelkova serrata']], [], false).length,
      'Zelkova serrata'
    );
    assert.equal(
      7202,
      filterAndSort(crops, [nameToCrop['Zephyranthes atamasca']], [], false)
        .length,
      'Zephyranthes atamasca'
    );
    assert.equal(
      7223,
      filterAndSort(crops, [nameToCrop['Zieria smithii']], [], false).length,
      'Zieria smithii'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Zizania aquatica']], [], false).length,
      'Zizania aquatica'
    );
    assert.equal(
      186,
      filterAndSort(crops, [nameToCrop['Zizania latifolia']], [], false).length,
      'Zizania latifolia'
    );
    assert.equal(
      7123,
      filterAndSort(crops, [nameToCrop['Zizia aurea']], [], false).length,
      'Zizia aurea'
    );
    assert.equal(
      7221,
      filterAndSort(crops, [nameToCrop['Ziziphus jujuba']], [], false).length,
      'Ziziphus jujuba'
    );
    assert.equal(
      192,
      filterAndSort(crops, [nameToCrop['Zostera marina']], [], false).length,
      'Zostera marina'
    );
    assert.equal(
      7220,
      filterAndSort(crops, [nameToCrop['Zoysia japonica']], [], false).length,
      'Zoysia japonica'
    );
    assert.equal(
      7203,
      filterAndSort(crops, [nameToCrop['Zygophyllum fabago']], [], false)
        .length,
      'Zygophyllum fabago'
    );
  }).timeout(0);
});
